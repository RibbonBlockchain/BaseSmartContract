{
	"id": "bea6654048e61819814cc3a110ab9c95",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/ribbonVault1.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity 0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ninterface IERC20T {\r\n    function decimals()external view returns (uint8);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function burn(address account, uint256 value)external;\r\n\r\n \r\n    \r\n}\r\n/// @title RibbonVault\r\ncontract  vault is Ownable,EIP712 {\r\n  using SafeERC20 for IERC20;\r\n    bytes32 private constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 deadline)\");\r\n        \r\n    IERC20T _Ipaymentcoin;\r\n    // IERC20T _Ipointscoin;\r\n    IERC20 private _IpaymentcoinT;\r\n    // IERC20 private _IpointscoinT;\r\n    /*//////////////////////////////////////////////////////////////////////////\r\n                                  STATE VARIABLES\r\n    //////////////////////////////////////////////////////////////////////////*/\r\n    uint public depositFee;\r\n    uint public rate;\r\n    uint public withdrawalFee;\r\n    uint public pointsMin;\r\n    uint public initContractBalancePaymentCoin;\r\n    uint public claimedPaymentCoin;\r\n    uint public TotalfeescollectedPaymentCoin;\r\n    string public vaultName;\r\n    address public admin;\r\n    bool public freezePermit;\r\n\r\n    event swap(address indexed user,uint indexed timestamp,uint pointToSwap,uint paymentTokenRecieved,uint _fees);\r\n    event PointsClaimed(address indexed user,uint indexed timestamp,uint amount);\r\n    error ERC2612ExpiredSignature(uint256 deadline);\r\n    error ERC2612InvalidSigner(address signer, address owner);\r\n\r\n    mapping (uint8=>bool) sig_v;\r\n    mapping (bytes32=>bool) sig_r;\r\n    mapping (bytes32=>bool) sig_s;\r\n    \r\n    /*//////////////////////////////////////////////////////////////////////////\r\n                                     CONSTRUCTOR\r\n    //////////////////////////////////////////////////////////////////////////*/\r\n    /// @param owner the admin of the contract responsible for offchain signing\r\n    /// @param name the name of the vault\r\n  \r\n    /// @param paymentAddress the contract address that the points would be swaped into\r\n    constructor(address owner,string memory name,address paymentAddress)Ownable(owner)EIP712(name, \"1\"){\r\n        vaultName=name;\r\n        depositFee =10;\r\n        rate = 5000;\r\n        _Ipaymentcoin = IERC20T(paymentAddress);\r\n        _IpaymentcoinT = IERC20(paymentAddress);\r\n        admin = owner;  \r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////////////////\r\n                                    VIEW FUNCTIONS\r\n    //////////////////////////////////////////////////////////////////////////*/\r\n\r\n    /// @dev used to calcultae amount of the worldcoin token or other payment token to recieve at a specific rate specified\r\n    function checkAmountToRecive(uint pointToSwap)public view returns(uint){\r\n          uint _rate = (pointToSwap * 1*10**_Ipaymentcoin.decimals())/(rate*10**18);\r\n          return _rate;\r\n          \r\n    }\r\n    \r\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n    /*//////////////////////////////////////////////////////////////////////////\r\n                                PUBLIC FUNCTIONS\r\n    //////////////////////////////////////////////////////////////////////////*/\r\n    /// @dev update padmin address\r\n    function setAdmin(address _admin)public onlyOwner{\r\n      admin =_admin;\r\n    }\r\n \r\n    /// @dev update points contract address and worldcoin token or other payment contract address\r\n    function setpaymentTokenAndpoints(address paymentAddress)public onlyOwner{\r\n       _Ipaymentcoin = IERC20T(paymentAddress);\r\n       _IpaymentcoinT = IERC20(paymentAddress);\r\n    \r\n     \r\n    }\r\n\r\n    /// @dev set depositFee  without decimal \r\n    function setPaymentDepositfees(uint _fee)public onlyOwner{\r\n       depositFee = _fee;\r\n    }\r\n\r\n    /// @dev set withdrawalFee  without decimal \r\n    function setWithdrawalFee(uint _fee)public onlyOwner{\r\n       withdrawalFee = _fee;\r\n    }\r\n\r\n    /// @dev set _rate  without decimal \r\n    function setRate(uint _rate)public onlyOwner{\r\n         rate = _rate;\r\n    }\r\n\r\n    /// @dev set minimum points to swap without decimal\r\n    /// @notice 18 decimal was hardcoded because the points contract is 18 decimal\r\n    function setMinPointsToSWap(uint _pointsMin)public onlyOwner{\r\n         pointsMin = _pointsMin*10**18;\r\n    }\r\n\r\n    /// @dev used to stop the permit functions to claim point and and swap points to worldcoin token or other payment coin \r\n    function freezeContract(bool _freeze)public onlyOwner{\r\n     freezePermit = _freeze;\r\n    }\r\n\r\n    /// @dev used withdraw fees when a new deposit is address into the contract the computation allows fees to be deducted when new deposit is added \r\n    /// when no new deposit is added and this function is called it will revert\r\n    function withdrawfees(address feeTakerAddress) public onlyOwner{\r\n       require(feeTakerAddress != address(0),\"you are sending to zero address\");\r\n       uint contractBalance =_Ipaymentcoin.balanceOf(address(this));\r\n       uint balanceDeposited = (contractBalance + claimedPaymentCoin + TotalfeescollectedPaymentCoin) - initContractBalancePaymentCoin;\r\n       initContractBalancePaymentCoin += balanceDeposited;\r\n       uint _fee = (balanceDeposited*depositFee)/100;\r\n       require(_fee > 0,\"no new deposit added\");\r\n       TotalfeescollectedPaymentCoin += _fee;\r\n       _IpaymentcoinT.safeTransfer(feeTakerAddress,_fee);\r\n    }\r\n\r\n\r\n \r\n    /// @dev admin signs a user ,amount ,deadline  ofchain and pass the signature  to the user to swap points to worldcoin or payment coin ,but this is done automatically \r\n    // when the user clicks the swap button\r\n    function permitSwapToPaymentCoin(address user,uint pointToSwap,uint256 deadline,uint8 v,bytes32 r,bytes32 s)public {\r\n        require(user != address(0),\"you are sending to zero address\");\r\n        _permit(user,pointToSwap,deadline,v,r,s);\r\n        require(freezePermit==false,\"contract freezed\");\r\n        // require(_Ipointscoin.balanceOf(user)>= pointToSwap,\"not enough points\");\r\n        require(pointToSwap >= pointsMin,\"points to swap less than minpoints\");\r\n        uint amount = checkAmountToRecive(pointToSwap);\r\n        claimedPaymentCoin += amount;\r\n        uint _fee = (amount*withdrawalFee)/100;\r\n        uint amoutAfterFee = amount -_fee;\r\n        // _Ipointscoin.burn(user,pointToSwap);\r\n        _IpaymentcoinT.safeTransfer(user,amoutAfterFee);\r\n        _IpaymentcoinT.safeTransfer(msg.sender,_fee);\r\n        emit swap(user,block.timestamp,pointToSwap,amoutAfterFee,_fee);\r\n    }\r\n\r\n   \r\n    /// @dev this is used to withdraw any asset stuck in the contract by mistake by only the admin\r\n    function emergencyWithdraw(address _tokenAddress,address _to,uint _amount )public onlyOwner{\r\n        require(_tokenAddress != address(0),\"you are sending to zero address\");\r\n        require(_to != address(0),\"you are sending to zero address\");\r\n        require(_amount > 0,\"cant send zero amount\");\r\n        IERC20T(_tokenAddress).transfer(_to,_amount);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////////////////\r\n                            INTERNAL FUNCTIONS\r\n    //////////////////////////////////////////////////////////////////////////*/\r\n\r\n    /// @dev _permit is used for offchain signature verification of the admin\r\n    function _permit(\r\n        address user,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n       /// used to prevent signature replay to avoid signature been used more once\r\n        require(sig_v[v]==false || sig_r[r] == false || sig_s[s]==false,\"sig used\");\r\n        if (block.timestamp > deadline) {\r\n            revert ERC2612ExpiredSignature(deadline);\r\n        }\r\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, admin, user, value, deadline)); \r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        if (signer != admin) {\r\n            revert ERC2612InvalidSigner(signer, admin);\r\n        }\r\n        sig_v[v]=true;\r\n        sig_r[r]=true;\r\n        sig_s[s]=true;    \r\n    }\r\n \r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ffea97ea9216bc410a3bea4f259dcc5121a145eb893641655b743ed24b3c6de064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ffea97ea9216bc410a3bea4f259dcc5121a145eb893641655b743ed24b3c6de064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xEA SWAP8 0xEA SWAP3 AND 0xBC COINBASE EXP EXTCODESIZE 0xEA 0x4F 0x25 SWAP14 0xCC MLOAD 0x21 LOG1 GASLIMIT 0xEB DUP10 CALLDATASIZE COINBASE PUSH6 0x5B743ED24B3C PUSH14 0xE064736F6C634300081600330000 ",
							"sourceMap": "1255:3053:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3053:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ffea97ea9216bc410a3bea4f259dcc5121a145eb893641655b743ed24b3c6de064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xEA SWAP8 0xEA SWAP3 AND 0xBC COINBASE EXP EXTCODESIZE 0xEA 0x4F 0x25 SWAP14 0xCC MLOAD 0x21 LOG1 GASLIMIT 0xEB DUP10 CALLDATASIZE COINBASE PUSH6 0x5B743ED24B3C PUSH14 0xE064736F6C634300081600330000 ",
							"sourceMap": "1255:3053:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffea97ea9216bc410a3bea4f259dcc5121a145eb893641655b743ed24b3c6de064736f6c63430008160033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a9d242cb8d1e132b08ed07523d8dca1a1faf36c2e6a13b55b5fd31c48629000364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a9d242cb8d1e132b08ed07523d8dca1a1faf36c2e6a13b55b5fd31c48629000364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xD2 TIMESTAMP 0xCB DUP14 0x1E SGT 0x2B ADDMOD 0xED SMOD MSTORE RETURNDATASIZE DUP14 0xCA BYTE 0x1F 0xAF CALLDATASIZE 0xC2 0xE6 LOG1 EXTCODESIZE SSTORE 0xB5 REVERT BALANCE 0xC4 DUP7 0x29 STOP SUB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a9d242cb8d1e132b08ed07523d8dca1a1faf36c2e6a13b55b5fd31c48629000364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xD2 TIMESTAMP 0xCB DUP14 0x1E SGT 0x2B ADDMOD 0xED SMOD MSTORE RETURNDATASIZE DUP14 0xCA BYTE 0x1F 0xAF CALLDATASIZE 0xC2 0xE6 LOG1 EXTCODESIZE SSTORE 0xB5 REVERT BALANCE 0xC4 DUP7 0x29 STOP SUB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9d242cb8d1e132b08ed07523d8dca1a1faf36c2e6a13b55b5fd31c48629000364736f6c63430008160033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048368788133adad8a2ed5836490bbb77b899248b1876b369115539941dd941e364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048368788133adad8a2ed5836490bbb77b899248b1876b369115539941dd941e364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE CALLDATASIZE DUP8 DUP9 SGT GASPRICE 0xDA 0xD8 LOG2 0xED PC CALLDATASIZE 0x49 SIGNEXTEND 0xBB PUSH24 0xB899248B1876B369115539941DD941E364736F6C63430008 AND STOP CALLER ",
							"sourceMap": "344:7386:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7386:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048368788133adad8a2ed5836490bbb77b899248b1876b369115539941dd941e364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE CALLDATASIZE DUP8 DUP9 SGT GASPRICE 0xDA 0xD8 LOG2 0xED PC CALLDATASIZE 0x49 SIGNEXTEND 0xBB PUSH24 0xB899248B1876B369115539941DD941E364736F6C63430008 AND STOP CALLER ",
							"sourceMap": "344:7386:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048368788133adad8a2ed5836490bbb77b899248b1876b369115539941dd941e364736f6c63430008160033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1826,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1828,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1c71ea0880ba4c2c2ec076a847b76f6f0d50325454550c33af48e0eb2c777fd64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c1c71ea0880ba4c2c2ec076a847b76f6f0d50325454550c33af48e0eb2c777fd64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xC7 0x1E LOG0 DUP9 SIGNEXTEND LOG4 0xC2 0xC2 0xEC SMOD PUSH11 0x847B76F6F0D50325454550 0xC3 GASPRICE DELEGATECALL DUP15 0xE 0xB2 0xC7 PUSH24 0xFD64736F6C63430008160033000000000000000000000000 ",
							"sourceMap": "521:3235:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c1c71ea0880ba4c2c2ec076a847b76f6f0d50325454550c33af48e0eb2c777fd64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xC7 0x1E LOG0 DUP9 SIGNEXTEND LOG4 0xC2 0xC2 0xEC SMOD PUSH11 0x847B76F6F0D50325454550 0xC3 GASPRICE DELEGATECALL DUP15 0xE 0xB2 0xC7 PUSH24 0xFD64736F6C63430008160033000000000000000000000000 ",
							"sourceMap": "521:3235:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1c71ea0880ba4c2c2ec076a847b76f6f0d50325454550c33af48e0eb2c777fd64736f6c63430008160033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ribbonVault1.sol": {
				"IERC20T": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ribbonVault1.sol\":\"IERC20T\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ribbonVault1.sol\":{\"keccak256\":\"0x8f8b9c51e97ced8d9174570538e6138e100db36dad485830ae7e4038e1b9ecb3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3ae7b0e0bc4cb3ad099da1aa94e3d5f9335ddc9c95617f00cb4c0cd15c82f47f\",\"dweb:/ipfs/Qma8YiN5crczsHhxSwdfHmeNx6FaB6uz6H4XjXRMBSyKWp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"vault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "paymentAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PointsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pointToSwap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentTokenRecieved",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fees",
									"type": "uint256"
								}
							],
							"name": "swap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalfeescollectedPaymentCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pointToSwap",
									"type": "uint256"
								}
							],
							"name": "checkAmountToRecive",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimedPaymentCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_freeze",
									"type": "bool"
								}
							],
							"name": "freezeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freezePermit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initContractBalancePaymentCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "pointToSwap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permitSwapToPaymentCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pointsMin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pointsMin",
									"type": "uint256"
								}
							],
							"name": "setMinPointsToSWap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setPaymentDepositfees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setWithdrawalFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "paymentAddress",
									"type": "address"
								}
							],
							"name": "setpaymentTokenAndpoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "feeTakerAddress",
									"type": "address"
								}
							],
							"name": "withdrawfees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"checkAmountToRecive(uint256)": {
								"details": "used to calcultae amount of the worldcoin token or other payment token to recieve at a specific rate specified"
							},
							"constructor": {
								"params": {
									"paymentAddress": "the contract address that the points would be swaped into"
								}
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"emergencyWithdraw(address,address,uint256)": {
								"details": "this is used to withdraw any asset stuck in the contract by mistake by only the admin"
							},
							"freezeContract(bool)": {
								"details": "used to stop the permit functions to claim point and and swap points to worldcoin token or other payment coin "
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permitSwapToPaymentCoin(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "admin signs a user ,amount ,deadline  ofchain and pass the signature  to the user to swap points to worldcoin or payment coin ,but this is done automatically "
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAdmin(address)": {
								"details": "update padmin address"
							},
							"setMinPointsToSWap(uint256)": {
								"details": "set minimum points to swap without decimal"
							},
							"setPaymentDepositfees(uint256)": {
								"details": "set depositFee  without decimal "
							},
							"setRate(uint256)": {
								"details": "set _rate  without decimal "
							},
							"setWithdrawalFee(uint256)": {
								"details": "set withdrawalFee  without decimal "
							},
							"setpaymentTokenAndpoints(address)": {
								"details": "update points contract address and worldcoin token or other payment contract address"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawfees(address)": {
								"details": "used withdraw fees when a new deposit is address into the contract the computation allows fees to be deducted when new deposit is added  when no new deposit is added and this function is called it will revert"
							}
						},
						"title": "RibbonVault",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/ribbonVault1.sol\":650:8548  contract  vault is Ownable,EIP712 {... */\n  mstore(0x40, 0x0160)\n    /* \"src/ribbonVault1.sol\":2408:2713  constructor(address owner,string memory name,address paymentAddress)Ownable(owner)EIP712(name, \"1\"){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"src/ribbonVault1.sol\":2497:2501  name */\n  dup3\n  swap1\n    /* \"src/ribbonVault1.sol\":2484:2489  owner */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1801:1852   */\n  mstore\n    /* \"#utility.yul\":1774:1792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x01\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_16\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x02\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup2\n  mload\n  swap1\n  dup3\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_17\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x40\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":4677:4702   */\n  mstore\n    /* \"#utility.yul\":4718:4736   */\n  swap1\n  dup2\n  add\n    /* \"#utility.yul\":4711:4745   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":4761:4779   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":4754:4788   */\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"#utility.yul\":4804:4822   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":4797:4831   */\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"#utility.yul\":4847:4866   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":4840:4901   */\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n  swap1\n    /* \"#utility.yul\":4649:4668   */\n  0xc0\n  add\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\ntag_17:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xc0\n  mstore\n    /* \"src/ribbonVault1.sol\":2518:2527  vaultName */\n  0x0c\n    /* \"src/ribbonVault1.sol\":2518:2532  vaultName=name */\n  tag_20\n    /* \"src/ribbonVault1.sol\":2528:2532  name */\n  dup4\n    /* \"src/ribbonVault1.sol\":2518:2527  vaultName */\n  dup3\n    /* \"src/ribbonVault1.sol\":2518:2532  vaultName=name */\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"src/ribbonVault1.sol\":2555:2557  10 */\n  0x0a\n    /* \"src/ribbonVault1.sol\":2543:2553  depositFee */\n  0x05\n    /* \"src/ribbonVault1.sol\":2543:2557  depositFee =10 */\n  sstore\n    /* \"src/ribbonVault1.sol\":2575:2579  5000 */\n  0x1388\n    /* \"src/ribbonVault1.sol\":2568:2572  rate */\n  0x06\n    /* \"src/ribbonVault1.sol\":2568:2579  rate = 5000 */\n  sstore\n    /* \"src/ribbonVault1.sol\":2590:2603  _Ipaymentcoin */\n  0x03\n    /* \"src/ribbonVault1.sol\":2590:2629  _Ipaymentcoin = IERC20T(paymentAddress) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"src/ribbonVault1.sol\":2640:2654  _IpaymentcoinT */\n  0x04\n    /* \"src/ribbonVault1.sol\":2640:2679  _IpaymentcoinT = IERC20(paymentAddress) */\n  dup1\n  sload\n  dup3\n  and\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/ribbonVault1.sol\":2690:2695  admin */\n  0x0d\n    /* \"src/ribbonVault1.sol\":2690:2703  admin = owner */\n  dup1\n  sload\n  swap5\n  swap1\n  swap3\n  and\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"src/ribbonVault1.sol\":650:8548  contract  vault is Ownable,EIP712 {... */\n  jump(tag_49)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_26\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  tag_27\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  tag_31\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  tag_21\n  jump\t// in\ntag_31:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  shl(0xe0, 0x305a27a9)\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_38\n  jump\t// in\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  dup1\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_39\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n  swap4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_42:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_51:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_43:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:578   */\ntag_44:\n    /* \"#utility.yul\":413:414   */\n  0x00\n    /* \"#utility.yul\":423:536   */\ntag_54:\n    /* \"#utility.yul\":437:443   */\n  dup4\n    /* \"#utility.yul\":434:435   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  lt\n    /* \"#utility.yul\":423:536   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":513:524   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":507:525   */\n  mload\n    /* \"#utility.yul\":494:505   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":487:526   */\n  mstore\n    /* \"#utility.yul\":459:461   */\n  0x20\n    /* \"#utility.yul\":452:462   */\n  add\n    /* \"#utility.yul\":423:536   */\n  jump(tag_54)\ntag_56:\n  pop\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":552:568   */\n  swap2\n  add\n    /* \"#utility.yul\":545:572   */\n  mstore\n    /* \"#utility.yul\":328:578   */\n  jump\t// out\n    /* \"#utility.yul\":583:1650   */\ntag_3:\n    /* \"#utility.yul\":681:687   */\n  0x00\n    /* \"#utility.yul\":689:695   */\n  dup1\n    /* \"#utility.yul\":697:703   */\n  0x00\n    /* \"#utility.yul\":750:752   */\n  0x60\n    /* \"#utility.yul\":738:747   */\n  dup5\n    /* \"#utility.yul\":729:736   */\n  dup7\n    /* \"#utility.yul\":725:748   */\n  sub\n    /* \"#utility.yul\":721:753   */\n  slt\n    /* \"#utility.yul\":718:770   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":766:767   */\n  0x00\n    /* \"#utility.yul\":763:764   */\n  dup1\n    /* \"#utility.yul\":756:768   */\n  revert\n    /* \"#utility.yul\":718:770   */\ntag_58:\n    /* \"#utility.yul\":789:829   */\n  tag_59\n    /* \"#utility.yul\":819:828   */\n  dup5\n    /* \"#utility.yul\":789:829   */\n  tag_42\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":873:875   */\n  0x20\n    /* \"#utility.yul\":858:876   */\n  dup6\n  add\n    /* \"#utility.yul\":852:877   */\n  mload\n    /* \"#utility.yul\":779:829   */\n  swap1\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":926:940   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":923:957   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":953:954   */\n  0x00\n    /* \"#utility.yul\":950:951   */\n  dup1\n    /* \"#utility.yul\":943:955   */\n  revert\n    /* \"#utility.yul\":923:957   */\ntag_60:\n    /* \"#utility.yul\":991:997   */\n  dup2\n    /* \"#utility.yul\":980:989   */\n  dup7\n    /* \"#utility.yul\":976:998   */\n  add\n    /* \"#utility.yul\":966:998   */\n  swap2\n  pop\n    /* \"#utility.yul\":1036:1043   */\n  dup7\n    /* \"#utility.yul\":1029:1033   */\n  0x1f\n    /* \"#utility.yul\":1025:1027   */\n  dup4\n    /* \"#utility.yul\":1021:1034   */\n  add\n    /* \"#utility.yul\":1017:1044   */\n  slt\n    /* \"#utility.yul\":1007:1062   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1055:1056   */\n  dup1\n    /* \"#utility.yul\":1048:1060   */\n  revert\n    /* \"#utility.yul\":1007:1062   */\ntag_61:\n    /* \"#utility.yul\":1087:1089   */\n  dup2\n    /* \"#utility.yul\":1081:1090   */\n  mload\n    /* \"#utility.yul\":1109:1111   */\n  dup2\n    /* \"#utility.yul\":1105:1107   */\n  dup2\n    /* \"#utility.yul\":1102:1112   */\n  gt\n    /* \"#utility.yul\":1099:1135   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1115:1133   */\n  tag_63\n  tag_43\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1190:1192   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  mload\n    /* \"#utility.yul\":1158:1160   */\n  0x1f\n    /* \"#utility.yul\":1244:1257   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1240:1262   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1264:1266   */\n  0x3f\n    /* \"#utility.yul\":1236:1267   */\n  add\n    /* \"#utility.yul\":1232:1272   */\n  and\n    /* \"#utility.yul\":1220:1273   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1288:1306   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1308:1330   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1285:1331   */\n  or\n    /* \"#utility.yul\":1282:1354   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1334:1352   */\n  tag_65\n  tag_43\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1374:1384   */\n  dup2\n    /* \"#utility.yul\":1370:1372   */\n  0x40\n    /* \"#utility.yul\":1363:1385   */\n  mstore\n    /* \"#utility.yul\":1409:1411   */\n  dup3\n    /* \"#utility.yul\":1401:1407   */\n  dup2\n    /* \"#utility.yul\":1394:1412   */\n  mstore\n    /* \"#utility.yul\":1449:1456   */\n  dup10\n    /* \"#utility.yul\":1444:1446   */\n  0x20\n    /* \"#utility.yul\":1439:1441   */\n  dup5\n    /* \"#utility.yul\":1435:1437   */\n  dup8\n    /* \"#utility.yul\":1431:1442   */\n  add\n    /* \"#utility.yul\":1427:1447   */\n  add\n    /* \"#utility.yul\":1424:1457   */\n  gt\n    /* \"#utility.yul\":1421:1474   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1470:1471   */\n  0x00\n    /* \"#utility.yul\":1467:1468   */\n  dup1\n    /* \"#utility.yul\":1460:1472   */\n  revert\n    /* \"#utility.yul\":1421:1474   */\ntag_66:\n    /* \"#utility.yul\":1483:1551   */\n  tag_67\n    /* \"#utility.yul\":1548:1550   */\n  dup4\n    /* \"#utility.yul\":1543:1545   */\n  0x20\n    /* \"#utility.yul\":1535:1541   */\n  dup4\n    /* \"#utility.yul\":1531:1546   */\n  add\n    /* \"#utility.yul\":1526:1528   */\n  0x20\n    /* \"#utility.yul\":1522:1524   */\n  dup9\n    /* \"#utility.yul\":1518:1529   */\n  add\n    /* \"#utility.yul\":1483:1551   */\n  tag_44\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1570:1576   */\n  dup1\n    /* \"#utility.yul\":1560:1576   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1595:1644   */\n  tag_68\n    /* \"#utility.yul\":1640:1642   */\n  0x40\n    /* \"#utility.yul\":1629:1638   */\n  dup6\n    /* \"#utility.yul\":1625:1643   */\n  add\n    /* \"#utility.yul\":1595:1644   */\n  tag_42\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1585:1644   */\n  swap1\n  pop\n    /* \"#utility.yul\":583:1650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1863:2243   */\ntag_45:\n    /* \"#utility.yul\":1942:1943   */\n  0x01\n    /* \"#utility.yul\":1938:1950   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1985:1997   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2006:2067   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2060:2064   */\n  0x7f\n    /* \"#utility.yul\":2052:2058   */\n  dup3\n    /* \"#utility.yul\":2048:2065   */\n  and\n    /* \"#utility.yul\":2038:2065   */\n  swap2\n  pop\n    /* \"#utility.yul\":2006:2067   */\ntag_71:\n    /* \"#utility.yul\":2113:2115   */\n  0x20\n    /* \"#utility.yul\":2105:2111   */\n  dup3\n    /* \"#utility.yul\":2102:2116   */\n  lt\n    /* \"#utility.yul\":2082:2100   */\n  dup2\n    /* \"#utility.yul\":2079:2117   */\n  sub\n    /* \"#utility.yul\":2076:2237   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2159:2169   */\n  0x4e487b71\n    /* \"#utility.yul\":2154:2157   */\n  0xe0\n    /* \"#utility.yul\":2150:2170   */\n  shl\n    /* \"#utility.yul\":2147:2148   */\n  0x00\n    /* \"#utility.yul\":2140:2171   */\n  mstore\n    /* \"#utility.yul\":2194:2198   */\n  0x22\n    /* \"#utility.yul\":2191:2192   */\n  0x04\n    /* \"#utility.yul\":2184:2199   */\n  mstore\n    /* \"#utility.yul\":2222:2226   */\n  0x24\n    /* \"#utility.yul\":2219:2220   */\n  0x00\n    /* \"#utility.yul\":2212:2227   */\n  revert\n    /* \"#utility.yul\":2076:2237   */\ntag_72:\n  pop\n    /* \"#utility.yul\":1863:2243   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2374:2892   */\ntag_47:\n    /* \"#utility.yul\":2476:2478   */\n  0x1f\n    /* \"#utility.yul\":2471:2474   */\n  dup3\n    /* \"#utility.yul\":2468:2479   */\n  gt\n    /* \"#utility.yul\":2465:2886   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2512:2517   */\n  dup1\n    /* \"#utility.yul\":2509:2510   */\n  0x00\n    /* \"#utility.yul\":2502:2518   */\n  mstore\n    /* \"#utility.yul\":2556:2560   */\n  0x20\n    /* \"#utility.yul\":2553:2554   */\n  0x00\n    /* \"#utility.yul\":2543:2561   */\n  keccak256\n    /* \"#utility.yul\":2626:2628   */\n  0x1f\n    /* \"#utility.yul\":2614:2624   */\n  dup5\n    /* \"#utility.yul\":2610:2629   */\n  add\n    /* \"#utility.yul\":2607:2608   */\n  0x05\n    /* \"#utility.yul\":2603:2630   */\n  shr\n    /* \"#utility.yul\":2597:2601   */\n  dup2\n    /* \"#utility.yul\":2593:2631   */\n  add\n    /* \"#utility.yul\":2662:2666   */\n  0x20\n    /* \"#utility.yul\":2650:2660   */\n  dup6\n    /* \"#utility.yul\":2647:2667   */\n  lt\n    /* \"#utility.yul\":2644:2691   */\n  iszero\n  tag_76\n  jumpi\n  pop\n    /* \"#utility.yul\":2685:2689   */\n  dup1\n    /* \"#utility.yul\":2644:2691   */\ntag_76:\n    /* \"#utility.yul\":2740:2742   */\n  0x1f\n    /* \"#utility.yul\":2735:2738   */\n  dup5\n    /* \"#utility.yul\":2731:2743   */\n  add\n    /* \"#utility.yul\":2728:2729   */\n  0x05\n    /* \"#utility.yul\":2724:2744   */\n  shr\n    /* \"#utility.yul\":2718:2722   */\n  dup3\n    /* \"#utility.yul\":2714:2745   */\n  add\n    /* \"#utility.yul\":2704:2745   */\n  swap2\n  pop\n    /* \"#utility.yul\":2795:2876   */\ntag_77:\n    /* \"#utility.yul\":2813:2815   */\n  dup2\n    /* \"#utility.yul\":2806:2811   */\n  dup2\n    /* \"#utility.yul\":2803:2816   */\n  lt\n    /* \"#utility.yul\":2795:2876   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2858:2874   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2839:2840   */\n  0x01\n    /* \"#utility.yul\":2828:2841   */\n  add\n    /* \"#utility.yul\":2795:2876   */\n  jump(tag_77)\ntag_79:\n    /* \"#utility.yul\":2799:2802   */\n  pop\n  pop\n    /* \"#utility.yul\":2465:2886   */\ntag_75:\n    /* \"#utility.yul\":2374:2892   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:4413   */\ntag_21:\n    /* \"#utility.yul\":3188:3198   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3210:3240   */\n  dup2\n  gt\n    /* \"#utility.yul\":3207:3263   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3243:3261   */\n  tag_83\n  tag_43\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3272:3369   */\n  tag_84\n    /* \"#utility.yul\":3362:3368   */\n  dup2\n    /* \"#utility.yul\":3322:3360   */\n  tag_85\n    /* \"#utility.yul\":3354:3358   */\n  dup5\n    /* \"#utility.yul\":3348:3359   */\n  sload\n    /* \"#utility.yul\":3322:3360   */\n  tag_45\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3316:3320   */\n  dup5\n    /* \"#utility.yul\":3272:3369   */\n  tag_47\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3424:3428   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3481:3483   */\n  0x1f\n    /* \"#utility.yul\":3470:3484   */\n  dup4\n  gt\n    /* \"#utility.yul\":3498:3499   */\n  0x01\n    /* \"#utility.yul\":3493:4156   */\n  dup2\n  eq\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4200:4201   */\n  0x00\n    /* \"#utility.yul\":4217:4223   */\n  dup5\n    /* \"#utility.yul\":4214:4303   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":4269:4288   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4263:4289   */\n  mload\n    /* \"#utility.yul\":4214:4303   */\ntag_88:\n  not(0x00)\n    /* \"#utility.yul\":3025:3026   */\n  0x03\n    /* \"#utility.yul\":3021:3032   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3017:3041   */\n  shr\n    /* \"#utility.yul\":3013:3042   */\n  not\n    /* \"#utility.yul\":3003:3043   */\n  and\n    /* \"#utility.yul\":3049:3050   */\n  0x01\n    /* \"#utility.yul\":3045:3056   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3000:3057   */\n  or\n    /* \"#utility.yul\":4316:4397   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3463:4407   */\n  jump(tag_86)\n    /* \"#utility.yul\":3493:4156   */\ntag_87:\n    /* \"#utility.yul\":2321:2322   */\n  0x00\n    /* \"#utility.yul\":2314:2328   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2358:2362   */\n  0x20\n    /* \"#utility.yul\":2345:2363   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3529:3549   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3647:3883   */\ntag_91:\n    /* \"#utility.yul\":3661:3668   */\n  dup3\n    /* \"#utility.yul\":3658:3659   */\n  dup2\n    /* \"#utility.yul\":3655:3669   */\n  lt\n    /* \"#utility.yul\":3647:3883   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3750:3769   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3744:3770   */\n  mload\n    /* \"#utility.yul\":3729:3771   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3842:3869   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3810:3811   */\n  0x01\n    /* \"#utility.yul\":3798:3812   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3677:3696   */\n  dup5\n  add\n    /* \"#utility.yul\":3647:3883   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":3651:3654   */\n  pop\n    /* \"#utility.yul\":3911:3917   */\n  dup6\n    /* \"#utility.yul\":3902:3909   */\n  dup3\n    /* \"#utility.yul\":3899:3918   */\n  lt\n    /* \"#utility.yul\":3896:4097   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3972:3991   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3966:3992   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4055:4056   */\n  0x03\n    /* \"#utility.yul\":4051:4065   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4067:4070   */\n  0xf8\n    /* \"#utility.yul\":4047:4071   */\n  and\n    /* \"#utility.yul\":4043:4080   */\n  shr\n    /* \"#utility.yul\":4039:4081   */\n  not\n    /* \"#utility.yul\":4024:4082   */\n  and\n    /* \"#utility.yul\":4009:4083   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3896:4097   */\ntag_94:\n  pop\n  pop\n    /* \"#utility.yul\":4143:4144   */\n  0x01\n    /* \"#utility.yul\":4134:4140   */\n  dup5\n    /* \"#utility.yul\":4131:4132   */\n  0x01\n    /* \"#utility.yul\":4127:4141   */\n  shl\n    /* \"#utility.yul\":4123:4145   */\n  add\n    /* \"#utility.yul\":4117:4121   */\n  dup6\n    /* \"#utility.yul\":4110:4146   */\n  sstore\n    /* \"#utility.yul\":3463:4407   */\ntag_86:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3068:4413   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4912:5308   */\ntag_38:\n    /* \"#utility.yul\":5061:5063   */\n  0x20\n    /* \"#utility.yul\":5050:5059   */\n  dup2\n    /* \"#utility.yul\":5043:5064   */\n  mstore\n    /* \"#utility.yul\":5024:5028   */\n  0x00\n    /* \"#utility.yul\":5093:5099   */\n  dup3\n    /* \"#utility.yul\":5087:5100   */\n  mload\n    /* \"#utility.yul\":5136:5142   */\n  dup1\n    /* \"#utility.yul\":5131:5133   */\n  0x20\n    /* \"#utility.yul\":5120:5129   */\n  dup5\n    /* \"#utility.yul\":5116:5134   */\n  add\n    /* \"#utility.yul\":5109:5143   */\n  mstore\n    /* \"#utility.yul\":5152:5231   */\n  tag_97\n    /* \"#utility.yul\":5224:5230   */\n  dup2\n    /* \"#utility.yul\":5219:5221   */\n  0x40\n    /* \"#utility.yul\":5208:5217   */\n  dup6\n    /* \"#utility.yul\":5204:5222   */\n  add\n    /* \"#utility.yul\":5199:5201   */\n  0x20\n    /* \"#utility.yul\":5191:5197   */\n  dup8\n    /* \"#utility.yul\":5187:5202   */\n  add\n    /* \"#utility.yul\":5152:5231   */\n  tag_44\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5292:5294   */\n  0x1f\n    /* \"#utility.yul\":5271:5286   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":5267:5296   */\n  and\n    /* \"#utility.yul\":5252:5297   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":5299:5301   */\n  0x40\n    /* \"#utility.yul\":5248:5302   */\n  add\n  swap3\n    /* \"#utility.yul\":4912:5308   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5313:5610   */\ntag_40:\n    /* \"#utility.yul\":5431:5443   */\n  dup1\n  mload\n    /* \"#utility.yul\":5478:5482   */\n  0x20\n    /* \"#utility.yul\":5467:5483   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":5461:5484   */\n  mload\n  swap2\n    /* \"#utility.yul\":5431:5443   */\n  swap1\n    /* \"#utility.yul\":5496:5512   */\n  dup2\n  lt\n    /* \"#utility.yul\":5493:5604   */\n  iszero\n  tag_72\n  jumpi\n  not(0x00)\n    /* \"#utility.yul\":5570:5574   */\n  0x20\n    /* \"#utility.yul\":5566:5583   */\n  swap2\n  swap1\n  swap2\n  sub\n    /* \"#utility.yul\":5563:5564   */\n  0x03\n    /* \"#utility.yul\":5559:5584   */\n  shl\n    /* \"#utility.yul\":5555:5593   */\n  shl\n    /* \"#utility.yul\":5544:5594   */\n  and\n  swap2\n    /* \"#utility.yul\":5313:5610   */\n  swap1\n  pop\n  jump\t// out\ntag_49:\n    /* \"src/ribbonVault1.sol\":650:8548  contract  vault is Ownable,EIP712 {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf8488ee4284bdfced5e7ecbb6b2116f40bc259e448370e3da8f991f5c7e11002\")\n  0x00\n  assignImmutable(\"0xeaf32fa183047e964e285a9ee962816e722361d0ef19b580cefefec39cdc1e6b\")\n  0x00\n  assignImmutable(\"0x5a51cac41fe69f71b7795862cc646f7451dfff9d51b9de6ea410fc434c56d513\")\n  0x00\n  assignImmutable(\"0xdd8b51ee9128c681fbd81845dd6426716fdc986a3bb51fedf5af16f35ac2adb3\")\n  0x00\n  assignImmutable(\"0x03bb33715397e0038c873ba02d4426eebb2b65cc3940a0fa71a481a9b37d980d\")\n  0x00\n  assignImmutable(\"0xbe147d0aaf628bab5d3600ba0e8222c4d7f0eec30321d0b98d9f641634fbb471\")\n  0x00\n  assignImmutable(\"0xa1c879b0284e72931b8cd098e080355084a332f82e911af96b3055fa2035b7e8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/ribbonVault1.sol\":650:8548  contract  vault is Ownable,EIP712 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8bc7e8c4\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xcbeacb80\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf9c3a1e8\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfd918716\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xcbeacb80\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe1fefd42\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe63ea408\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x8bc7e8c4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9683cdc4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xac1e5025\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc08e7286\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc4a9e858\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x3644e515\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x704b6c02\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x704b6c02\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x76ee947f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x67a52793\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6b4c0789\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x06e0e582\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ace9ca0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d461e61\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x252de51b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x34fcf437\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/ribbonVault1.sol\":1322:1364  uint public initContractBalancePaymentCoin */\n    tag_3:\n      tag_34\n      sload(0x09)\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/ribbonVault1.sol\":1322:1364  uint public initContractBalancePaymentCoin */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ribbonVault1.sol\":1456:1479  string public vaultName */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":3064:3266  function checkAmountToRecive(uint pointToSwap)public view returns(uint){... */\n    tag_5:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1513:1537  bool public freezePermit */\n    tag_6:\n      sload(0x0d)\n      tag_47\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1302:1316   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1295:1317   */\n      iszero\n        /* \"#utility.yul\":1277:1318   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      add\n        /* \"src/ribbonVault1.sol\":1513:1537  bool public freezePermit */\n      tag_36\n        /* \"#utility.yul\":1137:1324   */\n      jump\n        /* \"src/ribbonVault1.sol\":1239:1255  uint public rate */\n    tag_7:\n      tag_34\n      sload(0x06)\n      dup2\n      jump\n        /* \"src/ribbonVault1.sol\":4372:4448  function setRate(uint _rate)public onlyOwner{... */\n    tag_8:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"src/ribbonVault1.sol\":3278:3392  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_9:\n      tag_34\n      tag_58\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1210:1232  uint public depositFee */\n    tag_10:\n      tag_34\n      sload(0x05)\n      dup2\n      jump\n        /* \"src/ribbonVault1.sol\":4839:4930  function freezeContract(bool _freeze)public onlyOwner{... */\n    tag_11:\n      tag_54\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":3648:3727  function setAdmin(address _admin)public onlyOwner{... */\n    tag_12:\n      tag_54\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_54\n      tag_73\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":4082:4174  function setPaymentDepositfees(uint _fee)public onlyOwner{... */\n    tag_14:\n      tag_54\n      tag_75\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_36\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1262:1287  uint public withdrawalFee */\n    tag_16:\n      tag_34\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_84:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3677:3709   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3659:3710   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3647:3649   */\n      0x20\n        /* \"#utility.yul\":3632:3650   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_36\n        /* \"#utility.yul\":3513:3716   */\n      jump\n        /* \"src/ribbonVault1.sol\":5170:5801  function withdrawfees(address feeTakerAddress) public onlyOwner{... */\n    tag_18:\n      tag_54\n      tag_89\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":4232:4322  function setWithdrawalFee(uint _fee)public onlyOwner{... */\n    tag_19:\n      tag_54\n      tag_92\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":4597:4706  function setMinPointsToSWap(uint _pointsMin)public onlyOwner{... */\n    tag_20:\n      tag_54\n      tag_95\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1408:1449  uint public TotalfeescollectedPaymentCoin */\n    tag_21:\n      tag_34\n      sload(0x0b)\n      dup2\n      jump\n        /* \"src/ribbonVault1.sol\":3835:4027  function setpaymentTokenAndpoints(address paymentAddress)public onlyOwner{... */\n    tag_22:\n      tag_54\n      tag_101\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1294:1315  uint public pointsMin */\n    tag_23:\n      tag_34\n      sload(0x08)\n      dup2\n      jump\n        /* \"src/ribbonVault1.sol\":7039:7400  function emergencyWithdraw(address _tokenAddress,address _to,uint _amount )public onlyOwner{... */\n    tag_24:\n      tag_54\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_54\n      tag_111\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1486:1506  address public admin */\n    tag_26:\n      sload(0x0d)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/ribbonVault1.sol\":6032:6926  function permitSwapToPaymentCoin(address user,uint pointToSwap,uint256 deadline,uint8 v,bytes32 r,bytes32 s)public {... */\n    tag_27:\n      tag_54\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n        /* \"src/ribbonVault1.sol\":1371:1401  uint public claimedPaymentCoin */\n    tag_28:\n      tag_34\n      sload(0x0a)\n      dup2\n      jump\n        /* \"src/ribbonVault1.sol\":1456:1479  string public vaultName */\n    tag_39:\n      0x0c\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":3064:3266  function checkAmountToRecive(uint pointToSwap)public view returns(uint){... */\n    tag_45:\n        /* \"src/ribbonVault1.sol\":3130:3134  uint */\n      0x00\n        /* \"src/ribbonVault1.sol\":3148:3158  uint _rate */\n      dup1\n        /* \"src/ribbonVault1.sol\":3209:3213  rate */\n      sload(0x06)\n        /* \"src/ribbonVault1.sol\":3214:3220  10**18 */\n      0x0de0b6b3a7640000\n        /* \"src/ribbonVault1.sol\":3209:3220  rate*10**18 */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"src/ribbonVault1.sol\":3182:3195  _Ipaymentcoin */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":3182:3204  _Ipaymentcoin.decimals */\n      and\n      0x313ce567\n        /* \"src/ribbonVault1.sol\":3182:3206  _Ipaymentcoin.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"src/ribbonVault1.sol\":3178:3206  10**_Ipaymentcoin.decimals() */\n      tag_136\n      swap1\n        /* \"src/ribbonVault1.sol\":3178:3180  10 */\n      0x0a\n        /* \"src/ribbonVault1.sol\":3178:3206  10**_Ipaymentcoin.decimals() */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"src/ribbonVault1.sol\":3162:3177  pointToSwap * 1 */\n      tag_138\n        /* \"src/ribbonVault1.sol\":3162:3173  pointToSwap */\n      dup6\n        /* \"src/ribbonVault1.sol\":3176:3177  1 */\n      0x01\n        /* \"src/ribbonVault1.sol\":3162:3177  pointToSwap * 1 */\n      tag_131\n      jump\t// in\n    tag_138:\n        /* \"src/ribbonVault1.sol\":3162:3206  pointToSwap * 1*10**_Ipaymentcoin.decimals() */\n      tag_139\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_139:\n        /* \"src/ribbonVault1.sol\":3161:3221  (pointToSwap * 1*10**_Ipaymentcoin.decimals())/(rate*10**18) */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"src/ribbonVault1.sol\":3148:3221  uint _rate = (pointToSwap * 1*10**_Ipaymentcoin.decimals())/(rate*10**18) */\n      swap4\n        /* \"src/ribbonVault1.sol\":3064:3266  function checkAmountToRecive(uint pointToSwap)public view returns(uint){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":4372:4448  function setRate(uint _rate)public onlyOwner{... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"src/ribbonVault1.sol\":4428:4432  rate */\n      0x06\n        /* \"src/ribbonVault1.sol\":4428:4440  rate = _rate */\n      sstore\n        /* \"src/ribbonVault1.sol\":4372:4448  function setRate(uint _rate)public onlyOwner{... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":3278:3392  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_58:\n        /* \"src/ribbonVault1.sol\":3337:3344  bytes32 */\n      0x00\n        /* \"src/ribbonVault1.sol\":3364:3384  _domainSeparatorV4() */\n      tag_147\n        /* \"src/ribbonVault1.sol\":3364:3382  _domainSeparatorV4 */\n      tag_148\n        /* \"src/ribbonVault1.sol\":3364:3384  _domainSeparatorV4() */\n      jump\t// in\n    tag_147:\n        /* \"src/ribbonVault1.sol\":3357:3384  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":3278:3392  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":4839:4930  function freezeContract(bool _freeze)public onlyOwner{... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"src/ribbonVault1.sol\":4900:4912  freezePermit */\n      0x0d\n        /* \"src/ribbonVault1.sol\":4900:4922  freezePermit = _freeze */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/ribbonVault1.sol\":4839:4930  function freezeContract(bool _freeze)public onlyOwner{... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":3648:3727  function setAdmin(address _admin)public onlyOwner{... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"src/ribbonVault1.sol\":3706:3711  admin */\n      0x0d\n        /* \"src/ribbonVault1.sol\":3706:3719  admin =_admin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/ribbonVault1.sol\":3648:3727  function setAdmin(address _admin)public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":4082:4174  function setPaymentDepositfees(uint _fee)public onlyOwner{... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"src/ribbonVault1.sol\":4149:4159  depositFee */\n      0x05\n        /* \"src/ribbonVault1.sol\":4149:4166  depositFee = _fee */\n      sstore\n        /* \"src/ribbonVault1.sol\":4082:4174  function setPaymentDepositfees(uint _fee)public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      shl(0xf8, 0x0f)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      swap12\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n      swap8\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":5170:5801  function withdrawfees(address feeTakerAddress) public onlyOwner{... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":5251:5280  feeTakerAddress != address(0) */\n      dup2\n      and\n        /* \"src/ribbonVault1.sol\":5243:5315  require(feeTakerAddress != address(0),\"you are sending to zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"src/ribbonVault1.sol\":5347:5360  _Ipaymentcoin */\n      sload(0x03)\n        /* \"src/ribbonVault1.sol\":5347:5385  _Ipaymentcoin.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/ribbonVault1.sol\":5379:5383  this */\n      address\n        /* \"src/ribbonVault1.sol\":5347:5385  _Ipaymentcoin.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3659:3710   */\n      mstore\n        /* \"src/ribbonVault1.sol\":5325:5345  uint contractBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":5347:5360  _Ipaymentcoin */\n      and\n      swap1\n        /* \"src/ribbonVault1.sol\":5347:5370  _Ipaymentcoin.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3632:3650   */\n      0x24\n      add\n        /* \"src/ribbonVault1.sol\":5347:5385  _Ipaymentcoin.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"src/ribbonVault1.sol\":5325:5385  uint contractBalance =_Ipaymentcoin.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":5395:5416  uint balanceDeposited */\n      0x00\n        /* \"src/ribbonVault1.sol\":5492:5522  initContractBalancePaymentCoin */\n      sload(0x09)\n        /* \"src/ribbonVault1.sol\":5459:5488  TotalfeescollectedPaymentCoin */\n      sload(0x0b)\n        /* \"src/ribbonVault1.sol\":5438:5456  claimedPaymentCoin */\n      sload(0x0a)\n        /* \"src/ribbonVault1.sol\":5420:5435  contractBalance */\n      dup5\n        /* \"src/ribbonVault1.sol\":5420:5456  contractBalance + claimedPaymentCoin */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"src/ribbonVault1.sol\":5420:5488  contractBalance + claimedPaymentCoin + TotalfeescollectedPaymentCoin */\n      tag_186\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_186:\n        /* \"src/ribbonVault1.sol\":5419:5522  (contractBalance + claimedPaymentCoin + TotalfeescollectedPaymentCoin) - initContractBalancePaymentCoin */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"src/ribbonVault1.sol\":5395:5522  uint balanceDeposited = (contractBalance + claimedPaymentCoin + TotalfeescollectedPaymentCoin) - initContractBalancePaymentCoin */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":5566:5582  balanceDeposited */\n      dup1\n        /* \"src/ribbonVault1.sol\":5532:5562  initContractBalancePaymentCoin */\n      0x09\n      0x00\n        /* \"src/ribbonVault1.sol\":5532:5582  initContractBalancePaymentCoin += balanceDeposited */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":5622:5632  depositFee */\n      sload(0x05)\n        /* \"src/ribbonVault1.sol\":5592:5601  uint _fee */\n      0x00\n      swap1\n        /* \"src/ribbonVault1.sol\":5634:5637  100 */\n      0x64\n      swap1\n        /* \"src/ribbonVault1.sol\":5605:5632  balanceDeposited*depositFee */\n      tag_190\n      swap1\n        /* \"src/ribbonVault1.sol\":5605:5621  balanceDeposited */\n      dup5\n        /* \"src/ribbonVault1.sol\":5605:5632  balanceDeposited*depositFee */\n      tag_131\n      jump\t// in\n    tag_190:\n        /* \"src/ribbonVault1.sol\":5604:5637  (balanceDeposited*depositFee)/100 */\n      tag_191\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_191:\n        /* \"src/ribbonVault1.sol\":5592:5637  uint _fee = (balanceDeposited*depositFee)/100 */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":5662:5663  0 */\n      0x00\n        /* \"src/ribbonVault1.sol\":5655:5659  _fee */\n      dup2\n        /* \"src/ribbonVault1.sol\":5655:5663  _fee > 0 */\n      gt\n        /* \"src/ribbonVault1.sol\":5647:5687  require(_fee > 0,\"no new deposit added\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8457:8459   */\n      0x20\n        /* \"src/ribbonVault1.sol\":5647:5687  require(_fee > 0,\"no new deposit added\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8439:8460   */\n      mstore\n        /* \"#utility.yul\":8496:8498   */\n      0x14\n        /* \"#utility.yul\":8476:8494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8469:8499   */\n      mstore\n      shl(0x62, 0x1b9bc81b995dc819195c1bdcda5d081859191959)\n        /* \"#utility.yul\":8515:8533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8508:8558   */\n      mstore\n        /* \"#utility.yul\":8575:8593   */\n      0x64\n      add\n        /* \"src/ribbonVault1.sol\":5647:5687  require(_fee > 0,\"no new deposit added\") */\n      tag_177\n        /* \"#utility.yul\":8255:8599   */\n      jump\n        /* \"src/ribbonVault1.sol\":5647:5687  require(_fee > 0,\"no new deposit added\") */\n    tag_192:\n        /* \"src/ribbonVault1.sol\":5730:5734  _fee */\n      dup1\n        /* \"src/ribbonVault1.sol\":5697:5726  TotalfeescollectedPaymentCoin */\n      0x0b\n      0x00\n        /* \"src/ribbonVault1.sol\":5697:5734  TotalfeescollectedPaymentCoin += _fee */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_195:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":5744:5758  _IpaymentcoinT */\n      sload(0x04)\n        /* \"src/ribbonVault1.sol\":5744:5793  _IpaymentcoinT.safeTransfer(feeTakerAddress,_fee) */\n      tag_196\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":5744:5758  _IpaymentcoinT */\n      and\n        /* \"src/ribbonVault1.sol\":5772:5787  feeTakerAddress */\n      dup6\n        /* \"src/ribbonVault1.sol\":5788:5792  _fee */\n      dup4\n        /* \"src/ribbonVault1.sol\":5744:5771  _IpaymentcoinT.safeTransfer */\n      tag_197\n        /* \"src/ribbonVault1.sol\":5744:5793  _IpaymentcoinT.safeTransfer(feeTakerAddress,_fee) */\n      jump\t// in\n    tag_196:\n        /* \"src/ribbonVault1.sol\":5233:5801  {... */\n      pop\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":5170:5801  function withdrawfees(address feeTakerAddress) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":4232:4322  function setWithdrawalFee(uint _fee)public onlyOwner{... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"src/ribbonVault1.sol\":4294:4307  withdrawalFee */\n      0x07\n        /* \"src/ribbonVault1.sol\":4294:4314  withdrawalFee = _fee */\n      sstore\n        /* \"src/ribbonVault1.sol\":4232:4322  function setWithdrawalFee(uint _fee)public onlyOwner{... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":4597:4706  function setMinPointsToSWap(uint _pointsMin)public onlyOwner{... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"src/ribbonVault1.sol\":4681:4698  _pointsMin*10**18 */\n      tag_204\n        /* \"src/ribbonVault1.sol\":4681:4691  _pointsMin */\n      dup2\n        /* \"src/ribbonVault1.sol\":4692:4698  10**18 */\n      0x0de0b6b3a7640000\n        /* \"src/ribbonVault1.sol\":4681:4698  _pointsMin*10**18 */\n      tag_131\n      jump\t// in\n    tag_204:\n        /* \"src/ribbonVault1.sol\":4669:4678  pointsMin */\n      0x08\n        /* \"src/ribbonVault1.sol\":4669:4698  pointsMin = _pointsMin*10**18 */\n      sstore\n      pop\n        /* \"src/ribbonVault1.sol\":4597:4706  function setMinPointsToSWap(uint _pointsMin)public onlyOwner{... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":3835:4027  function setpaymentTokenAndpoints(address paymentAddress)public onlyOwner{... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"src/ribbonVault1.sol\":3918:3931  _Ipaymentcoin */\n      0x03\n        /* \"src/ribbonVault1.sol\":3918:3957  _Ipaymentcoin = IERC20T(paymentAddress) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/ribbonVault1.sol\":3967:3981  _IpaymentcoinT */\n      0x04\n        /* \"src/ribbonVault1.sol\":3967:4006  _IpaymentcoinT = IERC20(paymentAddress) */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"src/ribbonVault1.sol\":3835:4027  function setpaymentTokenAndpoints(address paymentAddress)public onlyOwner{... */\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":7039:7400  function emergencyWithdraw(address _tokenAddress,address _to,uint _amount )public onlyOwner{... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":7149:7176  _tokenAddress != address(0) */\n      dup4\n      and\n        /* \"src/ribbonVault1.sol\":7141:7211  require(_tokenAddress != address(0),\"you are sending to zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":7230:7247  _to != address(0) */\n      dup3\n      and\n        /* \"src/ribbonVault1.sol\":7222:7282  require(_to != address(0),\"you are sending to zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_213:\n        /* \"src/ribbonVault1.sol\":7311:7312  0 */\n      0x00\n        /* \"src/ribbonVault1.sol\":7301:7308  _amount */\n      dup2\n        /* \"src/ribbonVault1.sol\":7301:7312  _amount > 0 */\n      gt\n        /* \"src/ribbonVault1.sol\":7293:7337  require(_amount > 0,\"cant send zero amount\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8806:8808   */\n      0x20\n        /* \"src/ribbonVault1.sol\":7293:7337  require(_amount > 0,\"cant send zero amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8788:8809   */\n      mstore\n        /* \"#utility.yul\":8845:8847   */\n      0x15\n        /* \"#utility.yul\":8825:8843   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8818:8848   */\n      mstore\n      shl(0x5a, 0x18d85b9d081cd95b99081e995c9bc8185b5bdd5b9d)\n        /* \"#utility.yul\":8864:8882   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8857:8908   */\n      mstore\n        /* \"#utility.yul\":8925:8943   */\n      0x64\n      add\n        /* \"src/ribbonVault1.sol\":7293:7337  require(_amount > 0,\"cant send zero amount\") */\n      tag_177\n        /* \"#utility.yul\":8604:8949   */\n      jump\n        /* \"src/ribbonVault1.sol\":7293:7337  require(_amount > 0,\"cant send zero amount\") */\n    tag_215:\n        /* \"src/ribbonVault1.sol\":7348:7392  IERC20T(_tokenAddress).transfer(_to,_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9146:9178   */\n      dup4\n      dup2\n      and\n        /* \"src/ribbonVault1.sol\":7348:7392  IERC20T(_tokenAddress).transfer(_to,_amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9128:9179   */\n      mstore\n        /* \"#utility.yul\":9195:9213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9188:9222   */\n      dup4\n      swap1\n      mstore\n        /* \"src/ribbonVault1.sol\":7348:7379  IERC20T(_tokenAddress).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9101:9119   */\n      0x44\n      add\n        /* \"src/ribbonVault1.sol\":7348:7392  IERC20T(_tokenAddress).transfer(_to,_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3659:3710   */\n      mstore\n        /* \"#utility.yul\":3632:3650   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_177\n        /* \"#utility.yul\":3513:3716   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":6032:6926  function permitSwapToPaymentCoin(address user,uint pointToSwap,uint256 deadline,uint8 v,bytes32 r,bytes32 s)public {... */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":6166:6184  user != address(0) */\n      dup7\n      and\n        /* \"src/ribbonVault1.sol\":6158:6219  require(user != address(0),\"you are sending to zero address\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_231:\n        /* \"src/ribbonVault1.sol\":6230:6270  _permit(user,pointToSwap,deadline,v,r,s) */\n      tag_233\n        /* \"src/ribbonVault1.sol\":6238:6242  user */\n      dup7\n        /* \"src/ribbonVault1.sol\":6243:6254  pointToSwap */\n      dup7\n        /* \"src/ribbonVault1.sol\":6255:6263  deadline */\n      dup7\n        /* \"src/ribbonVault1.sol\":6264:6265  v */\n      dup7\n        /* \"src/ribbonVault1.sol\":6266:6267  r */\n      dup7\n        /* \"src/ribbonVault1.sol\":6268:6269  s */\n      dup7\n        /* \"src/ribbonVault1.sol\":6230:6237  _permit */\n      tag_234\n        /* \"src/ribbonVault1.sol\":6230:6270  _permit(user,pointToSwap,deadline,v,r,s) */\n      jump\t// in\n    tag_233:\n        /* \"src/ribbonVault1.sol\":6289:6301  freezePermit */\n      sload(0x0d)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"src/ribbonVault1.sol\":6289:6308  freezePermit==false */\n      iszero\n        /* \"src/ribbonVault1.sol\":6281:6328  require(freezePermit==false,\"contract freezed\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9685:9687   */\n      0x20\n        /* \"src/ribbonVault1.sol\":6281:6328  require(freezePermit==false,\"contract freezed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9667:9688   */\n      mstore\n        /* \"#utility.yul\":9724:9726   */\n      0x10\n        /* \"#utility.yul\":9704:9722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9697:9727   */\n      mstore\n      shl(0x82, 0x18dbdb9d1c9858dd08199c99595e9959)\n        /* \"#utility.yul\":9743:9761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9736:9782   */\n      mstore\n        /* \"#utility.yul\":9799:9817   */\n      0x64\n      add\n        /* \"src/ribbonVault1.sol\":6281:6328  require(freezePermit==false,\"contract freezed\") */\n      tag_177\n        /* \"#utility.yul\":9483:9823   */\n      jump\n        /* \"src/ribbonVault1.sol\":6281:6328  require(freezePermit==false,\"contract freezed\") */\n    tag_235:\n        /* \"src/ribbonVault1.sol\":6447:6456  pointsMin */\n      sload(0x08)\n        /* \"src/ribbonVault1.sol\":6432:6443  pointToSwap */\n      dup6\n        /* \"src/ribbonVault1.sol\":6432:6456  pointToSwap >= pointsMin */\n      lt\n      iszero\n        /* \"src/ribbonVault1.sol\":6424:6494  require(pointToSwap >= pointsMin,\"points to swap less than minpoints\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10030:10032   */\n      0x20\n        /* \"src/ribbonVault1.sol\":6424:6494  require(pointToSwap >= pointsMin,\"points to swap less than minpoints\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10012:10033   */\n      mstore\n        /* \"#utility.yul\":10069:10071   */\n      0x22\n        /* \"#utility.yul\":10049:10067   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10042:10072   */\n      mstore\n        /* \"#utility.yul\":10108:10142   */\n      0x706f696e747320746f2073776170206c657373207468616e206d696e706f696e\n        /* \"#utility.yul\":10088:10106   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10081:10143   */\n      mstore\n      shl(0xf0, 0x7473)\n        /* \"#utility.yul\":10159:10177   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10152:10184   */\n      mstore\n        /* \"#utility.yul\":10201:10220   */\n      0x84\n      add\n        /* \"src/ribbonVault1.sol\":6424:6494  require(pointToSwap >= pointsMin,\"points to swap less than minpoints\") */\n      tag_177\n        /* \"#utility.yul\":9828:10226   */\n      jump\n        /* \"src/ribbonVault1.sol\":6424:6494  require(pointToSwap >= pointsMin,\"points to swap less than minpoints\") */\n    tag_238:\n        /* \"src/ribbonVault1.sol\":6505:6516  uint amount */\n      0x00\n        /* \"src/ribbonVault1.sol\":6519:6551  checkAmountToRecive(pointToSwap) */\n      tag_241\n        /* \"src/ribbonVault1.sol\":6539:6550  pointToSwap */\n      dup7\n        /* \"src/ribbonVault1.sol\":6519:6538  checkAmountToRecive */\n      tag_45\n        /* \"src/ribbonVault1.sol\":6519:6551  checkAmountToRecive(pointToSwap) */\n      jump\t// in\n    tag_241:\n        /* \"src/ribbonVault1.sol\":6505:6551  uint amount = checkAmountToRecive(pointToSwap) */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":6584:6590  amount */\n      dup1\n        /* \"src/ribbonVault1.sol\":6562:6580  claimedPaymentCoin */\n      0x0a\n      0x00\n        /* \"src/ribbonVault1.sol\":6562:6590  claimedPaymentCoin += amount */\n      dup3\n      dup3\n      sload\n      tag_242\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_242:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":6621:6634  withdrawalFee */\n      sload(0x07)\n        /* \"src/ribbonVault1.sol\":6601:6610  uint _fee */\n      0x00\n      swap1\n        /* \"src/ribbonVault1.sol\":6636:6639  100 */\n      0x64\n      swap1\n        /* \"src/ribbonVault1.sol\":6614:6634  amount*withdrawalFee */\n      tag_243\n      swap1\n        /* \"src/ribbonVault1.sol\":6614:6620  amount */\n      dup5\n        /* \"src/ribbonVault1.sol\":6614:6634  amount*withdrawalFee */\n      tag_131\n      jump\t// in\n    tag_243:\n        /* \"src/ribbonVault1.sol\":6613:6639  (amount*withdrawalFee)/100 */\n      tag_244\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_244:\n        /* \"src/ribbonVault1.sol\":6601:6639  uint _fee = (amount*withdrawalFee)/100 */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":6650:6668  uint amoutAfterFee */\n      0x00\n        /* \"src/ribbonVault1.sol\":6671:6683  amount -_fee */\n      tag_245\n        /* \"src/ribbonVault1.sol\":6601:6639  uint _fee = (amount*withdrawalFee)/100 */\n      dup3\n        /* \"src/ribbonVault1.sol\":6671:6677  amount */\n      dup5\n        /* \"src/ribbonVault1.sol\":6671:6683  amount -_fee */\n      tag_188\n      jump\t// in\n    tag_245:\n        /* \"src/ribbonVault1.sol\":6743:6757  _IpaymentcoinT */\n      sload(0x04)\n        /* \"src/ribbonVault1.sol\":6650:6683  uint amoutAfterFee = amount -_fee */\n      swap1\n      swap2\n      pop\n        /* \"src/ribbonVault1.sol\":6743:6790  _IpaymentcoinT.safeTransfer(user,amoutAfterFee) */\n      tag_246\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":6743:6757  _IpaymentcoinT */\n      and\n        /* \"src/ribbonVault1.sol\":6771:6775  user */\n      dup11\n        /* \"src/ribbonVault1.sol\":6650:6683  uint amoutAfterFee = amount -_fee */\n      dup4\n        /* \"src/ribbonVault1.sol\":6743:6770  _IpaymentcoinT.safeTransfer */\n      tag_197\n        /* \"src/ribbonVault1.sol\":6743:6790  _IpaymentcoinT.safeTransfer(user,amoutAfterFee) */\n      jump\t// in\n    tag_246:\n        /* \"src/ribbonVault1.sol\":6801:6815  _IpaymentcoinT */\n      sload(0x04)\n        /* \"src/ribbonVault1.sol\":6801:6845  _IpaymentcoinT.safeTransfer(msg.sender,_fee) */\n      tag_247\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":6801:6815  _IpaymentcoinT */\n      and\n        /* \"src/ribbonVault1.sol\":6829:6839  msg.sender */\n      caller\n        /* \"src/ribbonVault1.sol\":6840:6844  _fee */\n      dup5\n        /* \"src/ribbonVault1.sol\":6801:6828  _IpaymentcoinT.safeTransfer */\n      tag_197\n        /* \"src/ribbonVault1.sol\":6801:6845  _IpaymentcoinT.safeTransfer(msg.sender,_fee) */\n      jump\t// in\n    tag_247:\n        /* \"src/ribbonVault1.sol\":6861:6918  swap(user,block.timestamp,pointToSwap,amoutAfterFee,_fee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10433:10458   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":10489:10491   */\n      0x20\n        /* \"#utility.yul\":10474:10492   */\n      dup2\n      add\n        /* \"#utility.yul\":10467:10501   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10517:10535   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10510:10544   */\n      dup4\n      swap1\n      mstore\n        /* \"src/ribbonVault1.sol\":6871:6886  block.timestamp */\n      timestamp\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":6861:6918  swap(user,block.timestamp,pointToSwap,amoutAfterFee,_fee) */\n      dup12\n      and\n      swap1\n      0x9a5f60e59cc27a7c25a7f78275c910454cd9adacb21cecff527c98ed63e02877\n      swap1\n        /* \"#utility.yul\":10421:10423   */\n      0x60\n        /* \"#utility.yul\":10406:10424   */\n      add\n        /* \"src/ribbonVault1.sol\":6861:6918  swap(user,block.timestamp,pointToSwap,amoutAfterFee,_fee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ribbonVault1.sol\":6147:6926  {... */\n      pop\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":6032:6926  function permitSwapToPaymentCoin(address user,uint pointToSwap,uint256 deadline,uint8 v,bytes32 r,bytes32 s)public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3659:3710   */\n      mstore\n        /* \"#utility.yul\":3632:3650   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_177\n        /* \"#utility.yul\":3513:3716   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0x03bb33715397e0038c873ba02d4426eebb2b65cc3940a0fa71a481a9b37d980d\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_258\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0xbe147d0aaf628bab5d3600ba0e8222c4d7f0eec30321d0b98d9f641634fbb471\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0xa1c879b0284e72931b8cd098e080355084a332f82e911af96b3055fa2035b7e8\")\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_147\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":11983:12008   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0xdd8b51ee9128c681fbd81845dd6426716fdc986a3bb51fedf5af16f35ac2adb3\")\n        /* \"#utility.yul\":12024:12042   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":12017:12051   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0x5a51cac41fe69f71b7795862cc646f7451dfff9d51b9de6ea410fc434c56d513\")\n        /* \"#utility.yul\":12067:12085   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":12060:12094   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"#utility.yul\":12110:12128   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":12103:12137   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"#utility.yul\":12153:12172   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":12146:12207   */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":11955:11974   */\n      0xc0\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_147\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0xeaf32fa183047e964e285a9ee962816e722361d0ef19b580cefefec39cdc1e6b\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_147\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0xf8488ee4284bdfced5e7ecbb6b2116f40bc259e448370e3da8f991f5c7e11002\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9146:9178   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9128:9179   */\n      mstore\n        /* \"#utility.yul\":9195:9213   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9188:9222   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":9101:9119   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_270\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ribbonVault1.sol\":7701:8542  function _permit(... */\n    tag_234:\n        /* \"src/ribbonVault1.sol\":7969:7977  sig_v[v] */\n      0xff\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ribbonVault1.sol\":7969:7974  sig_v */\n      0x0e\n        /* \"src/ribbonVault1.sol\":7969:7977  sig_v[v] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"src/ribbonVault1.sol\":7969:7984  sig_v[v]==false */\n      iszero\n      dup1\n        /* \"src/ribbonVault1.sol\":7969:8005  sig_v[v]==false || sig_r[r] == false */\n      tag_274\n      jumpi\n      pop\n        /* \"src/ribbonVault1.sol\":7988:7996  sig_r[r] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/ribbonVault1.sol\":7988:7993  sig_r */\n      0x0f\n        /* \"src/ribbonVault1.sol\":7988:7996  sig_r[r] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/ribbonVault1.sol\":7988:8005  sig_r[r] == false */\n      iszero\n        /* \"src/ribbonVault1.sol\":7969:8005  sig_v[v]==false || sig_r[r] == false */\n    tag_274:\n        /* \"src/ribbonVault1.sol\":7969:8024  sig_v[v]==false || sig_r[r] == false || sig_s[s]==false */\n      dup1\n      tag_275\n      jumpi\n      pop\n        /* \"src/ribbonVault1.sol\":8009:8017  sig_s[s] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ribbonVault1.sol\":8009:8014  sig_s */\n      0x10\n        /* \"src/ribbonVault1.sol\":8009:8017  sig_s[s] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/ribbonVault1.sol\":8009:8024  sig_s[s]==false */\n      iszero\n        /* \"src/ribbonVault1.sol\":7969:8024  sig_v[v]==false || sig_r[r] == false || sig_s[s]==false */\n    tag_275:\n        /* \"src/ribbonVault1.sol\":7961:8036  require(sig_v[v]==false || sig_r[r] == false || sig_s[s]==false,\"sig used\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10757:10759   */\n      0x20\n        /* \"src/ribbonVault1.sol\":7961:8036  require(sig_v[v]==false || sig_r[r] == false || sig_s[s]==false,\"sig used\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10739:10760   */\n      mstore\n        /* \"#utility.yul\":10796:10797   */\n      0x08\n        /* \"#utility.yul\":10776:10794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10769:10798   */\n      mstore\n      shl(0xc2, 0x1cda59c81d5cd959)\n        /* \"#utility.yul\":10814:10832   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10807:10845   */\n      mstore\n        /* \"#utility.yul\":10862:10880   */\n      0x64\n      add\n        /* \"src/ribbonVault1.sol\":7961:8036  require(sig_v[v]==false || sig_r[r] == false || sig_s[s]==false,\"sig used\") */\n      tag_177\n        /* \"#utility.yul\":10555:10886   */\n      jump\n        /* \"src/ribbonVault1.sol\":7961:8036  require(sig_v[v]==false || sig_r[r] == false || sig_s[s]==false,\"sig used\") */\n    tag_276:\n        /* \"src/ribbonVault1.sol\":8069:8077  deadline */\n      dup4\n        /* \"src/ribbonVault1.sol\":8051:8066  block.timestamp */\n      timestamp\n        /* \"src/ribbonVault1.sol\":8051:8077  block.timestamp > deadline */\n      gt\n        /* \"src/ribbonVault1.sol\":8047:8146  if (block.timestamp > deadline) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"src/ribbonVault1.sol\":8101:8134  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      shl(0xe1, 0x313c8981)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/ribbonVault1.sol\":8101:8134  ERC2612ExpiredSignature(deadline) */\n      tag_177\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"src/ribbonVault1.sol\":8047:8146  if (block.timestamp > deadline) {... */\n    tag_279:\n        /* \"src/ribbonVault1.sol\":8215:8220  admin */\n      sload(0x0d)\n        /* \"src/ribbonVault1.sol\":8187:8244  abi.encode(PERMIT_TYPEHASH, admin, user, value, deadline) */\n      0x40\n      dup1\n      mload\n        /* \"src/ribbonVault1.sol\":765:846  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 deadline)\") */\n      0x05619a74ecd0240afc3bfb1df2bd1319401220fb577809c3a09bf0ab809ac861\n        /* \"src/ribbonVault1.sol\":8187:8244  abi.encode(PERMIT_TYPEHASH, admin, user, value, deadline) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":11150:11175   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":8215:8220  admin */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":11229:11247   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11222:11265   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11301:11316   */\n      swap1\n      dup8\n      and\n        /* \"#utility.yul\":11281:11299   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":11274:11317   */\n      mstore\n        /* \"#utility.yul\":11333:11351   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":11326:11360   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":11376:11395   */\n      0xa0\n      dup2\n      add\n        /* \"#utility.yul\":11369:11404   */\n      dup6\n      swap1\n      mstore\n        /* \"src/ribbonVault1.sol\":8156:8174  bytes32 structHash */\n      0x00\n      swap1\n        /* \"#utility.yul\":11122:11141   */\n      0xc0\n      add\n        /* \"src/ribbonVault1.sol\":8187:8244  abi.encode(PERMIT_TYPEHASH, admin, user, value, deadline) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/ribbonVault1.sol\":8177:8245  keccak256(abi.encode(PERMIT_TYPEHASH, admin, user, value, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/ribbonVault1.sol\":8156:8245  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, admin, user, value, deadline)) */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":8257:8269  bytes32 hash */\n      0x00\n        /* \"src/ribbonVault1.sol\":8272:8300  _hashTypedDataV4(structHash) */\n      tag_283\n        /* \"src/ribbonVault1.sol\":8289:8299  structHash */\n      dup3\n        /* \"src/ribbonVault1.sol\":8272:8288  _hashTypedDataV4 */\n      tag_284\n        /* \"src/ribbonVault1.sol\":8272:8300  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_283:\n        /* \"src/ribbonVault1.sol\":8257:8300  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"src/ribbonVault1.sol\":8313:8327  address signer */\n      0x00\n        /* \"src/ribbonVault1.sol\":8330:8358  ECDSA.recover(hash, v, r, s) */\n      tag_285\n        /* \"src/ribbonVault1.sol\":8344:8348  hash */\n      dup3\n        /* \"src/ribbonVault1.sol\":8350:8351  v */\n      dup8\n        /* \"src/ribbonVault1.sol\":8353:8354  r */\n      dup8\n        /* \"src/ribbonVault1.sol\":8356:8357  s */\n      dup8\n        /* \"src/ribbonVault1.sol\":8330:8343  ECDSA.recover */\n      tag_286\n        /* \"src/ribbonVault1.sol\":8330:8358  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_285:\n        /* \"src/ribbonVault1.sol\":8383:8388  admin */\n      sload(0x0d)\n        /* \"src/ribbonVault1.sol\":8313:8358  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ribbonVault1.sol\":8373:8388  signer != admin */\n      dup1\n      dup4\n      and\n        /* \"src/ribbonVault1.sol\":8383:8388  admin */\n      swap2\n      and\n        /* \"src/ribbonVault1.sol\":8373:8388  signer != admin */\n      eq\n        /* \"src/ribbonVault1.sol\":8369:8459  if (signer != admin) {... */\n      tag_287\n      jumpi\n        /* \"src/ribbonVault1.sol\":8441:8446  admin */\n      sload(0x0d)\n        /* \"src/ribbonVault1.sol\":8412:8447  ERC2612InvalidSigner(signer, admin) */\n      mload(0x40)\n      shl(0xe1, 0x25c00723)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11645:11660   */\n      dup1\n      dup5\n      and\n        /* \"src/ribbonVault1.sol\":8412:8447  ERC2612InvalidSigner(signer, admin) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11627:11661   */\n      mstore\n        /* \"src/ribbonVault1.sol\":8441:8446  admin */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11677:11695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11670:11713   */\n      mstore\n        /* \"#utility.yul\":11562:11580   */\n      0x44\n      add\n        /* \"src/ribbonVault1.sol\":8412:8447  ERC2612InvalidSigner(signer, admin) */\n      tag_177\n        /* \"#utility.yul\":11415:11719   */\n      jump\n        /* \"src/ribbonVault1.sol\":8369:8459  if (signer != admin) {... */\n    tag_287:\n      pop\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":8469:8477  sig_v[v] */\n      0xff\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ribbonVault1.sol\":8469:8474  sig_v */\n      0x0e\n        /* \"src/ribbonVault1.sol\":8469:8477  sig_v[v] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ribbonVault1.sol\":8469:8482  sig_v[v]=true */\n      dup1\n      sload\n      not(0xff)\n      swap1\n      dup2\n      and\n        /* \"src/ribbonVault1.sol\":8478:8482  true */\n      0x01\n        /* \"src/ribbonVault1.sol\":8469:8482  sig_v[v]=true */\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"src/ribbonVault1.sol\":8493:8501  sig_r[r] */\n      swap5\n      dup5\n      mstore\n        /* \"src/ribbonVault1.sol\":8493:8498  sig_r */\n      0x0f\n        /* \"src/ribbonVault1.sol\":8493:8501  sig_r[r] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"src/ribbonVault1.sol\":8493:8506  sig_r[r]=true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"src/ribbonVault1.sol\":8517:8525  sig_s[s] */\n      swap5\n      dup4\n      mstore\n        /* \"src/ribbonVault1.sol\":8517:8522  sig_s */\n      0x10\n        /* \"src/ribbonVault1.sol\":8517:8525  sig_s[s] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/ribbonVault1.sol\":8517:8530  sig_s[s]=true */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"src/ribbonVault1.sol\":7701:8542  function _permit(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      dup4\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_296\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_297\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_298)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_299\n      swap1\n      tag_124\n      jump\t// in\n    tag_299:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_124\n      jump\t// in\n    tag_300:\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_302\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_301)\n    tag_302:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_303:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_303\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_305\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_308\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3677:3709   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3659:3710   */\n      mstore\n        /* \"#utility.yul\":3632:3650   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_177\n        /* \"#utility.yul\":3513:3716   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_298\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_313\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_148\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n      shl(0xf0, 0x1901)\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      swap1\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_316\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_317\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_318\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_319\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_318:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      swap1\n      swap7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap2\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      swap1\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      swap1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n      dup1\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_331\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_330)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":12445:12470   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":12518:12522   */\n      0xff\n        /* \"#utility.yul\":12506:12523   */\n      dup10\n      and\n        /* \"#utility.yul\":12486:12504   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":12479:12524   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":12540:12558   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":12533:12567   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":12583:12601   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":12576:12610   */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":12417:12436   */\n      0xa0\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_335:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_336\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      dup3\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_330)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_330:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_342\n      jumpi\n      tag_342\n      tag_340\n      jump\t// in\n    tag_342:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_348\n      jumpi\n      tag_348\n      tag_340\n      jump\t// in\n    tag_348:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_354\n      jumpi\n      tag_354\n      tag_340\n      jump\t// in\n    tag_354:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_177\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_361\n      jumpi\n      tag_361\n      tag_340\n      jump\t// in\n    tag_361:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      tag_177\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      dup2\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      shl(0xe2, 0x2cd44ac3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3659:3710   */\n      mstore\n        /* \"#utility.yul\":3632:3650   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_177\n        /* \"#utility.yul\":3513:3716   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_369\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_373\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_372)\n    tag_373:\n      0x60\n      swap2\n      pop\n    tag_372:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_374\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_375\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_378\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_379\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_140)\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_381\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_381:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3677:3709   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3659:3710   */\n      mstore\n        /* \"#utility.yul\":3632:3650   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_177\n        /* \"#utility.yul\":3513:3716   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_382:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_140)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":196:446   */\n    tag_387:\n        /* \"#utility.yul\":281:282   */\n      0x00\n        /* \"#utility.yul\":291:404   */\n    tag_398:\n        /* \"#utility.yul\":305:311   */\n      dup4\n        /* \"#utility.yul\":302:303   */\n      dup2\n        /* \"#utility.yul\":299:312   */\n      lt\n        /* \"#utility.yul\":291:404   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":381:392   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":375:393   */\n      mload\n        /* \"#utility.yul\":362:373   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":355:394   */\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":320:330   */\n      add\n        /* \"#utility.yul\":291:404   */\n      jump(tag_398)\n    tag_400:\n      pop\n      pop\n        /* \"#utility.yul\":438:439   */\n      0x00\n        /* \"#utility.yul\":420:436   */\n      swap2\n      add\n        /* \"#utility.yul\":413:440   */\n      mstore\n        /* \"#utility.yul\":196:446   */\n      jump\t// out\n        /* \"#utility.yul\":451:722   */\n    tag_388:\n        /* \"#utility.yul\":493:496   */\n      0x00\n        /* \"#utility.yul\":531:536   */\n      dup2\n        /* \"#utility.yul\":525:537   */\n      mload\n        /* \"#utility.yul\":558:564   */\n      dup1\n        /* \"#utility.yul\":553:556   */\n      dup5\n        /* \"#utility.yul\":546:565   */\n      mstore\n        /* \"#utility.yul\":574:650   */\n      tag_402\n        /* \"#utility.yul\":643:649   */\n      dup2\n        /* \"#utility.yul\":636:640   */\n      0x20\n        /* \"#utility.yul\":631:634   */\n      dup7\n        /* \"#utility.yul\":627:641   */\n      add\n        /* \"#utility.yul\":620:624   */\n      0x20\n        /* \"#utility.yul\":613:618   */\n      dup7\n        /* \"#utility.yul\":609:625   */\n      add\n        /* \"#utility.yul\":574:650   */\n      tag_387\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":704:706   */\n      0x1f\n        /* \"#utility.yul\":683:698   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":679:708   */\n      and\n        /* \"#utility.yul\":670:709   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":711:715   */\n      0x20\n        /* \"#utility.yul\":666:716   */\n      add\n      swap3\n        /* \"#utility.yul\":451:722   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":727:947   */\n    tag_41:\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":865:874   */\n      dup2\n        /* \"#utility.yul\":858:879   */\n      mstore\n        /* \"#utility.yul\":839:843   */\n      0x00\n        /* \"#utility.yul\":896:941   */\n      tag_140\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup4\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:920   */\n      dup5\n        /* \"#utility.yul\":896:941   */\n      tag_388\n      jump\t// in\n        /* \"#utility.yul\":952:1132   */\n    tag_44:\n        /* \"#utility.yul\":1011:1017   */\n      0x00\n        /* \"#utility.yul\":1064:1066   */\n      0x20\n        /* \"#utility.yul\":1052:1061   */\n      dup3\n        /* \"#utility.yul\":1043:1050   */\n      dup5\n        /* \"#utility.yul\":1039:1062   */\n      sub\n        /* \"#utility.yul\":1035:1067   */\n      slt\n        /* \"#utility.yul\":1032:1084   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1077:1078   */\n      dup1\n        /* \"#utility.yul\":1070:1082   */\n      revert\n        /* \"#utility.yul\":1032:1084   */\n    tag_406:\n      pop\n        /* \"#utility.yul\":1103:1126   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":952:1132   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1511:1629   */\n    tag_389:\n        /* \"#utility.yul\":1597:1602   */\n      dup1\n        /* \"#utility.yul\":1590:1603   */\n      iszero\n        /* \"#utility.yul\":1583:1604   */\n      iszero\n        /* \"#utility.yul\":1576:1581   */\n      dup2\n        /* \"#utility.yul\":1573:1605   */\n      eq\n        /* \"#utility.yul\":1563:1623   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1619:1620   */\n      0x00\n        /* \"#utility.yul\":1616:1617   */\n      dup1\n        /* \"#utility.yul\":1609:1621   */\n      revert\n        /* \"#utility.yul\":1634:1875   */\n    tag_66:\n        /* \"#utility.yul\":1690:1696   */\n      0x00\n        /* \"#utility.yul\":1743:1745   */\n      0x20\n        /* \"#utility.yul\":1731:1740   */\n      dup3\n        /* \"#utility.yul\":1722:1729   */\n      dup5\n        /* \"#utility.yul\":1718:1741   */\n      sub\n        /* \"#utility.yul\":1714:1746   */\n      slt\n        /* \"#utility.yul\":1711:1763   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1759:1760   */\n      0x00\n        /* \"#utility.yul\":1756:1757   */\n      dup1\n        /* \"#utility.yul\":1749:1761   */\n      revert\n        /* \"#utility.yul\":1711:1763   */\n    tag_412:\n        /* \"#utility.yul\":1798:1807   */\n      dup2\n        /* \"#utility.yul\":1785:1808   */\n      calldataload\n        /* \"#utility.yul\":1817:1845   */\n      tag_140\n        /* \"#utility.yul\":1839:1844   */\n      dup2\n        /* \"#utility.yul\":1817:1845   */\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":1880:2053   */\n    tag_390:\n        /* \"#utility.yul\":1948:1968   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1997:2028   */\n      dup2\n      and\n        /* \"#utility.yul\":1987:2029   */\n      dup2\n      eq\n        /* \"#utility.yul\":1977:2047   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2043:2044   */\n      0x00\n        /* \"#utility.yul\":2040:2041   */\n      dup1\n        /* \"#utility.yul\":2033:2045   */\n      revert\n        /* \"#utility.yul\":1977:2047   */\n    tag_415:\n        /* \"#utility.yul\":1880:2053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2058:2244   */\n    tag_70:\n        /* \"#utility.yul\":2117:2123   */\n      0x00\n        /* \"#utility.yul\":2170:2172   */\n      0x20\n        /* \"#utility.yul\":2158:2167   */\n      dup3\n        /* \"#utility.yul\":2149:2156   */\n      dup5\n        /* \"#utility.yul\":2145:2168   */\n      sub\n        /* \"#utility.yul\":2141:2173   */\n      slt\n        /* \"#utility.yul\":2138:2190   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":2186:2187   */\n      0x00\n        /* \"#utility.yul\":2183:2184   */\n      dup1\n        /* \"#utility.yul\":2176:2188   */\n      revert\n        /* \"#utility.yul\":2138:2190   */\n    tag_417:\n        /* \"#utility.yul\":2209:2238   */\n      tag_140\n        /* \"#utility.yul\":2228:2237   */\n      dup3\n        /* \"#utility.yul\":2209:2238   */\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":2249:3508   */\n    tag_80:\n        /* \"#utility.yul\":2655:2658   */\n      0xff\n        /* \"#utility.yul\":2650:2653   */\n      0xf8\n        /* \"#utility.yul\":2646:2659   */\n      shl\n        /* \"#utility.yul\":2638:2644   */\n      dup9\n        /* \"#utility.yul\":2634:2660   */\n      and\n        /* \"#utility.yul\":2623:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2661   */\n      mstore\n        /* \"#utility.yul\":2597:2601   */\n      0x00\n        /* \"#utility.yul\":2680:2682   */\n      0x20\n        /* \"#utility.yul\":2718:2721   */\n      0xe0\n        /* \"#utility.yul\":2713:2715   */\n      0x20\n        /* \"#utility.yul\":2702:2711   */\n      dup5\n        /* \"#utility.yul\":2698:2716   */\n      add\n        /* \"#utility.yul\":2691:2722   */\n      mstore\n        /* \"#utility.yul\":2745:2791   */\n      tag_420\n        /* \"#utility.yul\":2786:2789   */\n      0xe0\n        /* \"#utility.yul\":2775:2784   */\n      dup5\n        /* \"#utility.yul\":2771:2790   */\n      add\n        /* \"#utility.yul\":2763:2769   */\n      dup11\n        /* \"#utility.yul\":2745:2791   */\n      tag_388\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2839:2848   */\n      dup4\n        /* \"#utility.yul\":2831:2837   */\n      dup2\n        /* \"#utility.yul\":2827:2849   */\n      sub\n        /* \"#utility.yul\":2822:2824   */\n      0x40\n        /* \"#utility.yul\":2811:2820   */\n      dup6\n        /* \"#utility.yul\":2807:2825   */\n      add\n        /* \"#utility.yul\":2800:2850   */\n      mstore\n        /* \"#utility.yul\":2873:2906   */\n      tag_421\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2891:2897   */\n      dup11\n        /* \"#utility.yul\":2873:2906   */\n      tag_388\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2937:2939   */\n      0x60\n        /* \"#utility.yul\":2922:2940   */\n      dup6\n      add\n        /* \"#utility.yul\":2915:2949   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2986:3018   */\n      dup9\n      and\n        /* \"#utility.yul\":2980:2983   */\n      0x80\n        /* \"#utility.yul\":2965:2984   */\n      dup7\n      add\n        /* \"#utility.yul\":2958:3019   */\n      mstore\n        /* \"#utility.yul\":3006:3009   */\n      0xa0\n        /* \"#utility.yul\":3035:3054   */\n      dup6\n      add\n        /* \"#utility.yul\":3028:3063   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":3100:3122   */\n      dup5\n      dup2\n      sub\n        /* \"#utility.yul\":3094:3097   */\n      0xc0\n        /* \"#utility.yul\":3079:3098   */\n      dup7\n      add\n        /* \"#utility.yul\":3072:3123   */\n      mstore\n        /* \"#utility.yul\":3172:3185   */\n      dup6\n      mload\n        /* \"#utility.yul\":3194:3216   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3244:3246   */\n      0x20\n        /* \"#utility.yul\":3270:3285   */\n      dup1\n      dup9\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":3232:3247   */\n      swap1\n      swap2\n      add\n      swap1\n      0x00\n        /* \"#utility.yul\":3313:3482   */\n    tag_422:\n        /* \"#utility.yul\":3327:3333   */\n      dup2\n        /* \"#utility.yul\":3324:3325   */\n      dup2\n        /* \"#utility.yul\":3321:3334   */\n      lt\n        /* \"#utility.yul\":3313:3482   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":3388:3401   */\n      dup4\n      mload\n        /* \"#utility.yul\":3376:3402   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3457:3472   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3422:3434   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3349:3350   */\n      0x01\n        /* \"#utility.yul\":3342:3351   */\n      add\n        /* \"#utility.yul\":3313:3482   */\n      jump(tag_422)\n    tag_424:\n      pop\n        /* \"#utility.yul\":3499:3502   */\n      swap1\n      swap13\n        /* \"#utility.yul\":2249:3508   */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3721:4049   */\n    tag_108:\n        /* \"#utility.yul\":3798:3804   */\n      0x00\n        /* \"#utility.yul\":3806:3812   */\n      dup1\n        /* \"#utility.yul\":3814:3820   */\n      0x00\n        /* \"#utility.yul\":3867:3869   */\n      0x60\n        /* \"#utility.yul\":3855:3864   */\n      dup5\n        /* \"#utility.yul\":3846:3853   */\n      dup7\n        /* \"#utility.yul\":3842:3865   */\n      sub\n        /* \"#utility.yul\":3838:3870   */\n      slt\n        /* \"#utility.yul\":3835:3887   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":3883:3884   */\n      0x00\n        /* \"#utility.yul\":3880:3881   */\n      dup1\n        /* \"#utility.yul\":3873:3885   */\n      revert\n        /* \"#utility.yul\":3835:3887   */\n    tag_427:\n        /* \"#utility.yul\":3906:3935   */\n      tag_428\n        /* \"#utility.yul\":3925:3934   */\n      dup5\n        /* \"#utility.yul\":3906:3935   */\n      tag_390\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3896:3935   */\n      swap3\n      pop\n        /* \"#utility.yul\":3954:3992   */\n      tag_429\n        /* \"#utility.yul\":3988:3990   */\n      0x20\n        /* \"#utility.yul\":3977:3986   */\n      dup6\n        /* \"#utility.yul\":3973:3991   */\n      add\n        /* \"#utility.yul\":3954:3992   */\n      tag_390\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3944:3992   */\n      swap2\n      pop\n        /* \"#utility.yul\":4039:4041   */\n      0x40\n        /* \"#utility.yul\":4028:4037   */\n      dup5\n        /* \"#utility.yul\":4024:4042   */\n      add\n        /* \"#utility.yul\":4011:4043   */\n      calldataload\n        /* \"#utility.yul\":4001:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":3721:4049   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4054:4168   */\n    tag_391:\n        /* \"#utility.yul\":4138:4142   */\n      0xff\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4127:4143   */\n      and\n        /* \"#utility.yul\":4120:4125   */\n      dup2\n        /* \"#utility.yul\":4117:4144   */\n      eq\n        /* \"#utility.yul\":4107:4162   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":4158:4159   */\n      0x00\n        /* \"#utility.yul\":4155:4156   */\n      dup1\n        /* \"#utility.yul\":4148:4160   */\n      revert\n        /* \"#utility.yul\":4173:4765   */\n    tag_118:\n        /* \"#utility.yul\":4275:4281   */\n      0x00\n        /* \"#utility.yul\":4283:4289   */\n      dup1\n        /* \"#utility.yul\":4291:4297   */\n      0x00\n        /* \"#utility.yul\":4299:4305   */\n      dup1\n        /* \"#utility.yul\":4307:4313   */\n      0x00\n        /* \"#utility.yul\":4315:4321   */\n      dup1\n        /* \"#utility.yul\":4368:4371   */\n      0xc0\n        /* \"#utility.yul\":4356:4365   */\n      dup8\n        /* \"#utility.yul\":4347:4354   */\n      dup10\n        /* \"#utility.yul\":4343:4366   */\n      sub\n        /* \"#utility.yul\":4339:4372   */\n      slt\n        /* \"#utility.yul\":4336:4389   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":4385:4386   */\n      0x00\n        /* \"#utility.yul\":4382:4383   */\n      dup1\n        /* \"#utility.yul\":4375:4387   */\n      revert\n        /* \"#utility.yul\":4336:4389   */\n    tag_433:\n        /* \"#utility.yul\":4408:4437   */\n      tag_434\n        /* \"#utility.yul\":4427:4436   */\n      dup8\n        /* \"#utility.yul\":4408:4437   */\n      tag_390\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4398:4437   */\n      swap6\n      pop\n        /* \"#utility.yul\":4484:4486   */\n      0x20\n        /* \"#utility.yul\":4473:4482   */\n      dup8\n        /* \"#utility.yul\":4469:4487   */\n      add\n        /* \"#utility.yul\":4456:4488   */\n      calldataload\n        /* \"#utility.yul\":4446:4488   */\n      swap5\n      pop\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4524:4533   */\n      dup8\n        /* \"#utility.yul\":4520:4538   */\n      add\n        /* \"#utility.yul\":4507:4539   */\n      calldataload\n        /* \"#utility.yul\":4497:4539   */\n      swap4\n      pop\n        /* \"#utility.yul\":4589:4591   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup8\n        /* \"#utility.yul\":4574:4592   */\n      add\n        /* \"#utility.yul\":4561:4593   */\n      calldataload\n        /* \"#utility.yul\":4602:4631   */\n      tag_435\n        /* \"#utility.yul\":4625:4630   */\n      dup2\n        /* \"#utility.yul\":4602:4631   */\n      tag_391\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4173:4765   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":4702:4705   */\n      0x80\n        /* \"#utility.yul\":4687:4706   */\n      dup2\n      add\n        /* \"#utility.yul\":4674:4707   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":4754:4757   */\n      0xa0\n        /* \"#utility.yul\":4739:4758   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4726:4759   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4173:4765   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4770:5150   */\n    tag_124:\n        /* \"#utility.yul\":4849:4850   */\n      0x01\n        /* \"#utility.yul\":4845:4857   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4892:4904   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4913:4974   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4967:4971   */\n      0x7f\n        /* \"#utility.yul\":4959:4965   */\n      dup3\n        /* \"#utility.yul\":4955:4972   */\n      and\n        /* \"#utility.yul\":4945:4972   */\n      swap2\n      pop\n        /* \"#utility.yul\":4913:4974   */\n    tag_437:\n        /* \"#utility.yul\":5020:5022   */\n      0x20\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5009:5023   */\n      lt\n        /* \"#utility.yul\":4989:5007   */\n      dup2\n        /* \"#utility.yul\":4986:5024   */\n      sub\n        /* \"#utility.yul\":4983:5144   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5066:5076   */\n      0x4e487b71\n        /* \"#utility.yul\":5061:5064   */\n      0xe0\n        /* \"#utility.yul\":5057:5077   */\n      shl\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5047:5078   */\n      mstore\n        /* \"#utility.yul\":5101:5105   */\n      0x22\n        /* \"#utility.yul\":5098:5099   */\n      0x04\n        /* \"#utility.yul\":5091:5106   */\n      mstore\n        /* \"#utility.yul\":5129:5133   */\n      0x24\n        /* \"#utility.yul\":5126:5127   */\n      0x00\n        /* \"#utility.yul\":5119:5134   */\n      revert\n        /* \"#utility.yul\":4983:5144   */\n    tag_438:\n      pop\n        /* \"#utility.yul\":4770:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5155:5282   */\n    tag_392:\n        /* \"#utility.yul\":5216:5226   */\n      0x4e487b71\n        /* \"#utility.yul\":5211:5214   */\n      0xe0\n        /* \"#utility.yul\":5207:5227   */\n      shl\n        /* \"#utility.yul\":5204:5205   */\n      0x00\n        /* \"#utility.yul\":5197:5228   */\n      mstore\n        /* \"#utility.yul\":5247:5251   */\n      0x11\n        /* \"#utility.yul\":5244:5245   */\n      0x04\n        /* \"#utility.yul\":5237:5252   */\n      mstore\n        /* \"#utility.yul\":5271:5275   */\n      0x24\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5261:5276   */\n      revert\n        /* \"#utility.yul\":5287:5455   */\n    tag_131:\n        /* \"#utility.yul\":5360:5369   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5391:5400   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5408:5423   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5402:5424   */\n      dup5\n      eq\n        /* \"#utility.yul\":5388:5425   */\n      or\n        /* \"#utility.yul\":5378:5449   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":5429:5447   */\n      tag_298\n      tag_392\n      jump\t// in\n        /* \"#utility.yul\":5460:5707   */\n    tag_135:\n        /* \"#utility.yul\":5528:5534   */\n      0x00\n        /* \"#utility.yul\":5581:5583   */\n      0x20\n        /* \"#utility.yul\":5569:5578   */\n      dup3\n        /* \"#utility.yul\":5560:5567   */\n      dup5\n        /* \"#utility.yul\":5556:5579   */\n      sub\n        /* \"#utility.yul\":5552:5584   */\n      slt\n        /* \"#utility.yul\":5549:5601   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":5597:5598   */\n      0x00\n        /* \"#utility.yul\":5594:5595   */\n      dup1\n        /* \"#utility.yul\":5587:5599   */\n      revert\n        /* \"#utility.yul\":5549:5601   */\n    tag_444:\n        /* \"#utility.yul\":5629:5638   */\n      dup2\n        /* \"#utility.yul\":5623:5639   */\n      mload\n        /* \"#utility.yul\":5648:5677   */\n      tag_140\n        /* \"#utility.yul\":5671:5676   */\n      dup2\n        /* \"#utility.yul\":5648:5677   */\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":5712:6128   */\n    tag_393:\n        /* \"#utility.yul\":5801:5802   */\n      0x01\n        /* \"#utility.yul\":5838:5843   */\n      dup2\n        /* \"#utility.yul\":5801:5802   */\n      dup2\n        /* \"#utility.yul\":5852:6122   */\n    tag_447:\n        /* \"#utility.yul\":5873:5880   */\n      dup1\n        /* \"#utility.yul\":5863:5871   */\n      dup6\n        /* \"#utility.yul\":5860:5881   */\n      gt\n        /* \"#utility.yul\":5852:6122   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5932:5936   */\n      dup2\n        /* \"#utility.yul\":5928:5929   */\n      0x00\n        /* \"#utility.yul\":5924:5930   */\n      not\n        /* \"#utility.yul\":5920:5937   */\n      div\n        /* \"#utility.yul\":5914:5918   */\n      dup3\n        /* \"#utility.yul\":5911:5938   */\n      gt\n        /* \"#utility.yul\":5908:5961   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5941:5959   */\n      tag_451\n      tag_392\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5991:5998   */\n      dup1\n        /* \"#utility.yul\":5981:5989   */\n      dup6\n        /* \"#utility.yul\":5977:5999   */\n      and\n        /* \"#utility.yul\":5974:6029   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6011:6027   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":5974:6029   */\n    tag_452:\n        /* \"#utility.yul\":6090:6112   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":6050:6065   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":5852:6122   */\n      jump(tag_447)\n    tag_449:\n        /* \"#utility.yul\":5856:5859   */\n      pop\n        /* \"#utility.yul\":5712:6128   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6133:6939   */\n    tag_394:\n        /* \"#utility.yul\":6182:6187   */\n      0x00\n        /* \"#utility.yul\":6212:6220   */\n      dup3\n        /* \"#utility.yul\":6202:6282   */\n      tag_454\n      jumpi\n      pop\n        /* \"#utility.yul\":6253:6254   */\n      0x01\n        /* \"#utility.yul\":6267:6272   */\n      jump(tag_298)\n        /* \"#utility.yul\":6202:6282   */\n    tag_454:\n        /* \"#utility.yul\":6301:6305   */\n      dup2\n        /* \"#utility.yul\":6291:6367   */\n      tag_455\n      jumpi\n      pop\n        /* \"#utility.yul\":6338:6339   */\n      0x00\n        /* \"#utility.yul\":6352:6357   */\n      jump(tag_298)\n        /* \"#utility.yul\":6291:6367   */\n    tag_455:\n        /* \"#utility.yul\":6383:6387   */\n      dup2\n        /* \"#utility.yul\":6401:6402   */\n      0x01\n        /* \"#utility.yul\":6396:6455   */\n      dup2\n      eq\n      tag_457\n      jumpi\n        /* \"#utility.yul\":6469:6470   */\n      0x02\n        /* \"#utility.yul\":6464:6594   */\n      dup2\n      eq\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6376:6594   */\n      jump(tag_456)\n        /* \"#utility.yul\":6396:6455   */\n    tag_457:\n        /* \"#utility.yul\":6426:6427   */\n      0x01\n        /* \"#utility.yul\":6417:6427   */\n      swap2\n      pop\n        /* \"#utility.yul\":6440:6445   */\n      pop\n      jump(tag_298)\n        /* \"#utility.yul\":6464:6594   */\n    tag_458:\n        /* \"#utility.yul\":6501:6504   */\n      0xff\n        /* \"#utility.yul\":6491:6499   */\n      dup5\n        /* \"#utility.yul\":6488:6505   */\n      gt\n        /* \"#utility.yul\":6485:6528   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":6508:6526   */\n      tag_460\n      tag_392\n      jump\t// in\n    tag_460:\n      pop\n      pop\n        /* \"#utility.yul\":6564:6565   */\n      0x01\n        /* \"#utility.yul\":6550:6566   */\n      dup3\n      shl\n        /* \"#utility.yul\":6579:6584   */\n      jump(tag_298)\n        /* \"#utility.yul\":6376:6594   */\n    tag_456:\n      pop\n        /* \"#utility.yul\":6678:6680   */\n      0x20\n        /* \"#utility.yul\":6668:6676   */\n      dup4\n        /* \"#utility.yul\":6665:6681   */\n      lt\n        /* \"#utility.yul\":6659:6662   */\n      0x0133\n        /* \"#utility.yul\":6653:6657   */\n      dup4\n        /* \"#utility.yul\":6650:6663   */\n      lt\n        /* \"#utility.yul\":6646:6682   */\n      and\n        /* \"#utility.yul\":6640:6642   */\n      0x4e\n        /* \"#utility.yul\":6630:6638   */\n      dup5\n        /* \"#utility.yul\":6627:6643   */\n      lt\n        /* \"#utility.yul\":6622:6624   */\n      0x0b\n        /* \"#utility.yul\":6616:6620   */\n      dup5\n        /* \"#utility.yul\":6613:6625   */\n      lt\n        /* \"#utility.yul\":6609:6644   */\n      and\n        /* \"#utility.yul\":6606:6683   */\n      or\n        /* \"#utility.yul\":6603:6762   */\n      iszero\n      tag_461\n      jumpi\n      pop\n        /* \"#utility.yul\":6715:6734   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":6747:6752   */\n      jump(tag_298)\n        /* \"#utility.yul\":6603:6762   */\n    tag_461:\n        /* \"#utility.yul\":6794:6828   */\n      tag_462\n        /* \"#utility.yul\":6819:6827   */\n      dup4\n        /* \"#utility.yul\":6813:6817   */\n      dup4\n        /* \"#utility.yul\":6794:6828   */\n      tag_393\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6864:6870   */\n      dup1\n        /* \"#utility.yul\":6860:6861   */\n      0x00\n        /* \"#utility.yul\":6856:6862   */\n      not\n        /* \"#utility.yul\":6852:6871   */\n      div\n        /* \"#utility.yul\":6843:6850   */\n      dup3\n        /* \"#utility.yul\":6840:6872   */\n      gt\n        /* \"#utility.yul\":6837:6895   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":6875:6893   */\n      tag_464\n      tag_392\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6913:6933   */\n      mul\n      swap4\n        /* \"#utility.yul\":6133:6939   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6944:7084   */\n    tag_137:\n        /* \"#utility.yul\":7002:7007   */\n      0x00\n        /* \"#utility.yul\":7031:7078   */\n      tag_140\n        /* \"#utility.yul\":7072:7076   */\n      0xff\n        /* \"#utility.yul\":7062:7070   */\n      dup5\n        /* \"#utility.yul\":7058:7077   */\n      and\n        /* \"#utility.yul\":7052:7056   */\n      dup4\n        /* \"#utility.yul\":7031:7078   */\n      tag_394\n      jump\t// in\n        /* \"#utility.yul\":7089:7306   */\n    tag_141:\n        /* \"#utility.yul\":7129:7130   */\n      0x00\n        /* \"#utility.yul\":7155:7156   */\n      dup3\n        /* \"#utility.yul\":7145:7277   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":7199:7209   */\n      0x4e487b71\n        /* \"#utility.yul\":7194:7197   */\n      0xe0\n        /* \"#utility.yul\":7190:7210   */\n      shl\n        /* \"#utility.yul\":7187:7188   */\n      0x00\n        /* \"#utility.yul\":7180:7211   */\n      mstore\n        /* \"#utility.yul\":7234:7238   */\n      0x12\n        /* \"#utility.yul\":7231:7232   */\n      0x04\n        /* \"#utility.yul\":7224:7239   */\n      mstore\n        /* \"#utility.yul\":7262:7266   */\n      0x24\n        /* \"#utility.yul\":7259:7260   */\n      0x00\n        /* \"#utility.yul\":7252:7267   */\n      revert\n        /* \"#utility.yul\":7145:7277   */\n    tag_468:\n      pop\n        /* \"#utility.yul\":7291:7300   */\n      div\n      swap1\n        /* \"#utility.yul\":7089:7306   */\n      jump\t// out\n        /* \"#utility.yul\":7443:7798   */\n    tag_178:\n        /* \"#utility.yul\":7645:7647   */\n      0x20\n        /* \"#utility.yul\":7627:7648   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7684:7686   */\n      0x1f\n        /* \"#utility.yul\":7664:7682   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7657:7687   */\n      mstore\n        /* \"#utility.yul\":7723:7756   */\n      0x796f75206172652073656e64696e6720746f207a65726f206164647265737300\n        /* \"#utility.yul\":7718:7720   */\n      0x40\n        /* \"#utility.yul\":7703:7721   */\n      dup3\n      add\n        /* \"#utility.yul\":7696:7757   */\n      mstore\n        /* \"#utility.yul\":7789:7791   */\n      0x60\n        /* \"#utility.yul\":7774:7792   */\n      add\n      swap1\n        /* \"#utility.yul\":7443:7798   */\n      jump\t// out\n        /* \"#utility.yul\":7803:7987   */\n    tag_183:\n        /* \"#utility.yul\":7873:7879   */\n      0x00\n        /* \"#utility.yul\":7926:7928   */\n      0x20\n        /* \"#utility.yul\":7914:7923   */\n      dup3\n        /* \"#utility.yul\":7905:7912   */\n      dup5\n        /* \"#utility.yul\":7901:7924   */\n      sub\n        /* \"#utility.yul\":7897:7929   */\n      slt\n        /* \"#utility.yul\":7894:7946   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":7942:7943   */\n      0x00\n        /* \"#utility.yul\":7939:7940   */\n      dup1\n        /* \"#utility.yul\":7932:7944   */\n      revert\n        /* \"#utility.yul\":7894:7946   */\n    tag_472:\n      pop\n        /* \"#utility.yul\":7965:7981   */\n      mload\n      swap2\n        /* \"#utility.yul\":7803:7987   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7992:8117   */\n    tag_185:\n        /* \"#utility.yul\":8057:8066   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8078:8088   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8075:8111   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8091:8109   */\n      tag_298\n      tag_392\n      jump\t// in\n        /* \"#utility.yul\":8122:8250   */\n    tag_188:\n        /* \"#utility.yul\":8189:8198   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8210:8221   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8207:8244   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8224:8242   */\n      tag_298\n      tag_392\n      jump\t// in\n        /* \"#utility.yul\":9233:9478   */\n    tag_223:\n        /* \"#utility.yul\":9300:9306   */\n      0x00\n        /* \"#utility.yul\":9353:9355   */\n      0x20\n        /* \"#utility.yul\":9341:9350   */\n      dup3\n        /* \"#utility.yul\":9332:9339   */\n      dup5\n        /* \"#utility.yul\":9328:9351   */\n      sub\n        /* \"#utility.yul\":9324:9356   */\n      slt\n        /* \"#utility.yul\":9321:9373   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":9369:9370   */\n      0x00\n        /* \"#utility.yul\":9366:9367   */\n      dup1\n        /* \"#utility.yul\":9359:9371   */\n      revert\n        /* \"#utility.yul\":9321:9373   */\n    tag_483:\n        /* \"#utility.yul\":9401:9410   */\n      dup2\n        /* \"#utility.yul\":9395:9411   */\n      mload\n        /* \"#utility.yul\":9420:9448   */\n      tag_140\n        /* \"#utility.yul\":9442:9447   */\n      dup2\n        /* \"#utility.yul\":9420:9448   */\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":12621:12748   */\n    tag_340:\n        /* \"#utility.yul\":12682:12692   */\n      0x4e487b71\n        /* \"#utility.yul\":12677:12680   */\n      0xe0\n        /* \"#utility.yul\":12673:12693   */\n      shl\n        /* \"#utility.yul\":12670:12671   */\n      0x00\n        /* \"#utility.yul\":12663:12694   */\n      mstore\n        /* \"#utility.yul\":12713:12717   */\n      0x21\n        /* \"#utility.yul\":12710:12711   */\n      0x04\n        /* \"#utility.yul\":12703:12718   */\n      mstore\n        /* \"#utility.yul\":12737:12741   */\n      0x24\n        /* \"#utility.yul\":12734:12735   */\n      0x00\n        /* \"#utility.yul\":12727:12742   */\n      revert\n        /* \"#utility.yul\":12753:13040   */\n    tag_370:\n        /* \"#utility.yul\":12882:12885   */\n      0x00\n        /* \"#utility.yul\":12920:12926   */\n      dup3\n        /* \"#utility.yul\":12914:12927   */\n      mload\n        /* \"#utility.yul\":12936:13002   */\n      tag_495\n        /* \"#utility.yul\":12995:13001   */\n      dup2\n        /* \"#utility.yul\":12990:12993   */\n      dup5\n        /* \"#utility.yul\":12983:12987   */\n      0x20\n        /* \"#utility.yul\":12975:12981   */\n      dup8\n        /* \"#utility.yul\":12971:12988   */\n      add\n        /* \"#utility.yul\":12936:13002   */\n      tag_387\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13018:13034   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":12753:13040   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220200b4ce79d87c1aec0797c58112fa52c8f87218bedf4b4598d52c0cc4b05dcdd64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1886": {
									"entryPoint": null,
									"id": 1886,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3412": {
									"entryPoint": null,
									"id": 3412,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1933": {
									"entryPoint": null,
									"id": 1933,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 412,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStringSlot_1163": {
									"entryPoint": null,
									"id": 1163,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1017": {
									"entryPoint": 491,
									"id": 1017,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_919": {
									"entryPoint": 547,
									"id": 919,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5612:16",
										"nodeType": "YulBlock",
										"src": "0:5612:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:16",
													"nodeType": "YulBlock",
													"src": "74:117:16",
													"statements": [
														{
															"nativeSrc": "84:22:16",
															"nodeType": "YulAssignment",
															"src": "84:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:16"
																},
																"nativeSrc": "93:13:16",
																"nodeType": "YulFunctionCall",
																"src": "93:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:16",
																"nodeType": "YulBlock",
																"src": "169:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:16",
																					"nodeType": "YulLiteral",
																					"src": "178:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:16",
																					"nodeType": "YulLiteral",
																					"src": "181:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:16"
																			},
																			"nativeSrc": "171:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:16"
																		},
																		"nativeSrc": "171:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:16",
																										"nodeType": "YulLiteral",
																										"src": "154:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:16",
																										"nodeType": "YulLiteral",
																										"src": "159:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:16"
																								},
																								"nativeSrc": "150:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:16",
																								"nodeType": "YulLiteral",
																								"src": "163:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:16"
																						},
																						"nativeSrc": "146:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:16"
																				},
																				"nativeSrc": "135:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:16"
																		},
																		"nativeSrc": "125:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:16"
																},
																"nativeSrc": "118:50:16",
																"nodeType": "YulFunctionCall",
																"src": "118:50:16"
															},
															"nativeSrc": "115:70:16",
															"nodeType": "YulIf",
															"src": "115:70:16"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:16",
														"nodeType": "YulTypedName",
														"src": "53:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:16",
														"nodeType": "YulTypedName",
														"src": "64:5:16",
														"type": ""
													}
												],
												"src": "14:177:16"
											},
											{
												"body": {
													"nativeSrc": "228:95:16",
													"nodeType": "YulBlock",
													"src": "228:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:16",
																		"nodeType": "YulLiteral",
																		"src": "245:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:16",
																				"nodeType": "YulLiteral",
																				"src": "252:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:16",
																				"nodeType": "YulLiteral",
																				"src": "257:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:16"
																		},
																		"nativeSrc": "248:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:16"
																},
																"nativeSrc": "238:31:16",
																"nodeType": "YulFunctionCall",
																"src": "238:31:16"
															},
															"nativeSrc": "238:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:16",
																		"nodeType": "YulLiteral",
																		"src": "285:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:16",
																		"nodeType": "YulLiteral",
																		"src": "288:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:16"
																},
																"nativeSrc": "278:15:16",
																"nodeType": "YulFunctionCall",
																"src": "278:15:16"
															},
															"nativeSrc": "278:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:16",
																		"nodeType": "YulLiteral",
																		"src": "309:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:16",
																		"nodeType": "YulLiteral",
																		"src": "312:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:16"
																},
																"nativeSrc": "302:15:16",
																"nodeType": "YulFunctionCall",
																"src": "302:15:16"
															},
															"nativeSrc": "302:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:16"
											},
											{
												"body": {
													"nativeSrc": "394:184:16",
													"nodeType": "YulBlock",
													"src": "394:184:16",
													"statements": [
														{
															"nativeSrc": "404:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "404:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "413:1:16",
																"nodeType": "YulLiteral",
																"src": "413:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "408:1:16",
																	"nodeType": "YulTypedName",
																	"src": "408:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "473:63:16",
																"nodeType": "YulBlock",
																"src": "473:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "498:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "498:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "503:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "503:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "494:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "494:3:16"
																					},
																					"nativeSrc": "494:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "494:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "517:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "517:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "522:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "522:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "513:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "513:3:16"
																							},
																							"nativeSrc": "513:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "513:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "507:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "507:5:16"
																					},
																					"nativeSrc": "507:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "507:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "487:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "487:6:16"
																			},
																			"nativeSrc": "487:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "487:39:16"
																		},
																		"nativeSrc": "487:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "487:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "434:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "434:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "437:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "431:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "431:2:16"
																},
																"nativeSrc": "431:13:16",
																"nodeType": "YulFunctionCall",
																"src": "431:13:16"
															},
															"nativeSrc": "423:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "445:19:16",
																"nodeType": "YulBlock",
																"src": "445:19:16",
																"statements": [
																	{
																		"nativeSrc": "447:15:16",
																		"nodeType": "YulAssignment",
																		"src": "447:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "456:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "456:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "459:2:16",
																					"nodeType": "YulLiteral",
																					"src": "459:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "452:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "452:3:16"
																			},
																			"nativeSrc": "452:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "452:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "447:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "447:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "427:3:16",
																"nodeType": "YulBlock",
																"src": "427:3:16",
																"statements": []
															},
															"src": "423:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "556:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "561:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "552:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:16"
																		},
																		"nativeSrc": "552:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "552:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "570:1:16",
																		"nodeType": "YulLiteral",
																		"src": "570:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:16"
																},
																"nativeSrc": "545:27:16",
																"nodeType": "YulFunctionCall",
																"src": "545:27:16"
															},
															"nativeSrc": "545:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "545:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "328:250:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "372:3:16",
														"nodeType": "YulTypedName",
														"src": "372:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "377:3:16",
														"nodeType": "YulTypedName",
														"src": "377:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "382:6:16",
														"nodeType": "YulTypedName",
														"src": "382:6:16",
														"type": ""
													}
												],
												"src": "328:250:16"
											},
											{
												"body": {
													"nativeSrc": "708:942:16",
													"nodeType": "YulBlock",
													"src": "708:942:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "754:16:16",
																"nodeType": "YulBlock",
																"src": "754:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "763:1:16",
																					"nodeType": "YulLiteral",
																					"src": "763:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "766:1:16",
																					"nodeType": "YulLiteral",
																					"src": "766:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "756:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "756:6:16"
																			},
																			"nativeSrc": "756:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "756:12:16"
																		},
																		"nativeSrc": "756:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "756:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "729:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "729:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "725:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "725:3:16"
																		},
																		"nativeSrc": "725:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "725:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "750:2:16",
																		"nodeType": "YulLiteral",
																		"src": "750:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "721:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:16"
																},
																"nativeSrc": "721:32:16",
																"nodeType": "YulFunctionCall",
																"src": "721:32:16"
															},
															"nativeSrc": "718:52:16",
															"nodeType": "YulIf",
															"src": "718:52:16"
														},
														{
															"nativeSrc": "779:50:16",
															"nodeType": "YulAssignment",
															"src": "779:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "819:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "789:29:16",
																	"nodeType": "YulIdentifier",
																	"src": "789:29:16"
																},
																"nativeSrc": "789:40:16",
																"nodeType": "YulFunctionCall",
																"src": "789:40:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "779:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:16"
																}
															]
														},
														{
															"nativeSrc": "838:39:16",
															"nodeType": "YulVariableDeclaration",
															"src": "838:39:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "873:2:16",
																				"nodeType": "YulLiteral",
																				"src": "873:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "858:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "858:3:16"
																		},
																		"nativeSrc": "858:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "858:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "852:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "852:5:16"
																},
																"nativeSrc": "852:25:16",
																"nodeType": "YulFunctionCall",
																"src": "852:25:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "842:6:16",
																	"nodeType": "YulTypedName",
																	"src": "842:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "886:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "886:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "904:2:16",
																				"nodeType": "YulLiteral",
																				"src": "904:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "908:1:16",
																				"nodeType": "YulLiteral",
																				"src": "908:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "900:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:16"
																		},
																		"nativeSrc": "900:10:16",
																		"nodeType": "YulFunctionCall",
																		"src": "900:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "912:1:16",
																		"nodeType": "YulLiteral",
																		"src": "912:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "896:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "896:3:16"
																},
																"nativeSrc": "896:18:16",
																"nodeType": "YulFunctionCall",
																"src": "896:18:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "890:2:16",
																	"nodeType": "YulTypedName",
																	"src": "890:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "941:16:16",
																"nodeType": "YulBlock",
																"src": "941:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "950:1:16",
																					"nodeType": "YulLiteral",
																					"src": "950:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "953:1:16",
																					"nodeType": "YulLiteral",
																					"src": "953:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "943:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "943:6:16"
																			},
																			"nativeSrc": "943:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "943:12:16"
																		},
																		"nativeSrc": "943:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "943:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "929:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "929:6:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "937:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "937:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "926:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "926:2:16"
																},
																"nativeSrc": "926:14:16",
																"nodeType": "YulFunctionCall",
																"src": "926:14:16"
															},
															"nativeSrc": "923:34:16",
															"nodeType": "YulIf",
															"src": "923:34:16"
														},
														{
															"nativeSrc": "966:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "966:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "980:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "980:9:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "991:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "991:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "976:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "976:3:16"
																},
																"nativeSrc": "976:22:16",
																"nodeType": "YulFunctionCall",
																"src": "976:22:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "970:2:16",
																	"nodeType": "YulTypedName",
																	"src": "970:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1046:16:16",
																"nodeType": "YulBlock",
																"src": "1046:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1055:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1055:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1058:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1048:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1048:6:16"
																			},
																			"nativeSrc": "1048:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1048:12:16"
																		},
																		"nativeSrc": "1048:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1048:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1025:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "1025:2:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1029:4:16",
																						"nodeType": "YulLiteral",
																						"src": "1029:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1021:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1021:3:16"
																				},
																				"nativeSrc": "1021:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1021:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1036:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1036:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1017:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1017:3:16"
																		},
																		"nativeSrc": "1017:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1017:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1010:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:16"
																},
																"nativeSrc": "1010:35:16",
																"nodeType": "YulFunctionCall",
																"src": "1010:35:16"
															},
															"nativeSrc": "1007:55:16",
															"nodeType": "YulIf",
															"src": "1007:55:16"
														},
														{
															"nativeSrc": "1071:19:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1071:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1087:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1087:2:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1081:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1081:5:16"
																},
																"nativeSrc": "1081:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1081:9:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1075:2:16",
																	"nodeType": "YulTypedName",
																	"src": "1075:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1113:22:16",
																"nodeType": "YulBlock",
																"src": "1113:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1115:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1115:16:16"
																			},
																			"nativeSrc": "1115:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1115:18:16"
																		},
																		"nativeSrc": "1115:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1115:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1105:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1105:2:16"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1109:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1109:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1102:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1102:2:16"
																},
																"nativeSrc": "1102:10:16",
																"nodeType": "YulFunctionCall",
																"src": "1102:10:16"
															},
															"nativeSrc": "1099:36:16",
															"nodeType": "YulIf",
															"src": "1099:36:16"
														},
														{
															"nativeSrc": "1144:17:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1144:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1158:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1154:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:3:16"
																},
																"nativeSrc": "1154:7:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:7:16"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1148:2:16",
																	"nodeType": "YulTypedName",
																	"src": "1148:2:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1170:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1170:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1190:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1190:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1184:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1184:5:16"
																},
																"nativeSrc": "1184:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1184:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1174:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1174:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1202:71:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1202:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1224:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1224:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1248:2:16",
																										"nodeType": "YulIdentifier",
																										"src": "1248:2:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1252:4:16",
																										"nodeType": "YulLiteral",
																										"src": "1252:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1244:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1244:3:16"
																								},
																								"nativeSrc": "1244:13:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1244:13:16"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1259:2:16",
																								"nodeType": "YulIdentifier",
																								"src": "1259:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1240:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1240:3:16"
																						},
																						"nativeSrc": "1240:22:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1240:22:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1264:2:16",
																						"nodeType": "YulLiteral",
																						"src": "1264:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1236:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1236:3:16"
																				},
																				"nativeSrc": "1236:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1236:31:16"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1269:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1269:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1232:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1232:3:16"
																		},
																		"nativeSrc": "1232:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1232:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1220:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:16"
																},
																"nativeSrc": "1220:53:16",
																"nodeType": "YulFunctionCall",
																"src": "1220:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1206:10:16",
																	"nodeType": "YulTypedName",
																	"src": "1206:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1332:22:16",
																"nodeType": "YulBlock",
																"src": "1332:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1334:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1334:16:16"
																			},
																			"nativeSrc": "1334:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1334:18:16"
																		},
																		"nativeSrc": "1334:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1291:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1291:10:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1303:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1303:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1288:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1288:2:16"
																		},
																		"nativeSrc": "1288:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1311:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1311:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1323:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1323:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1308:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1308:2:16"
																		},
																		"nativeSrc": "1308:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1308:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1285:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1285:2:16"
																},
																"nativeSrc": "1285:46:16",
																"nodeType": "YulFunctionCall",
																"src": "1285:46:16"
															},
															"nativeSrc": "1282:72:16",
															"nodeType": "YulIf",
															"src": "1282:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1370:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1374:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1374:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1363:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:16"
																},
																"nativeSrc": "1363:22:16",
																"nodeType": "YulFunctionCall",
																"src": "1363:22:16"
															},
															"nativeSrc": "1363:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "1363:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1401:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1401:6:16"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1409:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1409:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1394:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1394:6:16"
																},
																"nativeSrc": "1394:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1394:18:16"
															},
															"nativeSrc": "1394:18:16",
															"nodeType": "YulExpressionStatement",
															"src": "1394:18:16"
														},
														{
															"body": {
																"nativeSrc": "1458:16:16",
																"nodeType": "YulBlock",
																"src": "1458:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1470:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1470:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1460:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:16"
																			},
																			"nativeSrc": "1460:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1460:12:16"
																		},
																		"nativeSrc": "1460:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1460:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1435:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "1435:2:16"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1439:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "1439:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1431:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:16"
																				},
																				"nativeSrc": "1431:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1431:11:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1444:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1444:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1427:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:16"
																		},
																		"nativeSrc": "1427:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:20:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1449:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "1449:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1424:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1424:2:16"
																},
																"nativeSrc": "1424:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1424:33:16"
															},
															"nativeSrc": "1421:53:16",
															"nodeType": "YulIf",
															"src": "1421:53:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1522:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1522:2:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1526:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1518:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1518:3:16"
																		},
																		"nativeSrc": "1518:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1518:11:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1535:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1535:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1543:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1543:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1531:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:16"
																		},
																		"nativeSrc": "1531:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:15:16"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1548:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "1548:2:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1483:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "1483:34:16"
																},
																"nativeSrc": "1483:68:16",
																"nodeType": "YulFunctionCall",
																"src": "1483:68:16"
															},
															"nativeSrc": "1483:68:16",
															"nodeType": "YulExpressionStatement",
															"src": "1483:68:16"
														},
														{
															"nativeSrc": "1560:16:16",
															"nodeType": "YulAssignment",
															"src": "1560:16:16",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1570:6:16",
																"nodeType": "YulIdentifier",
																"src": "1570:6:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1560:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:16"
																}
															]
														},
														{
															"nativeSrc": "1585:59:16",
															"nodeType": "YulAssignment",
															"src": "1585:59:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1629:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1629:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1640:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1640:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1625:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:16"
																		},
																		"nativeSrc": "1625:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1625:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1595:29:16",
																	"nodeType": "YulIdentifier",
																	"src": "1595:29:16"
																},
																"nativeSrc": "1595:49:16",
																"nodeType": "YulFunctionCall",
																"src": "1595:49:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1585:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "583:1067:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "658:9:16",
														"nodeType": "YulTypedName",
														"src": "658:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "669:7:16",
														"nodeType": "YulTypedName",
														"src": "669:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "681:6:16",
														"nodeType": "YulTypedName",
														"src": "681:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "689:6:16",
														"nodeType": "YulTypedName",
														"src": "689:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "697:6:16",
														"nodeType": "YulTypedName",
														"src": "697:6:16",
														"type": ""
													}
												],
												"src": "583:1067:16"
											},
											{
												"body": {
													"nativeSrc": "1756:102:16",
													"nodeType": "YulBlock",
													"src": "1756:102:16",
													"statements": [
														{
															"nativeSrc": "1766:26:16",
															"nodeType": "YulAssignment",
															"src": "1766:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1778:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1778:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1774:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1774:3:16"
																},
																"nativeSrc": "1774:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1774:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1766:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1766:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1808:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1808:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1823:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1823:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1839:3:16",
																								"nodeType": "YulLiteral",
																								"src": "1839:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1844:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1844:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1835:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1835:3:16"
																						},
																						"nativeSrc": "1835:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1835:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1848:1:16",
																						"nodeType": "YulLiteral",
																						"src": "1848:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1831:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1831:3:16"
																				},
																				"nativeSrc": "1831:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1831:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1819:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1819:3:16"
																		},
																		"nativeSrc": "1819:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1801:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1801:6:16"
																},
																"nativeSrc": "1801:51:16",
																"nodeType": "YulFunctionCall",
																"src": "1801:51:16"
															},
															"nativeSrc": "1801:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "1801:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1655:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1725:9:16",
														"nodeType": "YulTypedName",
														"src": "1725:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1736:6:16",
														"nodeType": "YulTypedName",
														"src": "1736:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1747:4:16",
														"nodeType": "YulTypedName",
														"src": "1747:4:16",
														"type": ""
													}
												],
												"src": "1655:203:16"
											},
											{
												"body": {
													"nativeSrc": "1918:325:16",
													"nodeType": "YulBlock",
													"src": "1918:325:16",
													"statements": [
														{
															"nativeSrc": "1928:22:16",
															"nodeType": "YulAssignment",
															"src": "1928:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1942:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1945:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1945:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1938:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1938:3:16"
																},
																"nativeSrc": "1938:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1938:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1928:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:16"
																}
															]
														},
														{
															"nativeSrc": "1959:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1959:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1989:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1989:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1995:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1985:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:16"
																},
																"nativeSrc": "1985:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1985:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1963:18:16",
																	"nodeType": "YulTypedName",
																	"src": "1963:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2036:31:16",
																"nodeType": "YulBlock",
																"src": "2036:31:16",
																"statements": [
																	{
																		"nativeSrc": "2038:27:16",
																		"nodeType": "YulAssignment",
																		"src": "2038:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2052:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2052:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2060:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2060:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2048:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2048:3:16"
																			},
																			"nativeSrc": "2048:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2048:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2038:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2016:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2016:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2009:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:16"
																},
																"nativeSrc": "2009:26:16",
																"nodeType": "YulFunctionCall",
																"src": "2009:26:16"
															},
															"nativeSrc": "2006:61:16",
															"nodeType": "YulIf",
															"src": "2006:61:16"
														},
														{
															"body": {
																"nativeSrc": "2126:111:16",
																"nodeType": "YulBlock",
																"src": "2126:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2147:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2147:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2154:3:16",
																							"nodeType": "YulLiteral",
																							"src": "2154:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2159:10:16",
																							"nodeType": "YulLiteral",
																							"src": "2159:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2150:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2150:3:16"
																					},
																					"nativeSrc": "2150:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2150:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2140:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2140:6:16"
																			},
																			"nativeSrc": "2140:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2140:31:16"
																		},
																		"nativeSrc": "2140:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2140:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2191:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2191:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2194:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2194:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2184:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2184:6:16"
																			},
																			"nativeSrc": "2184:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2184:15:16"
																		},
																		"nativeSrc": "2184:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2184:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2219:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2219:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2222:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2222:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2212:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2212:6:16"
																			},
																			"nativeSrc": "2212:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2212:15:16"
																		},
																		"nativeSrc": "2212:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2212:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2082:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "2082:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2105:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2105:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2113:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2113:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2102:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2102:2:16"
																		},
																		"nativeSrc": "2102:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2079:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2079:2:16"
																},
																"nativeSrc": "2079:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2079:38:16"
															},
															"nativeSrc": "2076:161:16",
															"nodeType": "YulIf",
															"src": "2076:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1863:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1898:4:16",
														"nodeType": "YulTypedName",
														"src": "1898:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1907:6:16",
														"nodeType": "YulTypedName",
														"src": "1907:6:16",
														"type": ""
													}
												],
												"src": "1863:380:16"
											},
											{
												"body": {
													"nativeSrc": "2304:65:16",
													"nodeType": "YulBlock",
													"src": "2304:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2321:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2324:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2324:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2314:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:16"
																},
																"nativeSrc": "2314:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2314:14:16"
															},
															"nativeSrc": "2314:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "2314:14:16"
														},
														{
															"nativeSrc": "2337:26:16",
															"nodeType": "YulAssignment",
															"src": "2337:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2355:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2355:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2358:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2358:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2345:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2345:9:16"
																},
																"nativeSrc": "2345:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2345:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2337:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2337:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2248:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2287:3:16",
														"nodeType": "YulTypedName",
														"src": "2287:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2295:4:16",
														"nodeType": "YulTypedName",
														"src": "2295:4:16",
														"type": ""
													}
												],
												"src": "2248:121:16"
											},
											{
												"body": {
													"nativeSrc": "2455:437:16",
													"nodeType": "YulBlock",
													"src": "2455:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2488:398:16",
																"nodeType": "YulBlock",
																"src": "2488:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2509:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2509:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2512:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2512:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2502:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2502:6:16"
																			},
																			"nativeSrc": "2502:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:16:16"
																		},
																		"nativeSrc": "2502:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2502:16:16"
																	},
																	{
																		"nativeSrc": "2531:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2531:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2553:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2553:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2556:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2556:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2543:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2543:9:16"
																			},
																			"nativeSrc": "2543:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2543:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2535:4:16",
																				"nodeType": "YulTypedName",
																				"src": "2535:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2574:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2574:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2597:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "2597:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2607:1:16",
																							"nodeType": "YulLiteral",
																							"src": "2607:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2614:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "2614:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2626:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2626:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2610:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2610:3:16"
																							},
																							"nativeSrc": "2610:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2610:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2603:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2603:3:16"
																					},
																					"nativeSrc": "2603:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2603:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2593:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2593:3:16"
																			},
																			"nativeSrc": "2593:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2593:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2578:11:16",
																				"nodeType": "YulTypedName",
																				"src": "2578:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2668:23:16",
																			"nodeType": "YulBlock",
																			"src": "2668:23:16",
																			"statements": [
																				{
																					"nativeSrc": "2670:19:16",
																					"nodeType": "YulAssignment",
																					"src": "2670:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2685:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2685:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2670:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "2670:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2650:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "2650:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2662:4:16",
																					"nodeType": "YulLiteral",
																					"src": "2662:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2647:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "2647:2:16"
																			},
																			"nativeSrc": "2647:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2647:20:16"
																		},
																		"nativeSrc": "2644:47:16",
																		"nodeType": "YulIf",
																		"src": "2644:47:16"
																	},
																	{
																		"nativeSrc": "2704:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2704:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2718:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "2718:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2728:1:16",
																							"nodeType": "YulLiteral",
																							"src": "2728:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2735:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2735:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2740:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2740:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2731:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2731:3:16"
																							},
																							"nativeSrc": "2731:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2731:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2724:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2724:3:16"
																					},
																					"nativeSrc": "2724:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2724:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2714:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2714:3:16"
																			},
																			"nativeSrc": "2714:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2714:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2708:2:16",
																				"nodeType": "YulTypedName",
																				"src": "2708:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2758:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2758:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2771:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "2771:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2762:5:16",
																				"nodeType": "YulTypedName",
																				"src": "2762:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2856:20:16",
																			"nodeType": "YulBlock",
																			"src": "2856:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2865:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "2865:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2872:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2872:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2858:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "2858:6:16"
																						},
																						"nativeSrc": "2858:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2858:16:16"
																					},
																					"nativeSrc": "2858:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "2858:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2806:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2806:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2813:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "2813:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2803:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "2803:2:16"
																			},
																			"nativeSrc": "2803:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:13:16"
																		},
																		"nativeSrc": "2795:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2817:26:16",
																			"nodeType": "YulBlock",
																			"src": "2817:26:16",
																			"statements": [
																				{
																					"nativeSrc": "2819:22:16",
																					"nodeType": "YulAssignment",
																					"src": "2819:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2832:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "2832:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2839:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2839:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2828:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2828:3:16"
																						},
																						"nativeSrc": "2828:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2828:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2819:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "2819:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2799:3:16",
																			"nodeType": "YulBlock",
																			"src": "2799:3:16",
																			"statements": []
																		},
																		"src": "2795:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2471:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2471:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2476:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2476:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2468:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2468:2:16"
																},
																"nativeSrc": "2468:11:16",
																"nodeType": "YulFunctionCall",
																"src": "2468:11:16"
															},
															"nativeSrc": "2465:421:16",
															"nodeType": "YulIf",
															"src": "2465:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2374:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2427:5:16",
														"nodeType": "YulTypedName",
														"src": "2427:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2434:3:16",
														"nodeType": "YulTypedName",
														"src": "2434:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2439:10:16",
														"nodeType": "YulTypedName",
														"src": "2439:10:16",
														"type": ""
													}
												],
												"src": "2374:518:16"
											},
											{
												"body": {
													"nativeSrc": "2982:81:16",
													"nodeType": "YulBlock",
													"src": "2982:81:16",
													"statements": [
														{
															"nativeSrc": "2992:65:16",
															"nodeType": "YulAssignment",
															"src": "2992:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3007:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "3007:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3025:1:16",
																										"nodeType": "YulLiteral",
																										"src": "3025:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3028:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "3028:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3021:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3021:3:16"
																								},
																								"nativeSrc": "3021:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3021:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3038:1:16",
																										"nodeType": "YulLiteral",
																										"src": "3038:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3034:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3034:3:16"
																								},
																								"nativeSrc": "3034:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3034:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3017:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3017:3:16"
																						},
																						"nativeSrc": "3017:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3017:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3013:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:16"
																				},
																				"nativeSrc": "3013:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3013:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3003:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:16"
																		},
																		"nativeSrc": "3003:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3049:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3049:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3052:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3052:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3045:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:16"
																		},
																		"nativeSrc": "3045:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3045:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3000:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3000:2:16"
																},
																"nativeSrc": "3000:57:16",
																"nodeType": "YulFunctionCall",
																"src": "3000:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2992:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2992:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2897:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2959:4:16",
														"nodeType": "YulTypedName",
														"src": "2959:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2965:3:16",
														"nodeType": "YulTypedName",
														"src": "2965:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2973:4:16",
														"nodeType": "YulTypedName",
														"src": "2973:4:16",
														"type": ""
													}
												],
												"src": "2897:166:16"
											},
											{
												"body": {
													"nativeSrc": "3164:1249:16",
													"nodeType": "YulBlock",
													"src": "3164:1249:16",
													"statements": [
														{
															"nativeSrc": "3174:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3174:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3194:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3194:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3188:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:16"
																},
																"nativeSrc": "3188:10:16",
																"nodeType": "YulFunctionCall",
																"src": "3188:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3178:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3178:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3241:22:16",
																"nodeType": "YulBlock",
																"src": "3241:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3243:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "3243:16:16"
																			},
																			"nativeSrc": "3243:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3243:18:16"
																		},
																		"nativeSrc": "3243:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3213:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3229:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3229:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3233:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3233:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3225:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3225:3:16"
																				},
																				"nativeSrc": "3225:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3225:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3237:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3237:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3221:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:16"
																		},
																		"nativeSrc": "3221:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3210:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3210:2:16"
																},
																"nativeSrc": "3210:30:16",
																"nodeType": "YulFunctionCall",
																"src": "3210:30:16"
															},
															"nativeSrc": "3207:56:16",
															"nodeType": "YulIf",
															"src": "3207:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3316:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3316:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3354:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "3354:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3348:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "3348:5:16"
																				},
																				"nativeSrc": "3348:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3322:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "3322:25:16"
																		},
																		"nativeSrc": "3322:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3322:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3362:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3362:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3272:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3272:43:16"
																},
																"nativeSrc": "3272:97:16",
																"nodeType": "YulFunctionCall",
																"src": "3272:97:16"
															},
															"nativeSrc": "3272:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "3272:97:16"
														},
														{
															"nativeSrc": "3378:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3378:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3395:1:16",
																"nodeType": "YulLiteral",
																"src": "3395:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3382:9:16",
																	"nodeType": "YulTypedName",
																	"src": "3382:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3405:23:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3405:23:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3424:4:16",
																"nodeType": "YulLiteral",
																"src": "3424:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3409:11:16",
																	"nodeType": "YulTypedName",
																	"src": "3409:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3437:17:16",
															"nodeType": "YulAssignment",
															"src": "3437:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3450:4:16",
																"nodeType": "YulLiteral",
																"src": "3450:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3437:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "3437:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3500:656:16",
																		"nodeType": "YulBlock",
																		"src": "3500:656:16",
																		"statements": [
																			{
																				"nativeSrc": "3514:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3514:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3533:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3533:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3545:2:16",
																									"nodeType": "YulLiteral",
																									"src": "3545:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3541:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "3541:3:16"
																							},
																							"nativeSrc": "3541:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3541:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3529:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3529:3:16"
																					},
																					"nativeSrc": "3529:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3529:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3518:7:16",
																						"nodeType": "YulTypedName",
																						"src": "3518:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3562:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3562:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3606:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "3606:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3576:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "3576:29:16"
																					},
																					"nativeSrc": "3576:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3576:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3566:6:16",
																						"nodeType": "YulTypedName",
																						"src": "3566:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3624:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3624:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3633:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3633:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3628:1:16",
																						"nodeType": "YulTypedName",
																						"src": "3628:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3711:172:16",
																					"nodeType": "YulBlock",
																					"src": "3711:172:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3736:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "3736:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3754:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "3754:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3759:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "3759:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3750:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "3750:3:16"
																												},
																												"nativeSrc": "3750:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "3750:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3744:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "3744:5:16"
																										},
																										"nativeSrc": "3744:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3744:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3729:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3729:6:16"
																								},
																								"nativeSrc": "3729:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3729:42:16"
																							},
																							"nativeSrc": "3729:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "3729:42:16"
																						},
																						{
																							"nativeSrc": "3788:24:16",
																							"nodeType": "YulAssignment",
																							"src": "3788:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3802:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "3802:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3810:1:16",
																										"nodeType": "YulLiteral",
																										"src": "3810:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3798:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3798:3:16"
																								},
																								"nativeSrc": "3798:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3798:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3788:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3788:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3829:40:16",
																							"nodeType": "YulAssignment",
																							"src": "3829:40:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3846:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "3846:9:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3857:11:16",
																										"nodeType": "YulIdentifier",
																										"src": "3857:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3842:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3842:3:16"
																								},
																								"nativeSrc": "3842:27:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3842:27:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3829:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "3829:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3658:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "3658:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3661:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "3661:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3655:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3655:2:16"
																					},
																					"nativeSrc": "3655:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3655:14:16"
																				},
																				"nativeSrc": "3647:236:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3670:28:16",
																					"nodeType": "YulBlock",
																					"src": "3670:28:16",
																					"statements": [
																						{
																							"nativeSrc": "3672:24:16",
																							"nodeType": "YulAssignment",
																							"src": "3672:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3681:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "3681:1:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3684:11:16",
																										"nodeType": "YulIdentifier",
																										"src": "3684:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3677:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3677:3:16"
																								},
																								"nativeSrc": "3677:19:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3677:19:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3672:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "3672:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3651:3:16",
																					"nodeType": "YulBlock",
																					"src": "3651:3:16",
																					"statements": []
																				},
																				"src": "3647:236:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "3931:166:16",
																					"nodeType": "YulBlock",
																					"src": "3931:166:16",
																					"statements": [
																						{
																							"nativeSrc": "3949:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3949:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3976:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "3976:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3981:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "3981:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3972:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "3972:3:16"
																										},
																										"nativeSrc": "3972:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "3972:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3966:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "3966:5:16"
																								},
																								"nativeSrc": "3966:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "3966:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3953:9:16",
																									"nodeType": "YulTypedName",
																									"src": "3953:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4016:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4016:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4028:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4028:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4055:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "4055:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4058:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "4058:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4051:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "4051:3:16"
																																		},
																																		"nativeSrc": "4051:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4051:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4067:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "4067:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4047:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "4047:3:16"
																																},
																																"nativeSrc": "4047:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "4047:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4077:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "4077:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4073:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "4073:3:16"
																																},
																																"nativeSrc": "4073:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "4073:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4043:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "4043:3:16"
																														},
																														"nativeSrc": "4043:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "4043:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4039:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4039:3:16"
																												},
																												"nativeSrc": "4039:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4039:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4024:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4024:3:16"
																										},
																										"nativeSrc": "4024:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4024:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4009:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4009:6:16"
																								},
																								"nativeSrc": "4009:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4009:74:16"
																							},
																							"nativeSrc": "4009:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4009:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3902:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "3902:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3911:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3911:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3899:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "3899:2:16"
																					},
																					"nativeSrc": "3899:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3899:19:16"
																				},
																				"nativeSrc": "3896:201:16",
																				"nodeType": "YulIf",
																				"src": "3896:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4117:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4117:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4131:1:16",
																											"nodeType": "YulLiteral",
																											"src": "4131:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4134:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "4134:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4127:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "4127:3:16"
																									},
																									"nativeSrc": "4127:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "4127:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4143:1:16",
																									"nodeType": "YulLiteral",
																									"src": "4143:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4123:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4123:3:16"
																							},
																							"nativeSrc": "4123:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4123:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4110:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4110:6:16"
																					},
																					"nativeSrc": "4110:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4110:36:16"
																				},
																				"nativeSrc": "4110:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4110:36:16"
																			}
																		]
																	},
																	"nativeSrc": "3493:663:16",
																	"nodeType": "YulCase",
																	"src": "3493:663:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3498:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4173:234:16",
																		"nodeType": "YulBlock",
																		"src": "4173:234:16",
																		"statements": [
																			{
																				"nativeSrc": "4187:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4187:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4200:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4200:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4191:5:16",
																						"nodeType": "YulTypedName",
																						"src": "4191:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4236:67:16",
																					"nodeType": "YulBlock",
																					"src": "4236:67:16",
																					"statements": [
																						{
																							"nativeSrc": "4254:35:16",
																							"nodeType": "YulAssignment",
																							"src": "4254:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4273:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4273:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4278:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4278:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4269:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4269:3:16"
																										},
																										"nativeSrc": "4269:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4269:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4263:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4263:5:16"
																								},
																								"nativeSrc": "4263:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4263:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4254:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4254:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4217:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4217:6:16"
																				},
																				"nativeSrc": "4214:89:16",
																				"nodeType": "YulIf",
																				"src": "4214:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4323:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4323:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4382:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4382:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4389:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4389:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4329:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "4329:52:16"
																							},
																							"nativeSrc": "4329:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4329:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4316:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4316:6:16"
																					},
																					"nativeSrc": "4316:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4316:81:16"
																				},
																				"nativeSrc": "4316:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4316:81:16"
																			}
																		]
																	},
																	"nativeSrc": "4165:242:16",
																	"nodeType": "YulCase",
																	"src": "4165:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3473:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3473:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3481:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3481:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3470:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3470:2:16"
																},
																"nativeSrc": "3470:14:16",
																"nodeType": "YulFunctionCall",
																"src": "3470:14:16"
															},
															"nativeSrc": "3463:944:16",
															"nodeType": "YulSwitch",
															"src": "3463:944:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3068:1345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3149:4:16",
														"nodeType": "YulTypedName",
														"src": "3149:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3155:3:16",
														"nodeType": "YulTypedName",
														"src": "3155:3:16",
														"type": ""
													}
												],
												"src": "3068:1345:16"
											},
											{
												"body": {
													"nativeSrc": "4631:276:16",
													"nodeType": "YulBlock",
													"src": "4631:276:16",
													"statements": [
														{
															"nativeSrc": "4641:27:16",
															"nodeType": "YulAssignment",
															"src": "4641:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4653:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4653:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4664:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4664:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4649:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:16"
																},
																"nativeSrc": "4649:19:16",
																"nodeType": "YulFunctionCall",
																"src": "4649:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4641:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4641:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4684:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4695:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4695:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4677:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:16"
																},
																"nativeSrc": "4677:25:16",
																"nodeType": "YulFunctionCall",
																"src": "4677:25:16"
															},
															"nativeSrc": "4677:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "4677:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4722:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4722:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4733:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4733:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4718:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4718:3:16"
																		},
																		"nativeSrc": "4718:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4718:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4738:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4738:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4711:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4711:6:16"
																},
																"nativeSrc": "4711:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4711:34:16"
															},
															"nativeSrc": "4711:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4711:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4765:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4776:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4761:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:16"
																		},
																		"nativeSrc": "4761:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4781:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4781:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:16"
																},
																"nativeSrc": "4754:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4754:34:16"
															},
															"nativeSrc": "4754:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4754:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4808:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4808:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4819:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4819:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4804:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4804:3:16"
																		},
																		"nativeSrc": "4804:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4804:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4824:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4824:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4797:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4797:6:16"
																},
																"nativeSrc": "4797:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4797:34:16"
															},
															"nativeSrc": "4797:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4797:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4851:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4851:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4862:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4862:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4847:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:16"
																		},
																		"nativeSrc": "4847:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "4872:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4872:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4888:3:16",
																								"nodeType": "YulLiteral",
																								"src": "4888:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4893:1:16",
																								"nodeType": "YulLiteral",
																								"src": "4893:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4884:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "4884:3:16"
																						},
																						"nativeSrc": "4884:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4884:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4897:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4897:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4880:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4880:3:16"
																				},
																				"nativeSrc": "4880:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4880:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4868:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:16"
																		},
																		"nativeSrc": "4868:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4840:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:16"
																},
																"nativeSrc": "4840:61:16",
																"nodeType": "YulFunctionCall",
																"src": "4840:61:16"
															},
															"nativeSrc": "4840:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "4840:61:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "4418:489:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4568:9:16",
														"nodeType": "YulTypedName",
														"src": "4568:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4579:6:16",
														"nodeType": "YulTypedName",
														"src": "4579:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4587:6:16",
														"nodeType": "YulTypedName",
														"src": "4587:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4595:6:16",
														"nodeType": "YulTypedName",
														"src": "4595:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4603:6:16",
														"nodeType": "YulTypedName",
														"src": "4603:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4611:6:16",
														"nodeType": "YulTypedName",
														"src": "4611:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4622:4:16",
														"nodeType": "YulTypedName",
														"src": "4622:4:16",
														"type": ""
													}
												],
												"src": "4418:489:16"
											},
											{
												"body": {
													"nativeSrc": "5033:275:16",
													"nodeType": "YulBlock",
													"src": "5033:275:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5050:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5050:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5061:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5061:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5043:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5043:6:16"
																},
																"nativeSrc": "5043:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5043:21:16"
															},
															"nativeSrc": "5043:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5043:21:16"
														},
														{
															"nativeSrc": "5073:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5073:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5093:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5093:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5087:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5087:5:16"
																},
																"nativeSrc": "5087:13:16",
																"nodeType": "YulFunctionCall",
																"src": "5087:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5077:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5077:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5120:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5120:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5131:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5131:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5116:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:16"
																		},
																		"nativeSrc": "5116:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5136:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5136:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5109:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:16"
																},
																"nativeSrc": "5109:34:16",
																"nodeType": "YulFunctionCall",
																"src": "5109:34:16"
															},
															"nativeSrc": "5109:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "5109:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5191:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5191:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5199:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5199:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5187:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5187:3:16"
																		},
																		"nativeSrc": "5187:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5208:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5208:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5219:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5219:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5204:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5204:3:16"
																		},
																		"nativeSrc": "5204:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:18:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5224:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5152:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "5152:34:16"
																},
																"nativeSrc": "5152:79:16",
																"nodeType": "YulFunctionCall",
																"src": "5152:79:16"
															},
															"nativeSrc": "5152:79:16",
															"nodeType": "YulExpressionStatement",
															"src": "5152:79:16"
														},
														{
															"nativeSrc": "5240:62:16",
															"nodeType": "YulAssignment",
															"src": "5240:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5256:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5275:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "5275:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5283:2:16",
																								"nodeType": "YulLiteral",
																								"src": "5283:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5271:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5271:3:16"
																						},
																						"nativeSrc": "5271:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5271:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5292:2:16",
																								"nodeType": "YulLiteral",
																								"src": "5292:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5288:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5288:3:16"
																						},
																						"nativeSrc": "5288:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5288:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5267:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5267:3:16"
																				},
																				"nativeSrc": "5267:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5267:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5252:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:16"
																		},
																		"nativeSrc": "5252:45:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5252:45:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5299:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5248:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:16"
																},
																"nativeSrc": "5248:54:16",
																"nodeType": "YulFunctionCall",
																"src": "5248:54:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5240:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5240:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4912:396:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5002:9:16",
														"nodeType": "YulTypedName",
														"src": "5002:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5013:6:16",
														"nodeType": "YulTypedName",
														"src": "5013:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5024:4:16",
														"nodeType": "YulTypedName",
														"src": "5024:4:16",
														"type": ""
													}
												],
												"src": "4912:396:16"
											},
											{
												"body": {
													"nativeSrc": "5407:203:16",
													"nodeType": "YulBlock",
													"src": "5407:203:16",
													"statements": [
														{
															"nativeSrc": "5417:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5417:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5437:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5437:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5431:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5431:5:16"
																},
																"nativeSrc": "5431:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5431:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5421:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5421:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5452:32:16",
															"nodeType": "YulAssignment",
															"src": "5452:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "5471:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5471:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5478:4:16",
																				"nodeType": "YulLiteral",
																				"src": "5478:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5467:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5467:3:16"
																		},
																		"nativeSrc": "5467:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5467:16:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5461:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5461:5:16"
																},
																"nativeSrc": "5461:23:16",
																"nodeType": "YulFunctionCall",
																"src": "5461:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5452:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5452:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5521:83:16",
																"nodeType": "YulBlock",
																"src": "5521:83:16",
																"statements": [
																	{
																		"nativeSrc": "5535:59:16",
																		"nodeType": "YulAssignment",
																		"src": "5535:59:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "5548:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5548:5:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5563:1:16",
																									"nodeType": "YulLiteral",
																									"src": "5563:1:16",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5570:4:16",
																											"nodeType": "YulLiteral",
																											"src": "5570:4:16",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "5576:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "5576:6:16"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "5566:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "5566:3:16"
																									},
																									"nativeSrc": "5566:17:16",
																									"nodeType": "YulFunctionCall",
																									"src": "5566:17:16"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "5559:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "5559:3:16"
																							},
																							"nativeSrc": "5559:25:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5559:25:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5590:1:16",
																									"nodeType": "YulLiteral",
																									"src": "5590:1:16",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5586:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "5586:3:16"
																							},
																							"nativeSrc": "5586:6:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5586:6:16"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5555:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5555:3:16"
																					},
																					"nativeSrc": "5555:38:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5555:38:16"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5544:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5544:3:16"
																			},
																			"nativeSrc": "5544:50:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5544:50:16"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "5535:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5535:5:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5499:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5499:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5507:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5507:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5496:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5496:2:16"
																},
																"nativeSrc": "5496:16:16",
																"nodeType": "YulFunctionCall",
																"src": "5496:16:16"
															},
															"nativeSrc": "5493:111:16",
															"nodeType": "YulIf",
															"src": "5493:111:16"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "5313:297:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5387:5:16",
														"nodeType": "YulTypedName",
														"src": "5387:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5397:5:16",
														"nodeType": "YulTypedName",
														"src": "5397:5:16",
														"type": ""
													}
												],
												"src": "5313:297:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b5060405162001cf738038062001cf78339810160408190526200003491620002b9565b6040805180820190915260018152603160f81b60208201528290846001600160a01b0381166200007e57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b62000089816200019c565b5062000097826001620001eb565b61012052620000a8816002620001eb565b61014052815160208084019190912060e052815190820120610100524660a0526200013560e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052600c6200014c83826200041d565b50600a600555611388600655600380546001600160a01b039283166001600160a01b03199182168117909255600480548216909217909155600d8054949092169316929092179091555062000541565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6020835110156200020a57620002028362000223565b90506200021d565b816200021784826200041d565b5060ff90505b92915050565b5f80829050601f8151111562000250578260405163305a27a960e01b8152600401620000759190620004e9565b80516200025d826200051d565b179392505050565b80516001600160a01b03811681146200027c575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5b83811015620002b157818101518382015260200162000297565b50505f910152565b5f805f60608486031215620002cc575f80fd5b620002d78462000265565b60208501519093506001600160401b0380821115620002f4575f80fd5b818601915086601f83011262000308575f80fd5b8151818111156200031d576200031d62000281565b604051601f8201601f19908116603f0116810190838211818310171562000348576200034862000281565b8160405282815289602084870101111562000361575f80fd5b6200037483602083016020880162000295565b80965050505050506200038a6040850162000265565b90509250925092565b600181811c90821680620003a857607f821691505b602082108103620003c757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200041857805f5260205f20601f840160051c81016020851015620003f45750805b601f840160051c820191505b8181101562000415575f815560010162000400565b50505b505050565b81516001600160401b0381111562000439576200043962000281565b62000451816200044a845462000393565b84620003cd565b602080601f83116001811462000487575f84156200046f5750858301515b5f19600386901b1c1916600185901b178555620004e1565b5f85815260208120601f198616915b82811015620004b75788860151825594840194600190910190840162000496565b5085821015620004d557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b602081525f82518060208401526200050981604085016020870162000295565b601f01601f19169190910160400192915050565b80516020808301519190811015620003c7575f1960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611764620005935f395f610c2301525f610bf601525f610b5001525f610b2801525f610a8301525f610aad01525f610ad701526117645ff3fe608060405234801561000f575f80fd5b5060043610610187575f3560e01c80638bc7e8c4116100d9578063cbeacb8011610093578063f2fde38b1161006e578063f2fde38b1461031c578063f851a4401461032f578063f9c3a1e814610342578063fd91871614610355575f80fd5b8063cbeacb80146102ed578063e1fefd4214610300578063e63ea40814610309575f80fd5b80638bc7e8c41461027e5780638da5cb5b146102875780639683cdc4146102ab578063ac1e5025146102be578063c08e7286146102d1578063c4a9e858146102e4575f80fd5b80633644e51511610144578063704b6c021161011f578063704b6c0214610235578063715018a61461024857806376ee947f1461025057806384b0196e14610263575f80fd5b80633644e5151461021157806367a52793146102195780636b4c078914610222575f80fd5b806306e0e5821461018b5780630ace9ca0146101a75780630d461e61146101bc578063252de51b146101cf5780632c4e722e146101f357806334fcf437146101fc575b5f80fd5b61019460095481565b6040519081526020015b60405180910390f35b6101af61035e565b60405161019e919061132c565b6101946101ca36600461133e565b6103ea565b600d546101e390600160a01b900460ff1681565b604051901515815260200161019e565b61019460065481565b61020f61020a36600461133e565b6104a7565b005b6101946104b4565b61019460055481565b61020f610230366004611362565b6104c2565b61020f610243366004611398565b6104e8565b61020f610512565b61020f61025e36600461133e565b610525565b61026b610532565b60405161019e97969594939291906113b1565b61019460075481565b5f546001600160a01b03165b6040516001600160a01b03909116815260200161019e565b61020f6102b9366004611398565b610574565b61020f6102cc36600461133e565b6106ef565b61020f6102df36600461133e565b6106fc565b610194600b5481565b61020f6102fb366004611398565b61071c565b61019460085481565b61020f610317366004611448565b610750565b61020f61032a366004611398565b61085b565b600d54610293906001600160a01b031681565b61020f61035036600461148f565b610898565b610194600a5481565b600c805461036b906114e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610397906114e5565b80156103e25780601f106103b9576101008083540402835291602001916103e2565b820191905f5260205f20905b8154815290600101906020018083116103c557829003601f168201915b505050505081565b5f80600654670de0b6b3a76400006104029190611531565b60035f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610452573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104769190611548565b61048190600a611643565b61048c856001611531565b6104969190611531565b6104a09190611651565b9392505050565b6104af610a4b565b600655565b5f6104bd610a77565b905090565b6104ca610a4b565b600d8054911515600160a01b0260ff60a01b19909216919091179055565b6104f0610a4b565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b61051a610a4b565b6105235f610ba0565b565b61052d610a4b565b600555565b5f6060805f805f6060610543610bef565b61054b610c1c565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b61057c610a4b565b6001600160a01b0381166105ab5760405162461bcd60e51b81526004016105a290611670565b60405180910390fd5b6003546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105f1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061591906116a7565b90505f600954600b54600a548461062c91906116be565b61063691906116be565b61064091906116d1565b90508060095f82825461065391906116be565b90915550506005545f9060649061066a9084611531565b6106749190611651565b90505f81116106bc5760405162461bcd60e51b81526020600482015260146024820152731b9bc81b995dc819195c1bdcda5d08185919195960621b60448201526064016105a2565b80600b5f8282546106cd91906116be565b90915550506004546106e9906001600160a01b03168583610c49565b50505050565b6106f7610a4b565b600755565b610704610a4b565b61071681670de0b6b3a7640000611531565b60085550565b610724610a4b565b600380546001600160a01b039092166001600160a01b0319928316811790915560048054909216179055565b610758610a4b565b6001600160a01b03831661077e5760405162461bcd60e51b81526004016105a290611670565b6001600160a01b0382166107a45760405162461bcd60e51b81526004016105a290611670565b5f81116107eb5760405162461bcd60e51b815260206004820152601560248201527418d85b9d081cd95b99081e995c9bc8185b5bdd5b9d605a1b60448201526064016105a2565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af1158015610837573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e991906116e4565b610863610a4b565b6001600160a01b03811661088c57604051631e4fbdf760e01b81525f60048201526024016105a2565b61089581610ba0565b50565b6001600160a01b0386166108be5760405162461bcd60e51b81526004016105a290611670565b6108cc868686868686610ca0565b600d54600160a01b900460ff16156109195760405162461bcd60e51b815260206004820152601060248201526f18dbdb9d1c9858dd08199c99595e995960821b60448201526064016105a2565b6008548510156109765760405162461bcd60e51b815260206004820152602260248201527f706f696e747320746f2073776170206c657373207468616e206d696e706f696e604482015261747360f01b60648201526084016105a2565b5f610980866103ea565b905080600a5f82825461099391906116be565b90915550506007545f906064906109aa9084611531565b6109b49190611651565b90505f6109c182846116d1565b6004549091506109db906001600160a01b03168a83610c49565b6004546109f2906001600160a01b03163384610c49565b604080518981526020810183905290810183905242906001600160a01b038b16907f9a5f60e59cc27a7c25a7f78275c910454cd9adacb21cecff527c98ed63e028779060600160405180910390a3505050505050505050565b5f546001600160a01b031633146105235760405163118cdaa760e01b81523360048201526024016105a2565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610acf57507f000000000000000000000000000000000000000000000000000000000000000046145b15610af957507f000000000000000000000000000000000000000000000000000000000000000090565b6104bd604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606104bd7f00000000000000000000000000000000000000000000000000000000000000006001610e68565b60606104bd7f00000000000000000000000000000000000000000000000000000000000000006002610e68565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c9b908490610f13565b505050565b60ff8084165f908152600e6020526040902054161580610cce57505f828152600f602052604090205460ff16155b80610ce757505f8181526010602052604090205460ff16155b610d1e5760405162461bcd60e51b81526020600482015260086024820152671cda59c81d5cd95960c21b60448201526064016105a2565b83421115610d425760405163313c898160e11b8152600481018590526024016105a2565b600d54604080517f05619a74ecd0240afc3bfb1df2bd1319401220fb577809c3a09bf0ab809ac86160208201526001600160a01b039283169181019190915290871660608201526080810186905260a081018590525f9060c0016040516020818303038152906040528051906020012090505f610dbe82610f74565b90505f610dcd82878787610fa0565b600d549091506001600160a01b03808316911614610e1557600d546040516325c0072360e11b81526001600160a01b03808416600483015290911660248201526044016105a2565b50505060ff9092165f908152600e60209081526040808320805460ff199081166001908117909255948452600f835281842080548616821790559483526010909152902080549091169091179055505050565b606060ff8314610e8257610e7b83610fcc565b9050610f0d565b818054610e8e906114e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610eba906114e5565b8015610f055780601f10610edc57610100808354040283529160200191610f05565b820191905f5260205f20905b815481529060010190602001808311610ee857829003601f168201915b505050505090505b92915050565b5f610f276001600160a01b03841683611009565b905080515f14158015610f4b575080806020019051810190610f4991906116e4565b155b15610c9b57604051635274afe760e01b81526001600160a01b03841660048201526024016105a2565b5f610f0d610f80610a77565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f80610fb088888888611016565b925092509250610fc082826110de565b50909695505050505050565b60605f610fd88361119a565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b60606104a083835f6111c1565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561104f57505f915060039050826110d4565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156110a0573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166110cb57505f9250600191508290506110d4565b92505f91508190505b9450945094915050565b5f8260038111156110f1576110f16116ff565b036110fa575050565b600182600381111561110e5761110e6116ff565b0361112c5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611140576111406116ff565b036111615760405163fce698f760e01b8152600481018290526024016105a2565b6003826003811115611175576111756116ff565b03611196576040516335e2f38360e21b8152600481018290526024016105a2565b5050565b5f60ff8216601f811115610f0d57604051632cd44ac360e21b815260040160405180910390fd5b6060814710156111e65760405163cd78605960e01b81523060048201526024016105a2565b5f80856001600160a01b031684866040516112019190611713565b5f6040518083038185875af1925050503d805f811461123b576040519150601f19603f3d011682016040523d82523d5f602084013e611240565b606091505b509150915061125086838361125a565b9695505050505050565b60608261126f5761126a826112b6565b6104a0565b815115801561128657506001600160a01b0384163b155b156112af57604051639996b31560e01b81526001600160a01b03851660048201526024016105a2565b50806104a0565b8051156112c65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f5b838110156112f95781810151838201526020016112e1565b50505f910152565b5f81518084526113188160208601602086016112df565b601f01601f19169290920160200192915050565b602081525f6104a06020830184611301565b5f6020828403121561134e575f80fd5b5035919050565b8015158114610895575f80fd5b5f60208284031215611372575f80fd5b81356104a081611355565b80356001600160a01b0381168114611393575f80fd5b919050565b5f602082840312156113a8575f80fd5b6104a08261137d565b60ff60f81b881681525f602060e060208401526113d160e084018a611301565b83810360408501526113e3818a611301565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b818110156114365783518352928401929184019160010161141a565b50909c9b505050505050505050505050565b5f805f6060848603121561145a575f80fd5b6114638461137d565b92506114716020850161137d565b9150604084013590509250925092565b60ff81168114610895575f80fd5b5f805f805f8060c087890312156114a4575f80fd5b6114ad8761137d565b9550602087013594506040870135935060608701356114cb81611481565b9598949750929560808101359460a0909101359350915050565b600181811c908216806114f957607f821691505b60208210810361151757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610f0d57610f0d61151d565b5f60208284031215611558575f80fd5b81516104a081611481565b600181815b8085111561159d57815f19048211156115835761158361151d565b8085161561159057918102915b93841c9390800290611568565b509250929050565b5f826115b357506001610f0d565b816115bf57505f610f0d565b81600181146115d557600281146115df576115fb565b6001915050610f0d565b60ff8411156115f0576115f061151d565b50506001821b610f0d565b5060208310610133831016604e8410600b841016171561161e575081810a610f0d565b6116288383611563565b805f190482111561163b5761163b61151d565b029392505050565b5f6104a060ff8416836115a5565b5f8261166b57634e487b7160e01b5f52601260045260245ffd5b500490565b6020808252601f908201527f796f75206172652073656e64696e6720746f207a65726f206164647265737300604082015260600190565b5f602082840312156116b7575f80fd5b5051919050565b80820180821115610f0d57610f0d61151d565b81810381811115610f0d57610f0d61151d565b5f602082840312156116f4575f80fd5b81516104a081611355565b634e487b7160e01b5f52602160045260245ffd5b5f82516117248184602087016112df565b919091019291505056fea2646970667358221220200b4ce79d87c1aec0797c58112fa52c8f87218bedf4b4598d52c0cc4b05dcdd64736f6c63430008160033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CF7 CODESIZE SUB DUP1 PUSH3 0x1CF7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x7E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x89 DUP2 PUSH3 0x19C JUMP JUMPDEST POP PUSH3 0x97 DUP3 PUSH1 0x1 PUSH3 0x1EB JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xA8 DUP2 PUSH1 0x2 PUSH3 0x1EB JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x135 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE PUSH1 0xC PUSH3 0x14C DUP4 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x5 SSTORE PUSH2 0x1388 PUSH1 0x6 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP5 SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x541 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x20A JUMPI PUSH3 0x202 DUP4 PUSH3 0x223 JUMP JUMPDEST SWAP1 POP PUSH3 0x21D JUMP JUMPDEST DUP2 PUSH3 0x217 DUP5 DUP3 PUSH3 0x41D JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x250 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x75 SWAP2 SWAP1 PUSH3 0x4E9 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x25D DUP3 PUSH3 0x51D JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x297 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x2D7 DUP5 PUSH3 0x265 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x31D JUMPI PUSH3 0x31D PUSH3 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x348 JUMPI PUSH3 0x348 PUSH3 0x281 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x374 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x295 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP PUSH3 0x38A PUSH1 0x40 DUP6 ADD PUSH3 0x265 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x418 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3F4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x415 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x400 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x439 JUMPI PUSH3 0x439 PUSH3 0x281 JUMP JUMPDEST PUSH3 0x451 DUP2 PUSH3 0x44A DUP5 SLOAD PUSH3 0x393 JUMP JUMPDEST DUP5 PUSH3 0x3CD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x487 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x46F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4E1 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4B7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x496 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4D5 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x509 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x3C7 JUMPI PUSH0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1764 PUSH3 0x593 PUSH0 CODECOPY PUSH0 PUSH2 0xC23 ADD MSTORE PUSH0 PUSH2 0xBF6 ADD MSTORE PUSH0 PUSH2 0xB50 ADD MSTORE PUSH0 PUSH2 0xB28 ADD MSTORE PUSH0 PUSH2 0xA83 ADD MSTORE PUSH0 PUSH2 0xAAD ADD MSTORE PUSH0 PUSH2 0xAD7 ADD MSTORE PUSH2 0x1764 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x187 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BC7E8C4 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xCBEACB80 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xF9C3A1E8 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xFD918716 EQ PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBEACB80 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xE1FEFD42 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE63EA408 EQ PUSH2 0x309 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x9683CDC4 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xC08E7286 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC4A9E858 EQ PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x704B6C02 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x76EE947F EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x67A52793 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x6B4C0789 EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E0E582 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xACE9CA0 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xD461E61 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x252DE51B EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x1FC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x194 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x132C JUMP JUMPDEST PUSH2 0x194 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x194 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x194 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x512 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x194 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x194 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH2 0x194 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x293 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x194 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x452 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x481 SWAP1 PUSH1 0xA PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x48C DUP6 PUSH1 0x1 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x4BD PUSH2 0xA77 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4CA PUSH2 0xA4B JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x51A PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x523 PUSH0 PUSH2 0xBA0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x52D PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x543 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x54B PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD DUP5 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x66A SWAP1 DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B9BC81B995DC819195C1BDCDA5D081859191959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH2 0x6E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 PUSH2 0xC49 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x704 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH2 0x724 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x758 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x18D85B9D081CD95B99081E995C9BC8185B5BDD5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x863 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0xBA0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x8CC DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x18DBDB9D1C9858DD08199C99595E9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP6 LT ISZERO PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F696E747320746F2073776170206C657373207468616E206D696E706F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 PUSH2 0x980 DUP7 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x9AA SWAP1 DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 DUP3 DUP5 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x9DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH32 0x9A5F60E59CC27A7C25A7F78275C910454CD9ADACB21CECFF527C98ED63E02877 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xACF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAF9 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4BD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BD PUSH32 0x0 PUSH1 0x1 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BD PUSH32 0x0 PUSH1 0x2 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC9B SWAP1 DUP5 SWAP1 PUSH2 0xF13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0xCCE JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0xCE7 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x1CDA59C81D5CD959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x5619A74ECD0240AFC3BFB1DF2BD1319401220FB577809C3A09BF0AB809AC861 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0xDBE DUP3 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDCD DUP3 DUP8 DUP8 DUP8 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0xE15 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5A2 JUMP JUMPDEST POP POP POP PUSH1 0xFF SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP5 DUP5 MSTORE PUSH1 0xF DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE SWAP5 DUP4 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xE82 JUMPI PUSH2 0xE7B DUP4 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP PUSH2 0xF0D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xE8E SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEBA SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF05 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF05 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF27 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 PUSH2 0xF0D PUSH2 0xF80 PUSH2 0xA77 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xFB0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1016 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFC0 DUP3 DUP3 PUSH2 0x10DE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xFD8 DUP4 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4A0 DUP4 DUP4 PUSH0 PUSH2 0x11C1 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x104F JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10CB JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10F1 JUMPI PUSH2 0x10F1 PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x10FA JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x110E JUMPI PUSH2 0x110E PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1140 JUMPI PUSH2 0x1140 PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1175 PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1201 SWAP2 SWAP1 PUSH2 0x1713 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x123B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1250 DUP7 DUP4 DUP4 PUSH2 0x125A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x126F JUMPI PUSH2 0x126A DUP3 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST POP DUP1 PUSH2 0x4A0 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x12C6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12E1 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1318 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x4A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1301 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x895 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1372 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4A0 DUP2 PUSH2 0x1355 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1393 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A0 DUP3 PUSH2 0x137D JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x13D1 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1301 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x13E3 DUP2 DUP11 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1436 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x141A JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x145A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1463 DUP5 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP PUSH2 0x1471 PUSH1 0x20 DUP6 ADD PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x895 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14AD DUP8 PUSH2 0x137D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x14CB DUP2 PUSH2 0x1481 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1517 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF0D JUMPI PUSH2 0xF0D PUSH2 0x151D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1558 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4A0 DUP2 PUSH2 0x1481 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x159D JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x151D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1590 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1568 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15B3 JUMPI POP PUSH1 0x1 PUSH2 0xF0D JUMP JUMPDEST DUP2 PUSH2 0x15BF JUMPI POP PUSH0 PUSH2 0xF0D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15D5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15DF JUMPI PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF0D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15F0 JUMPI PUSH2 0x15F0 PUSH2 0x151D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xF0D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x161E JUMPI POP DUP2 DUP2 EXP PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1628 DUP4 DUP4 PUSH2 0x1563 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x163B JUMPI PUSH2 0x163B PUSH2 0x151D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A0 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x15A5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x166B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x796F75206172652073656E64696E6720746F207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF0D JUMPI PUSH2 0xF0D PUSH2 0x151D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF0D JUMPI PUSH2 0xF0D PUSH2 0x151D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4A0 DUP2 PUSH2 0x1355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1724 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SIGNEXTEND 0x4C 0xE7 SWAP14 DUP8 0xC1 0xAE 0xC0 PUSH26 0x7C58112FA52C8F87218BEDF4B4598D52C0CC4B05DCDD64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "650:7898:15:-:0;;;2408:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:11;;;;;;;;;;;;-1:-1:-1;;;3328:431:11;;;;2497:4:15;;2484:5;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1801:51:16;1774:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:11;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4677:25:16;4718:18;;;4711:34;;;;4761:18;;;4754:34;4255:13:11;4804:18:16;;;4797:34;4278:4:11;4847:19:16;;;4840:61;4168:7:11;;4649:19:16;;4204:80:11;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:11;3725:27;;2518:9:15::2;:14;2528:4:::0;2518:9;:14:::2;:::i;:::-;-1:-1:-1::0;2555:2:15::2;2543:10;:14:::0;2575:4:::2;2568;:11:::0;2590:13:::2;:39:::0;;-1:-1:-1;;;;;2590:39:15;;::::2;-1:-1:-1::0;;;;;;2590:39:15;;::::2;::::0;::::2;::::0;;;2640:14:::2;:39:::0;;;::::2;::::0;;::::2;::::0;;;2690:5:::2;:13:::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;-1:-1:-1;650:7898:15;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2914:340:7:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;:20::i;:::-;3077:27;;;;3033:215;3161:5;3135:46;3176:5;3161;3135:46;:::i;:::-;-1:-1:-1;1390:66:7;;-1:-1:-1;3033:215:7;2914:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:7;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:7:o;14:177:16:-;93:13;;-1:-1:-1;;;;;135:31:16;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:16;552:16;;545:27;328:250::o;583:1067::-;681:6;689;697;750:2;738:9;729:7;725:23;721:32;718:52;;;766:1;763;756:12;718:52;789:40;819:9;789:40;:::i;:::-;873:2;858:18;;852:25;779:50;;-1:-1:-1;;;;;;926:14:16;;;923:34;;;953:1;950;943:12;923:34;991:6;980:9;976:22;966:32;;1036:7;1029:4;1025:2;1021:13;1017:27;1007:55;;1058:1;1055;1048:12;1007:55;1087:2;1081:9;1109:2;1105;1102:10;1099:36;;;1115:18;;:::i;:::-;1190:2;1184:9;1158:2;1244:13;;-1:-1:-1;;1240:22:16;;;1264:2;1236:31;1232:40;1220:53;;;1288:18;;;1308:22;;;1285:46;1282:72;;;1334:18;;:::i;:::-;1374:10;1370:2;1363:22;1409:2;1401:6;1394:18;1449:7;1444:2;1439;1435;1431:11;1427:20;1424:33;1421:53;;;1470:1;1467;1460:12;1421:53;1483:68;1548:2;1543;1535:6;1531:15;1526:2;1522;1518:11;1483:68;:::i;:::-;1570:6;1560:16;;;;;;;1595:49;1640:2;1629:9;1625:18;1595:49;:::i;:::-;1585:59;;583:1067;;;;;:::o;1863:380::-;1942:1;1938:12;;;;1985;;;2006:61;;2060:4;2052:6;2048:17;2038:27;;2006:61;2113:2;2105:6;2102:14;2082:18;2079:38;2076:161;;2159:10;2154:3;2150:20;2147:1;2140:31;2194:4;2191:1;2184:15;2222:4;2219:1;2212:15;2076:161;;1863:380;;;:::o;2374:518::-;2476:2;2471:3;2468:11;2465:421;;;2512:5;2509:1;2502:16;2556:4;2553:1;2543:18;2626:2;2614:10;2610:19;2607:1;2603:27;2597:4;2593:38;2662:4;2650:10;2647:20;2644:47;;;-1:-1:-1;2685:4:16;2644:47;2740:2;2735:3;2731:12;2728:1;2724:20;2718:4;2714:31;2704:41;;2795:81;2813:2;2806:5;2803:13;2795:81;;;2872:1;2858:16;;2839:1;2828:13;2795:81;;;2799:3;;2465:421;2374:518;;;:::o;3068:1345::-;3188:10;;-1:-1:-1;;;;;3210:30:16;;3207:56;;;3243:18;;:::i;:::-;3272:97;3362:6;3322:38;3354:4;3348:11;3322:38;:::i;:::-;3316:4;3272:97;:::i;:::-;3424:4;;3481:2;3470:14;;3498:1;3493:663;;;;4200:1;4217:6;4214:89;;;-1:-1:-1;4269:19:16;;;4263:26;4214:89;-1:-1:-1;;3025:1:16;3021:11;;;3017:24;3013:29;3003:40;3049:1;3045:11;;;3000:57;4316:81;;3463:944;;3493:663;2321:1;2314:14;;;2358:4;2345:18;;-1:-1:-1;;3529:20:16;;;3647:236;3661:7;3658:1;3655:14;3647:236;;;3750:19;;;3744:26;3729:42;;3842:27;;;;3810:1;3798:14;;;;3677:19;;3647:236;;;3651:3;3911:6;3902:7;3899:19;3896:201;;;3972:19;;;3966:26;-1:-1:-1;;4055:1:16;4051:14;;;4067:3;4047:24;4043:37;4039:42;4024:58;4009:74;;3896:201;;;4143:1;4134:6;4131:1;4127:14;4123:22;4117:4;4110:36;3463:944;;;;;3068:1345;;:::o;4912:396::-;5061:2;5050:9;5043:21;5024:4;5093:6;5087:13;5136:6;5131:2;5120:9;5116:18;5109:34;5152:79;5224:6;5219:2;5208:9;5204:18;5199:2;5191:6;5187:15;5152:79;:::i;:::-;5292:2;5271:15;-1:-1:-1;;5267:29:16;5252:45;;;;5299:2;5248:54;;4912:396;-1:-1:-1;;4912:396:16:o;5313:297::-;5431:12;;5478:4;5467:16;;;5461:23;;5431:12;5496:16;;5493:111;;;-1:-1:-1;;5570:4:16;5566:17;;;;5563:1;5559:25;5555:38;5544:50;;5313:297;-1:-1:-1;5313:297:16:o;:::-;650:7898:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3452": {
									"entryPoint": 1204,
									"id": 3452,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@TotalfeescollectedPaymentCoin_3318": {
									"entryPoint": null,
									"id": 3318,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_EIP712Name_2003": {
									"entryPoint": 3055,
									"id": 2003,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2015": {
									"entryPoint": 3100,
									"id": 2015,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_buildDomainSeparator_1933": {
									"entryPoint": null,
									"id": 1933,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_callOptionalReturn_526": {
									"entryPoint": 3859,
									"id": 526,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2635,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_1912": {
									"entryPoint": 2679,
									"id": 1912,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_1949": {
									"entryPoint": 3956,
									"id": 1949,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_841": {
									"entryPoint": null,
									"id": 841,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_permit_3878": {
									"entryPoint": 3232,
									"id": 3878,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_revert_828": {
									"entryPoint": 4790,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_throwError_1788": {
									"entryPoint": 4318,
									"id": 1788,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2976,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@admin_3322": {
									"entryPoint": null,
									"id": 3322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@byteLength_977": {
									"entryPoint": 4506,
									"id": 977,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkAmountToRecive_3443": {
									"entryPoint": 1002,
									"id": 3443,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimedPaymentCoin_3316": {
									"entryPoint": null,
									"id": 3316,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositFee_3306": {
									"entryPoint": null,
									"id": 3306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@eip712Domain_1991": {
									"entryPoint": 1330,
									"id": 1991,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@emergencyWithdraw_3773": {
									"entryPoint": 1872,
									"id": 3773,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@freezeContract_3555": {
									"entryPoint": 1218,
									"id": 3555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@freezePermit_3324": {
									"entryPoint": null,
									"id": 3324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_696": {
									"entryPoint": 4545,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_650": {
									"entryPoint": 4105,
									"id": 650,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initContractBalancePaymentCoin_3314": {
									"entryPoint": null,
									"id": 3314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permitSwapToPaymentCoin_3725": {
									"entryPoint": 2200,
									"id": 3725,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@pointsMin_3312": {
									"entryPoint": null,
									"id": 3312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rate_3308": {
									"entryPoint": null,
									"id": 3308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recover_1739": {
									"entryPoint": 4000,
									"id": 1739,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1298,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_336": {
									"entryPoint": 3145,
									"id": 336,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAdmin_3465": {
									"entryPoint": 1256,
									"id": 3465,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinPointsToSWap_3542": {
									"entryPoint": 1788,
									"id": 3542,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPaymentDepositfees_3499": {
									"entryPoint": 1317,
									"id": 3499,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRate_3525": {
									"entryPoint": 1191,
									"id": 3525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWithdrawalFee_3512": {
									"entryPoint": 1775,
									"id": 3512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setpaymentTokenAndpoints_3486": {
									"entryPoint": 1820,
									"id": 3486,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toStringWithFallback_1044": {
									"entryPoint": 3688,
									"id": 1044,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_945": {
									"entryPoint": 4044,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2089": {
									"entryPoint": null,
									"id": 2089,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2139,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryRecover_1703": {
									"entryPoint": 4118,
									"id": 1703,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@vaultName_3320": {
									"entryPoint": 862,
									"id": 3320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_788": {
									"entryPoint": 4698,
									"id": 788,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawalFee_3310": {
									"entryPoint": null,
									"id": 3310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawfees_3626": {
									"entryPoint": 1396,
									"id": 3626,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d76893c2f0238fd9c77950c3a3abca4482a5081e88db2e94ed7f1a183b26a26__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c76f5dbf815a0d4a0a69b2459d6d3337e979ed437973377d86ebb8708773a32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b0277e6454e2ac2e31447966d5418245e63192c6d388fa86142f5bb21c10bb6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b379c917a4dc8c3898738d13abfa21e18194ad28cbafadbd6c44246f20237637__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_caec8756a40efc76a36098b7e1250a0625590caab7950a2b4ad5e46b24f6665d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint8": {
									"entryPoint": 5249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13042:16",
										"nodeType": "YulBlock",
										"src": "0:13042:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:16",
													"nodeType": "YulBlock",
													"src": "115:76:16",
													"statements": [
														{
															"nativeSrc": "125:26:16",
															"nodeType": "YulAssignment",
															"src": "125:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:16",
																		"nodeType": "YulLiteral",
																		"src": "148:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:16"
																},
																"nativeSrc": "133:18:16",
																"nodeType": "YulFunctionCall",
																"src": "133:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:16"
																},
																"nativeSrc": "160:25:16",
																"nodeType": "YulFunctionCall",
																"src": "160:25:16"
															},
															"nativeSrc": "160:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:16",
														"nodeType": "YulTypedName",
														"src": "84:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:16",
														"nodeType": "YulTypedName",
														"src": "95:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:16",
														"nodeType": "YulTypedName",
														"src": "106:4:16",
														"type": ""
													}
												],
												"src": "14:177:16"
											},
											{
												"body": {
													"nativeSrc": "262:184:16",
													"nodeType": "YulBlock",
													"src": "262:184:16",
													"statements": [
														{
															"nativeSrc": "272:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "272:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "281:1:16",
																"nodeType": "YulLiteral",
																"src": "281:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "276:1:16",
																	"nodeType": "YulTypedName",
																	"src": "276:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "341:63:16",
																"nodeType": "YulBlock",
																"src": "341:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "366:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "366:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "371:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "371:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "362:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "362:3:16"
																					},
																					"nativeSrc": "362:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "362:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "385:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "385:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "390:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "390:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "381:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "381:3:16"
																							},
																							"nativeSrc": "381:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "381:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "375:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "375:5:16"
																					},
																					"nativeSrc": "375:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "375:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "355:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:16"
																			},
																			"nativeSrc": "355:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "355:39:16"
																		},
																		"nativeSrc": "355:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "302:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "302:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "305:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "305:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "299:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "299:2:16"
																},
																"nativeSrc": "299:13:16",
																"nodeType": "YulFunctionCall",
																"src": "299:13:16"
															},
															"nativeSrc": "291:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "313:19:16",
																"nodeType": "YulBlock",
																"src": "313:19:16",
																"statements": [
																	{
																		"nativeSrc": "315:15:16",
																		"nodeType": "YulAssignment",
																		"src": "315:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "324:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "324:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "327:2:16",
																					"nodeType": "YulLiteral",
																					"src": "327:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "320:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "320:3:16"
																			},
																			"nativeSrc": "320:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "320:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "315:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "315:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "295:3:16",
																"nodeType": "YulBlock",
																"src": "295:3:16",
																"statements": []
															},
															"src": "291:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "424:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "424:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "429:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "420:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "420:3:16"
																		},
																		"nativeSrc": "420:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "420:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "438:1:16",
																		"nodeType": "YulLiteral",
																		"src": "438:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "413:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "413:6:16"
																},
																"nativeSrc": "413:27:16",
																"nodeType": "YulFunctionCall",
																"src": "413:27:16"
															},
															"nativeSrc": "413:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "413:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "196:250:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "240:3:16",
														"nodeType": "YulTypedName",
														"src": "240:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "245:3:16",
														"nodeType": "YulTypedName",
														"src": "245:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "250:6:16",
														"nodeType": "YulTypedName",
														"src": "250:6:16",
														"type": ""
													}
												],
												"src": "196:250:16"
											},
											{
												"body": {
													"nativeSrc": "501:221:16",
													"nodeType": "YulBlock",
													"src": "501:221:16",
													"statements": [
														{
															"nativeSrc": "511:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "511:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "531:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "531:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "525:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "525:5:16"
																},
																"nativeSrc": "525:12:16",
																"nodeType": "YulFunctionCall",
																"src": "525:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "515:6:16",
																	"nodeType": "YulTypedName",
																	"src": "515:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "553:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "553:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "558:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "558:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "546:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "546:6:16"
																},
																"nativeSrc": "546:19:16",
																"nodeType": "YulFunctionCall",
																"src": "546:19:16"
															},
															"nativeSrc": "546:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "546:19:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "613:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "613:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "620:4:16",
																				"nodeType": "YulLiteral",
																				"src": "620:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:16"
																		},
																		"nativeSrc": "609:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "609:16:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "631:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "631:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "636:4:16",
																				"nodeType": "YulLiteral",
																				"src": "636:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "627:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:16"
																		},
																		"nativeSrc": "627:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "627:14:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "643:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "643:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "574:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "574:34:16"
																},
																"nativeSrc": "574:76:16",
																"nodeType": "YulFunctionCall",
																"src": "574:76:16"
															},
															"nativeSrc": "574:76:16",
															"nodeType": "YulExpressionStatement",
															"src": "574:76:16"
														},
														{
															"nativeSrc": "659:57:16",
															"nodeType": "YulAssignment",
															"src": "659:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "674:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "674:3:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "687:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "687:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "695:2:16",
																								"nodeType": "YulLiteral",
																								"src": "695:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "683:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "683:3:16"
																						},
																						"nativeSrc": "683:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "683:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "704:2:16",
																								"nodeType": "YulLiteral",
																								"src": "704:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "700:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "700:3:16"
																						},
																						"nativeSrc": "700:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "700:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "679:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "679:3:16"
																				},
																				"nativeSrc": "679:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "679:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "670:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:16"
																		},
																		"nativeSrc": "670:39:16",
																		"nodeType": "YulFunctionCall",
																		"src": "670:39:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "711:4:16",
																		"nodeType": "YulLiteral",
																		"src": "711:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "666:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "666:3:16"
																},
																"nativeSrc": "666:50:16",
																"nodeType": "YulFunctionCall",
																"src": "666:50:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "659:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "451:271:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "478:5:16",
														"nodeType": "YulTypedName",
														"src": "478:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "485:3:16",
														"nodeType": "YulTypedName",
														"src": "485:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "493:3:16",
														"nodeType": "YulTypedName",
														"src": "493:3:16",
														"type": ""
													}
												],
												"src": "451:271:16"
											},
											{
												"body": {
													"nativeSrc": "848:99:16",
													"nodeType": "YulBlock",
													"src": "848:99:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "865:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "865:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "876:2:16",
																		"nodeType": "YulLiteral",
																		"src": "876:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "858:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "858:6:16"
																},
																"nativeSrc": "858:21:16",
																"nodeType": "YulFunctionCall",
																"src": "858:21:16"
															},
															"nativeSrc": "858:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "858:21:16"
														},
														{
															"nativeSrc": "888:53:16",
															"nodeType": "YulAssignment",
															"src": "888:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "914:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "914:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "926:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "937:2:16",
																				"nodeType": "YulLiteral",
																				"src": "937:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "922:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "922:3:16"
																		},
																		"nativeSrc": "922:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "922:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "896:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "896:17:16"
																},
																"nativeSrc": "896:45:16",
																"nodeType": "YulFunctionCall",
																"src": "896:45:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "888:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "888:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "727:220:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "817:9:16",
														"nodeType": "YulTypedName",
														"src": "817:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "828:6:16",
														"nodeType": "YulTypedName",
														"src": "828:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "839:4:16",
														"nodeType": "YulTypedName",
														"src": "839:4:16",
														"type": ""
													}
												],
												"src": "727:220:16"
											},
											{
												"body": {
													"nativeSrc": "1022:110:16",
													"nodeType": "YulBlock",
													"src": "1022:110:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1068:16:16",
																"nodeType": "YulBlock",
																"src": "1068:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1077:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1080:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1070:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:16"
																			},
																			"nativeSrc": "1070:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:16"
																		},
																		"nativeSrc": "1070:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1043:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1052:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1039:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:16"
																		},
																		"nativeSrc": "1039:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1064:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1035:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:16"
																},
																"nativeSrc": "1035:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1035:32:16"
															},
															"nativeSrc": "1032:52:16",
															"nodeType": "YulIf",
															"src": "1032:52:16"
														},
														{
															"nativeSrc": "1093:33:16",
															"nodeType": "YulAssignment",
															"src": "1093:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1116:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1116:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1103:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1103:12:16"
																},
																"nativeSrc": "1103:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1103:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1093:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "952:180:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "988:9:16",
														"nodeType": "YulTypedName",
														"src": "988:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "999:7:16",
														"nodeType": "YulTypedName",
														"src": "999:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1011:6:16",
														"nodeType": "YulTypedName",
														"src": "1011:6:16",
														"type": ""
													}
												],
												"src": "952:180:16"
											},
											{
												"body": {
													"nativeSrc": "1232:92:16",
													"nodeType": "YulBlock",
													"src": "1232:92:16",
													"statements": [
														{
															"nativeSrc": "1242:26:16",
															"nodeType": "YulAssignment",
															"src": "1242:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1254:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1254:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1265:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1265:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1250:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1250:3:16"
																},
																"nativeSrc": "1250:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1250:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1242:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1242:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1284:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1284:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1309:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1309:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1302:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1302:6:16"
																				},
																				"nativeSrc": "1302:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1302:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1295:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1295:6:16"
																		},
																		"nativeSrc": "1295:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:16"
																},
																"nativeSrc": "1277:41:16",
																"nodeType": "YulFunctionCall",
																"src": "1277:41:16"
															},
															"nativeSrc": "1277:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "1277:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1137:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1201:9:16",
														"nodeType": "YulTypedName",
														"src": "1201:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1212:6:16",
														"nodeType": "YulTypedName",
														"src": "1212:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1223:4:16",
														"nodeType": "YulTypedName",
														"src": "1223:4:16",
														"type": ""
													}
												],
												"src": "1137:187:16"
											},
											{
												"body": {
													"nativeSrc": "1430:76:16",
													"nodeType": "YulBlock",
													"src": "1430:76:16",
													"statements": [
														{
															"nativeSrc": "1440:26:16",
															"nodeType": "YulAssignment",
															"src": "1440:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1463:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1448:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1448:3:16"
																},
																"nativeSrc": "1448:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1448:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1440:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1482:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1482:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1493:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1493:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1475:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:16"
																},
																"nativeSrc": "1475:25:16",
																"nodeType": "YulFunctionCall",
																"src": "1475:25:16"
															},
															"nativeSrc": "1475:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "1475:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1329:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1399:9:16",
														"nodeType": "YulTypedName",
														"src": "1399:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1410:6:16",
														"nodeType": "YulTypedName",
														"src": "1410:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1421:4:16",
														"nodeType": "YulTypedName",
														"src": "1421:4:16",
														"type": ""
													}
												],
												"src": "1329:177:16"
											},
											{
												"body": {
													"nativeSrc": "1553:76:16",
													"nodeType": "YulBlock",
													"src": "1553:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1607:16:16",
																"nodeType": "YulBlock",
																"src": "1607:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1616:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1616:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1619:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1619:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1609:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:16"
																			},
																			"nativeSrc": "1609:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:12:16"
																		},
																		"nativeSrc": "1609:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1576:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1576:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1597:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "1597:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1590:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "1590:6:16"
																						},
																						"nativeSrc": "1590:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1590:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1583:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "1583:6:16"
																				},
																				"nativeSrc": "1583:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1583:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1573:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1573:2:16"
																		},
																		"nativeSrc": "1573:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1573:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1566:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:16"
																},
																"nativeSrc": "1566:40:16",
																"nodeType": "YulFunctionCall",
																"src": "1566:40:16"
															},
															"nativeSrc": "1563:60:16",
															"nodeType": "YulIf",
															"src": "1563:60:16"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "1511:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1542:5:16",
														"nodeType": "YulTypedName",
														"src": "1542:5:16",
														"type": ""
													}
												],
												"src": "1511:118:16"
											},
											{
												"body": {
													"nativeSrc": "1701:174:16",
													"nodeType": "YulBlock",
													"src": "1701:174:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1747:16:16",
																"nodeType": "YulBlock",
																"src": "1747:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1756:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1756:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1759:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1749:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1749:6:16"
																			},
																			"nativeSrc": "1749:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1749:12:16"
																		},
																		"nativeSrc": "1749:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1749:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1731:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1718:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:16"
																		},
																		"nativeSrc": "1718:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1718:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1714:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:16"
																},
																"nativeSrc": "1714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1714:32:16"
															},
															"nativeSrc": "1711:52:16",
															"nodeType": "YulIf",
															"src": "1711:52:16"
														},
														{
															"nativeSrc": "1772:36:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1772:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1798:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1798:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1785:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1785:12:16"
																},
																"nativeSrc": "1785:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1785:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1776:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1776:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1839:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1839:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "1817:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "1817:21:16"
																},
																"nativeSrc": "1817:28:16",
																"nodeType": "YulFunctionCall",
																"src": "1817:28:16"
															},
															"nativeSrc": "1817:28:16",
															"nodeType": "YulExpressionStatement",
															"src": "1817:28:16"
														},
														{
															"nativeSrc": "1854:15:16",
															"nodeType": "YulAssignment",
															"src": "1854:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1864:5:16",
																"nodeType": "YulIdentifier",
																"src": "1864:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1854:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "1634:241:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1667:9:16",
														"nodeType": "YulTypedName",
														"src": "1667:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1678:7:16",
														"nodeType": "YulTypedName",
														"src": "1678:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1690:6:16",
														"nodeType": "YulTypedName",
														"src": "1690:6:16",
														"type": ""
													}
												],
												"src": "1634:241:16"
											},
											{
												"body": {
													"nativeSrc": "1929:124:16",
													"nodeType": "YulBlock",
													"src": "1929:124:16",
													"statements": [
														{
															"nativeSrc": "1939:29:16",
															"nodeType": "YulAssignment",
															"src": "1939:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1961:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1948:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1948:12:16"
																},
																"nativeSrc": "1948:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1948:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1939:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1939:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2031:16:16",
																"nodeType": "YulBlock",
																"src": "2031:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2040:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2040:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2043:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2043:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2033:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2033:6:16"
																			},
																			"nativeSrc": "2033:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2033:12:16"
																		},
																		"nativeSrc": "2033:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2033:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1990:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1990:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2016:3:16",
																										"nodeType": "YulLiteral",
																										"src": "2016:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2021:1:16",
																										"nodeType": "YulLiteral",
																										"src": "2021:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2012:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2012:3:16"
																								},
																								"nativeSrc": "2012:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2025:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2025:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2008:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2008:3:16"
																						},
																						"nativeSrc": "2008:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2008:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1997:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1997:3:16"
																				},
																				"nativeSrc": "1997:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1997:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1987:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1987:2:16"
																		},
																		"nativeSrc": "1987:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1980:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:16"
																},
																"nativeSrc": "1980:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1980:50:16"
															},
															"nativeSrc": "1977:70:16",
															"nodeType": "YulIf",
															"src": "1977:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1880:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1908:6:16",
														"nodeType": "YulTypedName",
														"src": "1908:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1919:5:16",
														"nodeType": "YulTypedName",
														"src": "1919:5:16",
														"type": ""
													}
												],
												"src": "1880:173:16"
											},
											{
												"body": {
													"nativeSrc": "2128:116:16",
													"nodeType": "YulBlock",
													"src": "2128:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2174:16:16",
																"nodeType": "YulBlock",
																"src": "2174:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2183:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2183:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2186:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2186:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2176:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2176:6:16"
																			},
																			"nativeSrc": "2176:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2176:12:16"
																		},
																		"nativeSrc": "2176:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2176:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2149:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2149:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2158:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2158:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2145:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2145:3:16"
																		},
																		"nativeSrc": "2145:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2145:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2170:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2170:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2141:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2141:3:16"
																},
																"nativeSrc": "2141:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2141:32:16"
															},
															"nativeSrc": "2138:52:16",
															"nodeType": "YulIf",
															"src": "2138:52:16"
														},
														{
															"nativeSrc": "2199:39:16",
															"nodeType": "YulAssignment",
															"src": "2199:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2228:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2228:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2209:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2209:18:16"
																},
																"nativeSrc": "2209:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2209:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2199:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2058:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2094:9:16",
														"nodeType": "YulTypedName",
														"src": "2094:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2105:7:16",
														"nodeType": "YulTypedName",
														"src": "2105:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2117:6:16",
														"nodeType": "YulTypedName",
														"src": "2117:6:16",
														"type": ""
													}
												],
												"src": "2058:186:16"
											},
											{
												"body": {
													"nativeSrc": "2606:902:16",
													"nodeType": "YulBlock",
													"src": "2606:902:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2623:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2623:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2638:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2650:3:16",
																						"nodeType": "YulLiteral",
																						"src": "2650:3:16",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2655:3:16",
																						"nodeType": "YulLiteral",
																						"src": "2655:3:16",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2646:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2646:3:16"
																				},
																				"nativeSrc": "2646:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2646:13:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2634:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:16"
																		},
																		"nativeSrc": "2634:26:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:26:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2616:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:16"
																},
																"nativeSrc": "2616:45:16",
																"nodeType": "YulFunctionCall",
																"src": "2616:45:16"
															},
															"nativeSrc": "2616:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "2616:45:16"
														},
														{
															"nativeSrc": "2670:12:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2670:12:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2680:2:16",
																"nodeType": "YulLiteral",
																"src": "2680:2:16",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2674:2:16",
																	"nodeType": "YulTypedName",
																	"src": "2674:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:16"
																		},
																		"nativeSrc": "2698:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2718:3:16",
																		"nodeType": "YulLiteral",
																		"src": "2718:3:16",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2691:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:16"
																},
																"nativeSrc": "2691:31:16",
																"nodeType": "YulFunctionCall",
																"src": "2691:31:16"
															},
															"nativeSrc": "2691:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "2691:31:16"
														},
														{
															"nativeSrc": "2731:60:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2731:60:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2763:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2763:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2775:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2775:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2786:3:16",
																				"nodeType": "YulLiteral",
																				"src": "2786:3:16",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2771:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:16"
																		},
																		"nativeSrc": "2771:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2771:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2745:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "2745:17:16"
																},
																"nativeSrc": "2745:46:16",
																"nodeType": "YulFunctionCall",
																"src": "2745:46:16"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2735:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2735:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2811:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2811:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2822:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2822:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2807:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2807:3:16"
																		},
																		"nativeSrc": "2807:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2807:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "2831:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2831:6:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2839:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2839:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2827:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2827:3:16"
																		},
																		"nativeSrc": "2827:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2827:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:16"
																},
																"nativeSrc": "2800:50:16",
																"nodeType": "YulFunctionCall",
																"src": "2800:50:16"
															},
															"nativeSrc": "2800:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "2800:50:16"
														},
														{
															"nativeSrc": "2859:47:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2859:47:16",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2891:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2891:6:16"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "2899:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2873:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "2873:17:16"
																},
																"nativeSrc": "2873:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2873:33:16"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "2863:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2863:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2926:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2926:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2937:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2937:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2922:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:16"
																		},
																		"nativeSrc": "2922:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2942:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2942:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2915:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:16"
																},
																"nativeSrc": "2915:34:16",
																"nodeType": "YulFunctionCall",
																"src": "2915:34:16"
															},
															"nativeSrc": "2915:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "2915:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2969:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2969:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2980:3:16",
																				"nodeType": "YulLiteral",
																				"src": "2980:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2965:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:16"
																		},
																		"nativeSrc": "2965:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2965:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "2990:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2990:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3006:3:16",
																								"nodeType": "YulLiteral",
																								"src": "3006:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3011:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3011:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3002:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3002:3:16"
																						},
																						"nativeSrc": "3002:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3002:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3015:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3015:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2998:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2998:3:16"
																				},
																				"nativeSrc": "2998:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2998:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2986:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:16"
																		},
																		"nativeSrc": "2986:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2958:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:16"
																},
																"nativeSrc": "2958:61:16",
																"nodeType": "YulFunctionCall",
																"src": "2958:61:16"
															},
															"nativeSrc": "2958:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "2958:61:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3039:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3039:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3050:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3035:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3035:3:16"
																		},
																		"nativeSrc": "3035:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3035:19:16"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3056:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3056:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3028:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:16"
																},
																"nativeSrc": "3028:35:16",
																"nodeType": "YulFunctionCall",
																"src": "3028:35:16"
															},
															"nativeSrc": "3028:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "3028:35:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3083:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3094:3:16",
																				"nodeType": "YulLiteral",
																				"src": "3094:3:16",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3079:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:16"
																		},
																		"nativeSrc": "3079:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "3104:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3104:6:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3112:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3100:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3100:3:16"
																		},
																		"nativeSrc": "3100:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3100:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3072:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:16"
																},
																"nativeSrc": "3072:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3072:51:16"
															},
															"nativeSrc": "3072:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "3072:51:16"
														},
														{
															"nativeSrc": "3132:17:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3132:17:16",
															"value": {
																"name": "tail_2",
																"nativeSrc": "3143:6:16",
																"nodeType": "YulIdentifier",
																"src": "3143:6:16"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3136:3:16",
																	"nodeType": "YulTypedName",
																	"src": "3136:3:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3158:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3158:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3178:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3178:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3172:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3172:5:16"
																},
																"nativeSrc": "3172:13:16",
																"nodeType": "YulFunctionCall",
																"src": "3172:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3162:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3162:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3201:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3201:6:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3209:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3209:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3194:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3194:6:16"
																},
																"nativeSrc": "3194:22:16",
																"nodeType": "YulFunctionCall",
																"src": "3194:22:16"
															},
															"nativeSrc": "3194:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "3194:22:16"
														},
														{
															"nativeSrc": "3225:22:16",
															"nodeType": "YulAssignment",
															"src": "3225:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3236:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3236:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3232:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3232:3:16"
																},
																"nativeSrc": "3232:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3232:15:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3225:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:16"
																}
															]
														},
														{
															"nativeSrc": "3256:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3256:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3274:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3274:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3282:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3282:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3270:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:16"
																},
																"nativeSrc": "3270:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3270:15:16"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3260:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3260:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3294:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3294:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3303:1:16",
																"nodeType": "YulLiteral",
																"src": "3303:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3298:1:16",
																	"nodeType": "YulTypedName",
																	"src": "3298:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3362:120:16",
																"nodeType": "YulBlock",
																"src": "3362:120:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3383:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3383:3:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "3394:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "3394:6:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3388:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3388:5:16"
																					},
																					"nativeSrc": "3388:13:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3388:13:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3376:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3376:6:16"
																			},
																			"nativeSrc": "3376:26:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3376:26:16"
																		},
																		"nativeSrc": "3376:26:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3376:26:16"
																	},
																	{
																		"nativeSrc": "3415:19:16",
																		"nodeType": "YulAssignment",
																		"src": "3415:19:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3426:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3426:3:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3431:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3431:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3422:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3422:3:16"
																			},
																			"nativeSrc": "3422:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3422:12:16"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3415:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3415:3:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3447:25:16",
																		"nodeType": "YulAssignment",
																		"src": "3447:25:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3461:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "3461:6:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3469:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "3469:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3457:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3457:3:16"
																			},
																			"nativeSrc": "3457:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3457:15:16"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3447:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3447:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3324:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "3324:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3327:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3327:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3321:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3321:2:16"
																},
																"nativeSrc": "3321:13:16",
																"nodeType": "YulFunctionCall",
																"src": "3321:13:16"
															},
															"nativeSrc": "3313:169:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3335:18:16",
																"nodeType": "YulBlock",
																"src": "3335:18:16",
																"statements": [
																	{
																		"nativeSrc": "3337:14:16",
																		"nodeType": "YulAssignment",
																		"src": "3337:14:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3346:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "3346:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3349:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3349:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3342:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3342:3:16"
																			},
																			"nativeSrc": "3342:9:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3342:9:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3337:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "3337:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3317:3:16",
																"nodeType": "YulBlock",
																"src": "3317:3:16",
																"statements": []
															},
															"src": "3313:169:16"
														},
														{
															"nativeSrc": "3491:11:16",
															"nodeType": "YulAssignment",
															"src": "3491:11:16",
															"value": {
																"name": "pos",
																"nativeSrc": "3499:3:16",
																"nodeType": "YulIdentifier",
																"src": "3499:3:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3491:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3491:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2249:1259:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2527:9:16",
														"nodeType": "YulTypedName",
														"src": "2527:9:16",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2538:6:16",
														"nodeType": "YulTypedName",
														"src": "2538:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2546:6:16",
														"nodeType": "YulTypedName",
														"src": "2546:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2554:6:16",
														"nodeType": "YulTypedName",
														"src": "2554:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2562:6:16",
														"nodeType": "YulTypedName",
														"src": "2562:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2570:6:16",
														"nodeType": "YulTypedName",
														"src": "2570:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2578:6:16",
														"nodeType": "YulTypedName",
														"src": "2578:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2586:6:16",
														"nodeType": "YulTypedName",
														"src": "2586:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2597:4:16",
														"nodeType": "YulTypedName",
														"src": "2597:4:16",
														"type": ""
													}
												],
												"src": "2249:1259:16"
											},
											{
												"body": {
													"nativeSrc": "3614:102:16",
													"nodeType": "YulBlock",
													"src": "3614:102:16",
													"statements": [
														{
															"nativeSrc": "3624:26:16",
															"nodeType": "YulAssignment",
															"src": "3624:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3636:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3636:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3647:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3632:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3632:3:16"
																},
																"nativeSrc": "3632:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3632:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3624:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3624:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3666:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3666:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3681:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3697:3:16",
																								"nodeType": "YulLiteral",
																								"src": "3697:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3702:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3702:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3693:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3693:3:16"
																						},
																						"nativeSrc": "3693:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3693:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3706:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3706:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3689:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3689:3:16"
																				},
																				"nativeSrc": "3689:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3689:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3677:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:16"
																		},
																		"nativeSrc": "3677:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3677:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3659:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:16"
																},
																"nativeSrc": "3659:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3659:51:16"
															},
															"nativeSrc": "3659:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "3659:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3513:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3583:9:16",
														"nodeType": "YulTypedName",
														"src": "3583:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3594:6:16",
														"nodeType": "YulTypedName",
														"src": "3594:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3605:4:16",
														"nodeType": "YulTypedName",
														"src": "3605:4:16",
														"type": ""
													}
												],
												"src": "3513:203:16"
											},
											{
												"body": {
													"nativeSrc": "3825:224:16",
													"nodeType": "YulBlock",
													"src": "3825:224:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3871:16:16",
																"nodeType": "YulBlock",
																"src": "3871:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3880:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3880:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3883:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3883:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3873:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3873:6:16"
																			},
																			"nativeSrc": "3873:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3873:12:16"
																		},
																		"nativeSrc": "3873:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3873:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3846:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3846:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3855:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3855:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3842:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3842:3:16"
																		},
																		"nativeSrc": "3842:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3842:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3867:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3867:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3838:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:16"
																},
																"nativeSrc": "3838:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3838:32:16"
															},
															"nativeSrc": "3835:52:16",
															"nodeType": "YulIf",
															"src": "3835:52:16"
														},
														{
															"nativeSrc": "3896:39:16",
															"nodeType": "YulAssignment",
															"src": "3896:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3925:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3906:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3906:18:16"
																},
																"nativeSrc": "3906:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3906:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3896:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3896:6:16"
																}
															]
														},
														{
															"nativeSrc": "3944:48:16",
															"nodeType": "YulAssignment",
															"src": "3944:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3988:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3988:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3973:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:16"
																		},
																		"nativeSrc": "3973:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3973:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3954:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3954:18:16"
																},
																"nativeSrc": "3954:38:16",
																"nodeType": "YulFunctionCall",
																"src": "3954:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3944:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3944:6:16"
																}
															]
														},
														{
															"nativeSrc": "4001:42:16",
															"nodeType": "YulAssignment",
															"src": "4001:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4028:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4028:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4039:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4039:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4024:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4024:3:16"
																		},
																		"nativeSrc": "4024:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4024:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4011:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4011:12:16"
																},
																"nativeSrc": "4011:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4011:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4001:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4001:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3721:328:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3775:9:16",
														"nodeType": "YulTypedName",
														"src": "3775:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3786:7:16",
														"nodeType": "YulTypedName",
														"src": "3786:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3798:6:16",
														"nodeType": "YulTypedName",
														"src": "3798:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3806:6:16",
														"nodeType": "YulTypedName",
														"src": "3806:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3814:6:16",
														"nodeType": "YulTypedName",
														"src": "3814:6:16",
														"type": ""
													}
												],
												"src": "3721:328:16"
											},
											{
												"body": {
													"nativeSrc": "4097:71:16",
													"nodeType": "YulBlock",
													"src": "4097:71:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4146:16:16",
																"nodeType": "YulBlock",
																"src": "4146:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4155:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4155:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4158:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4158:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4148:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4148:6:16"
																			},
																			"nativeSrc": "4148:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4148:12:16"
																		},
																		"nativeSrc": "4148:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4148:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4120:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4120:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4131:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4131:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4138:4:16",
																						"nodeType": "YulLiteral",
																						"src": "4138:4:16",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4127:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4127:3:16"
																				},
																				"nativeSrc": "4127:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4127:16:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4117:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4117:2:16"
																		},
																		"nativeSrc": "4117:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4117:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4110:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:16"
																},
																"nativeSrc": "4110:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4110:35:16"
															},
															"nativeSrc": "4107:55:16",
															"nodeType": "YulIf",
															"src": "4107:55:16"
														}
													]
												},
												"name": "validator_revert_uint8",
												"nativeSrc": "4054:114:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4086:5:16",
														"nodeType": "YulTypedName",
														"src": "4086:5:16",
														"type": ""
													}
												],
												"src": "4054:114:16"
											},
											{
												"body": {
													"nativeSrc": "4326:439:16",
													"nodeType": "YulBlock",
													"src": "4326:439:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4373:16:16",
																"nodeType": "YulBlock",
																"src": "4373:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4382:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4382:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4385:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4385:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4375:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4375:6:16"
																			},
																			"nativeSrc": "4375:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4375:12:16"
																		},
																		"nativeSrc": "4375:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4375:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4347:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4347:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4356:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4356:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4343:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:16"
																		},
																		"nativeSrc": "4343:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4343:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4368:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4368:3:16",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4339:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:16"
																},
																"nativeSrc": "4339:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4339:33:16"
															},
															"nativeSrc": "4336:53:16",
															"nodeType": "YulIf",
															"src": "4336:53:16"
														},
														{
															"nativeSrc": "4398:39:16",
															"nodeType": "YulAssignment",
															"src": "4398:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4427:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4408:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4408:18:16"
																},
																"nativeSrc": "4408:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4408:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4398:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:16"
																}
															]
														},
														{
															"nativeSrc": "4446:42:16",
															"nodeType": "YulAssignment",
															"src": "4446:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4473:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4473:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4484:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4484:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4469:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4469:3:16"
																		},
																		"nativeSrc": "4469:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4469:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4456:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4456:12:16"
																},
																"nativeSrc": "4456:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4456:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4446:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4446:6:16"
																}
															]
														},
														{
															"nativeSrc": "4497:42:16",
															"nodeType": "YulAssignment",
															"src": "4497:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4524:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4524:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4535:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4535:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4520:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:16"
																		},
																		"nativeSrc": "4520:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4520:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4507:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4507:12:16"
																},
																"nativeSrc": "4507:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4507:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4497:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:16"
																}
															]
														},
														{
															"nativeSrc": "4548:45:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4548:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4589:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4589:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4574:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:16"
																		},
																		"nativeSrc": "4574:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4574:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4561:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4561:12:16"
																},
																"nativeSrc": "4561:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4552:5:16",
																	"nodeType": "YulTypedName",
																	"src": "4552:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4625:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4625:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "4602:22:16",
																	"nodeType": "YulIdentifier",
																	"src": "4602:22:16"
																},
																"nativeSrc": "4602:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4602:29:16"
															},
															"nativeSrc": "4602:29:16",
															"nodeType": "YulExpressionStatement",
															"src": "4602:29:16"
														},
														{
															"nativeSrc": "4640:15:16",
															"nodeType": "YulAssignment",
															"src": "4640:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "4650:5:16",
																"nodeType": "YulIdentifier",
																"src": "4650:5:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4640:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4640:6:16"
																}
															]
														},
														{
															"nativeSrc": "4664:43:16",
															"nodeType": "YulAssignment",
															"src": "4664:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4691:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4702:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4702:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4687:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:16"
																		},
																		"nativeSrc": "4687:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4687:19:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4674:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4674:12:16"
																},
																"nativeSrc": "4674:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4674:33:16"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4664:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:16"
																}
															]
														},
														{
															"nativeSrc": "4716:43:16",
															"nodeType": "YulAssignment",
															"src": "4716:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4743:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4743:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4754:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4754:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4739:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4739:3:16"
																		},
																		"nativeSrc": "4739:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4739:19:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4726:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4726:12:16"
																},
																"nativeSrc": "4726:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4726:33:16"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4716:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "4173:592:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4252:9:16",
														"nodeType": "YulTypedName",
														"src": "4252:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4263:7:16",
														"nodeType": "YulTypedName",
														"src": "4263:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4275:6:16",
														"nodeType": "YulTypedName",
														"src": "4275:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4283:6:16",
														"nodeType": "YulTypedName",
														"src": "4283:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4291:6:16",
														"nodeType": "YulTypedName",
														"src": "4291:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4299:6:16",
														"nodeType": "YulTypedName",
														"src": "4299:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4307:6:16",
														"nodeType": "YulTypedName",
														"src": "4307:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4315:6:16",
														"nodeType": "YulTypedName",
														"src": "4315:6:16",
														"type": ""
													}
												],
												"src": "4173:592:16"
											},
											{
												"body": {
													"nativeSrc": "4825:325:16",
													"nodeType": "YulBlock",
													"src": "4825:325:16",
													"statements": [
														{
															"nativeSrc": "4835:22:16",
															"nodeType": "YulAssignment",
															"src": "4835:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4849:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4852:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4852:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4845:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4845:3:16"
																},
																"nativeSrc": "4845:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4845:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4835:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:16"
																}
															]
														},
														{
															"nativeSrc": "4866:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4866:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4896:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4896:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4902:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4892:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:16"
																},
																"nativeSrc": "4892:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4892:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4870:18:16",
																	"nodeType": "YulTypedName",
																	"src": "4870:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4943:31:16",
																"nodeType": "YulBlock",
																"src": "4943:31:16",
																"statements": [
																	{
																		"nativeSrc": "4945:27:16",
																		"nodeType": "YulAssignment",
																		"src": "4945:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4959:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4959:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4967:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4967:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4955:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "4955:3:16"
																			},
																			"nativeSrc": "4955:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4955:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4945:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4945:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4923:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4923:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4916:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:16"
																},
																"nativeSrc": "4916:26:16",
																"nodeType": "YulFunctionCall",
																"src": "4916:26:16"
															},
															"nativeSrc": "4913:61:16",
															"nodeType": "YulIf",
															"src": "4913:61:16"
														},
														{
															"body": {
																"nativeSrc": "5033:111:16",
																"nodeType": "YulBlock",
																"src": "5033:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5054:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5054:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5061:3:16",
																							"nodeType": "YulLiteral",
																							"src": "5061:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5066:10:16",
																							"nodeType": "YulLiteral",
																							"src": "5066:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5057:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5057:3:16"
																					},
																					"nativeSrc": "5057:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5057:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5047:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5047:6:16"
																			},
																			"nativeSrc": "5047:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5047:31:16"
																		},
																		"nativeSrc": "5047:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5047:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5098:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5098:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5101:4:16",
																					"nodeType": "YulLiteral",
																					"src": "5101:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5091:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5091:6:16"
																			},
																			"nativeSrc": "5091:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5091:15:16"
																		},
																		"nativeSrc": "5091:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5091:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5126:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5126:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5129:4:16",
																					"nodeType": "YulLiteral",
																					"src": "5129:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5119:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5119:6:16"
																			},
																			"nativeSrc": "5119:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5119:15:16"
																		},
																		"nativeSrc": "5119:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5119:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4989:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4989:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5012:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5012:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5020:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5020:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5009:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5009:2:16"
																		},
																		"nativeSrc": "5009:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4986:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4986:2:16"
																},
																"nativeSrc": "4986:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4986:38:16"
															},
															"nativeSrc": "4983:161:16",
															"nodeType": "YulIf",
															"src": "4983:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4770:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4805:4:16",
														"nodeType": "YulTypedName",
														"src": "4805:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4814:6:16",
														"nodeType": "YulTypedName",
														"src": "4814:6:16",
														"type": ""
													}
												],
												"src": "4770:380:16"
											},
											{
												"body": {
													"nativeSrc": "5187:95:16",
													"nodeType": "YulBlock",
													"src": "5187:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5204:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5204:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5211:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5211:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5216:10:16",
																				"nodeType": "YulLiteral",
																				"src": "5216:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5207:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:16"
																		},
																		"nativeSrc": "5207:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5207:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5197:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:16"
																},
																"nativeSrc": "5197:31:16",
																"nodeType": "YulFunctionCall",
																"src": "5197:31:16"
															},
															"nativeSrc": "5197:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "5197:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5244:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5244:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5247:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5237:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5237:6:16"
																},
																"nativeSrc": "5237:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5237:15:16"
															},
															"nativeSrc": "5237:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5237:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5268:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5268:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5271:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5271:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5261:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:16"
																},
																"nativeSrc": "5261:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5261:15:16"
															},
															"nativeSrc": "5261:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5261:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5155:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5155:127:16"
											},
											{
												"body": {
													"nativeSrc": "5339:116:16",
													"nodeType": "YulBlock",
													"src": "5339:116:16",
													"statements": [
														{
															"nativeSrc": "5349:20:16",
															"nodeType": "YulAssignment",
															"src": "5349:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5364:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5364:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5367:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "5367:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5360:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5360:3:16"
																},
																"nativeSrc": "5360:9:16",
																"nodeType": "YulFunctionCall",
																"src": "5360:9:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5349:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "5349:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5427:22:16",
																"nodeType": "YulBlock",
																"src": "5427:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5429:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5429:16:16"
																			},
																			"nativeSrc": "5429:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5429:18:16"
																		},
																		"nativeSrc": "5429:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5429:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5398:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "5398:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5391:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "5391:6:16"
																				},
																				"nativeSrc": "5391:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5391:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5405:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "5405:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5412:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "5412:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5421:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "5421:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5408:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "5408:3:16"
																						},
																						"nativeSrc": "5408:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5408:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5402:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5402:2:16"
																				},
																				"nativeSrc": "5402:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5388:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5388:2:16"
																		},
																		"nativeSrc": "5388:37:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5388:37:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5381:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:16"
																},
																"nativeSrc": "5381:45:16",
																"nodeType": "YulFunctionCall",
																"src": "5381:45:16"
															},
															"nativeSrc": "5378:71:16",
															"nodeType": "YulIf",
															"src": "5378:71:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5287:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5318:1:16",
														"nodeType": "YulTypedName",
														"src": "5318:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5321:1:16",
														"nodeType": "YulTypedName",
														"src": "5321:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5327:7:16",
														"nodeType": "YulTypedName",
														"src": "5327:7:16",
														"type": ""
													}
												],
												"src": "5287:168:16"
											},
											{
												"body": {
													"nativeSrc": "5539:168:16",
													"nodeType": "YulBlock",
													"src": "5539:168:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5585:16:16",
																"nodeType": "YulBlock",
																"src": "5585:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5594:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5594:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5597:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5597:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5587:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5587:6:16"
																			},
																			"nativeSrc": "5587:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5587:12:16"
																		},
																		"nativeSrc": "5587:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5587:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5560:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5560:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5569:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5569:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5556:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:16"
																		},
																		"nativeSrc": "5556:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5581:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5581:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5552:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5552:3:16"
																},
																"nativeSrc": "5552:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5552:32:16"
															},
															"nativeSrc": "5549:52:16",
															"nodeType": "YulIf",
															"src": "5549:52:16"
														},
														{
															"nativeSrc": "5610:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5610:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5629:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5629:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5623:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5623:5:16"
																},
																"nativeSrc": "5623:16:16",
																"nodeType": "YulFunctionCall",
																"src": "5623:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5614:5:16",
																	"nodeType": "YulTypedName",
																	"src": "5614:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5671:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5671:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "5648:22:16",
																	"nodeType": "YulIdentifier",
																	"src": "5648:22:16"
																},
																"nativeSrc": "5648:29:16",
																"nodeType": "YulFunctionCall",
																"src": "5648:29:16"
															},
															"nativeSrc": "5648:29:16",
															"nodeType": "YulExpressionStatement",
															"src": "5648:29:16"
														},
														{
															"nativeSrc": "5686:15:16",
															"nodeType": "YulAssignment",
															"src": "5686:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "5696:5:16",
																"nodeType": "YulIdentifier",
																"src": "5696:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5686:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "5460:247:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5505:9:16",
														"nodeType": "YulTypedName",
														"src": "5505:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5516:7:16",
														"nodeType": "YulTypedName",
														"src": "5516:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5528:6:16",
														"nodeType": "YulTypedName",
														"src": "5528:6:16",
														"type": ""
													}
												],
												"src": "5460:247:16"
											},
											{
												"body": {
													"nativeSrc": "5776:352:16",
													"nodeType": "YulBlock",
													"src": "5776:352:16",
													"statements": [
														{
															"nativeSrc": "5786:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5786:16:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5801:1:16",
																"nodeType": "YulLiteral",
																"src": "5801:1:16",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5790:7:16",
																	"nodeType": "YulTypedName",
																	"src": "5790:7:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5811:10:16",
															"nodeType": "YulAssignment",
															"src": "5811:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5820:1:16",
																"nodeType": "YulLiteral",
																"src": "5820:1:16",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5811:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5811:5:16"
																}
															]
														},
														{
															"nativeSrc": "5830:13:16",
															"nodeType": "YulAssignment",
															"src": "5830:13:16",
															"value": {
																"name": "_base",
																"nativeSrc": "5838:5:16",
																"nodeType": "YulIdentifier",
																"src": "5838:5:16"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5830:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5830:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5894:228:16",
																"nodeType": "YulBlock",
																"src": "5894:228:16",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5939:22:16",
																			"nodeType": "YulBlock",
																			"src": "5939:22:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5941:16:16",
																							"nodeType": "YulIdentifier",
																							"src": "5941:16:16"
																						},
																						"nativeSrc": "5941:18:16",
																						"nodeType": "YulFunctionCall",
																						"src": "5941:18:16"
																					},
																					"nativeSrc": "5941:18:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "5941:18:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5914:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "5914:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5928:1:16",
																									"nodeType": "YulLiteral",
																									"src": "5928:1:16",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5924:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "5924:3:16"
																							},
																							"nativeSrc": "5924:6:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5924:6:16"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5932:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "5932:4:16"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5920:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "5920:3:16"
																					},
																					"nativeSrc": "5920:17:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5920:17:16"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5911:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "5911:2:16"
																			},
																			"nativeSrc": "5911:27:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5911:27:16"
																		},
																		"nativeSrc": "5908:53:16",
																		"nodeType": "YulIf",
																		"src": "5908:53:16"
																	},
																	{
																		"body": {
																			"nativeSrc": "6000:29:16",
																			"nodeType": "YulBlock",
																			"src": "6000:29:16",
																			"statements": [
																				{
																					"nativeSrc": "6002:25:16",
																					"nodeType": "YulAssignment",
																					"src": "6002:25:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6015:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "6015:5:16"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6022:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6022:4:16"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6011:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6011:3:16"
																						},
																						"nativeSrc": "6011:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6011:16:16"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6002:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "6002:5:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5981:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "5981:8:16"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "5991:7:16",
																					"nodeType": "YulIdentifier",
																					"src": "5991:7:16"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5977:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5977:3:16"
																			},
																			"nativeSrc": "5977:22:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5977:22:16"
																		},
																		"nativeSrc": "5974:55:16",
																		"nodeType": "YulIf",
																		"src": "5974:55:16"
																	},
																	{
																		"nativeSrc": "6042:23:16",
																		"nodeType": "YulAssignment",
																		"src": "6042:23:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6054:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "6054:4:16"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6060:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "6060:4:16"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6050:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6050:3:16"
																			},
																			"nativeSrc": "6050:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6050:15:16"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6042:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6042:4:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6078:34:16",
																		"nodeType": "YulAssignment",
																		"src": "6078:34:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "6094:7:16",
																					"nodeType": "YulIdentifier",
																					"src": "6094:7:16"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6103:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "6103:8:16"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6090:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6090:3:16"
																			},
																			"nativeSrc": "6090:22:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6090:22:16"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6078:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "6078:8:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5863:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "5863:8:16"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "5873:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "5873:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5860:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5860:2:16"
																},
																"nativeSrc": "5860:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5860:21:16"
															},
															"nativeSrc": "5852:270:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5882:3:16",
																"nodeType": "YulBlock",
																"src": "5882:3:16",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5856:3:16",
																"nodeType": "YulBlock",
																"src": "5856:3:16",
																"statements": []
															},
															"src": "5852:270:16"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5712:416:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "5740:5:16",
														"nodeType": "YulTypedName",
														"src": "5740:5:16",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5747:8:16",
														"nodeType": "YulTypedName",
														"src": "5747:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5760:5:16",
														"nodeType": "YulTypedName",
														"src": "5760:5:16",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5767:4:16",
														"nodeType": "YulTypedName",
														"src": "5767:4:16",
														"type": ""
													}
												],
												"src": "5712:416:16"
											},
											{
												"body": {
													"nativeSrc": "6192:747:16",
													"nodeType": "YulBlock",
													"src": "6192:747:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6230:52:16",
																"nodeType": "YulBlock",
																"src": "6230:52:16",
																"statements": [
																	{
																		"nativeSrc": "6244:10:16",
																		"nodeType": "YulAssignment",
																		"src": "6244:10:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6253:1:16",
																			"nodeType": "YulLiteral",
																			"src": "6253:1:16",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6244:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6244:5:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6267:5:16",
																		"nodeType": "YulLeave",
																		"src": "6267:5:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6212:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "6212:8:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6205:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6205:6:16"
																},
																"nativeSrc": "6205:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6205:16:16"
															},
															"nativeSrc": "6202:80:16",
															"nodeType": "YulIf",
															"src": "6202:80:16"
														},
														{
															"body": {
																"nativeSrc": "6315:52:16",
																"nodeType": "YulBlock",
																"src": "6315:52:16",
																"statements": [
																	{
																		"nativeSrc": "6329:10:16",
																		"nodeType": "YulAssignment",
																		"src": "6329:10:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6338:1:16",
																			"nodeType": "YulLiteral",
																			"src": "6338:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6329:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6329:5:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6352:5:16",
																		"nodeType": "YulLeave",
																		"src": "6352:5:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6301:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6301:4:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6294:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:16"
																},
																"nativeSrc": "6294:12:16",
																"nodeType": "YulFunctionCall",
																"src": "6294:12:16"
															},
															"nativeSrc": "6291:76:16",
															"nodeType": "YulIf",
															"src": "6291:76:16"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6403:52:16",
																		"nodeType": "YulBlock",
																		"src": "6403:52:16",
																		"statements": [
																			{
																				"nativeSrc": "6417:10:16",
																				"nodeType": "YulAssignment",
																				"src": "6417:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6426:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6426:1:16",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6417:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6417:5:16"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6440:5:16",
																				"nodeType": "YulLeave",
																				"src": "6440:5:16"
																			}
																		]
																	},
																	"nativeSrc": "6396:59:16",
																	"nodeType": "YulCase",
																	"src": "6396:59:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6401:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6401:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6471:123:16",
																		"nodeType": "YulBlock",
																		"src": "6471:123:16",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6506:22:16",
																					"nodeType": "YulBlock",
																					"src": "6506:22:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6508:16:16",
																									"nodeType": "YulIdentifier",
																									"src": "6508:16:16"
																								},
																								"nativeSrc": "6508:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "6508:18:16"
																							},
																							"nativeSrc": "6508:18:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "6508:18:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6491:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "6491:8:16"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6501:3:16",
																							"nodeType": "YulLiteral",
																							"src": "6501:3:16",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6488:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "6488:2:16"
																					},
																					"nativeSrc": "6488:17:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6488:17:16"
																				},
																				"nativeSrc": "6485:43:16",
																				"nodeType": "YulIf",
																				"src": "6485:43:16"
																			},
																			{
																				"nativeSrc": "6541:25:16",
																				"nodeType": "YulAssignment",
																				"src": "6541:25:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6554:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "6554:8:16"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6564:1:16",
																							"nodeType": "YulLiteral",
																							"src": "6564:1:16",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6550:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6550:3:16"
																					},
																					"nativeSrc": "6550:16:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6550:16:16"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6541:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6541:5:16"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6579:5:16",
																				"nodeType": "YulLeave",
																				"src": "6579:5:16"
																			}
																		]
																	},
																	"nativeSrc": "6464:130:16",
																	"nodeType": "YulCase",
																	"src": "6464:130:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6469:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6469:1:16",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6383:4:16",
																"nodeType": "YulIdentifier",
																"src": "6383:4:16"
															},
															"nativeSrc": "6376:218:16",
															"nodeType": "YulSwitch",
															"src": "6376:218:16"
														},
														{
															"body": {
																"nativeSrc": "6692:70:16",
																"nodeType": "YulBlock",
																"src": "6692:70:16",
																"statements": [
																	{
																		"nativeSrc": "6706:28:16",
																		"nodeType": "YulAssignment",
																		"src": "6706:28:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6719:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "6719:4:16"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6725:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "6725:8:16"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "6715:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6715:3:16"
																			},
																			"nativeSrc": "6715:19:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6715:19:16"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6706:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6706:5:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6747:5:16",
																		"nodeType": "YulLeave",
																		"src": "6747:5:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6616:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6616:4:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6622:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6622:2:16",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6613:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6613:2:16"
																				},
																				"nativeSrc": "6613:12:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6613:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6630:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "6630:8:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6640:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6640:2:16",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6627:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6627:2:16"
																				},
																				"nativeSrc": "6627:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6627:16:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6609:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6609:3:16"
																		},
																		"nativeSrc": "6609:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6609:35:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6653:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6653:4:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6659:3:16",
																						"nodeType": "YulLiteral",
																						"src": "6659:3:16",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6650:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6650:2:16"
																				},
																				"nativeSrc": "6650:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6668:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "6668:8:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6678:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6678:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6665:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "6665:2:16"
																				},
																				"nativeSrc": "6665:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6665:16:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6646:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6646:3:16"
																		},
																		"nativeSrc": "6646:36:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6646:36:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6606:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6606:2:16"
																},
																"nativeSrc": "6606:77:16",
																"nodeType": "YulFunctionCall",
																"src": "6606:77:16"
															},
															"nativeSrc": "6603:159:16",
															"nodeType": "YulIf",
															"src": "6603:159:16"
														},
														{
															"nativeSrc": "6771:57:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6771:57:16",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6813:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6813:4:16"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6819:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "6819:8:16"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "6794:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "6794:18:16"
																},
																"nativeSrc": "6794:34:16",
																"nodeType": "YulFunctionCall",
																"src": "6794:34:16"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "6775:7:16",
																	"nodeType": "YulTypedName",
																	"src": "6775:7:16",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "6784:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6784:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6873:22:16",
																"nodeType": "YulBlock",
																"src": "6873:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6875:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "6875:16:16"
																			},
																			"nativeSrc": "6875:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6875:18:16"
																		},
																		"nativeSrc": "6875:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6875:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6843:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "6843:7:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6860:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6860:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6856:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6856:3:16"
																				},
																				"nativeSrc": "6856:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6856:6:16"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "6864:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6864:6:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6852:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6852:3:16"
																		},
																		"nativeSrc": "6852:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6852:19:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6840:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6840:2:16"
																},
																"nativeSrc": "6840:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6840:32:16"
															},
															"nativeSrc": "6837:58:16",
															"nodeType": "YulIf",
															"src": "6837:58:16"
														},
														{
															"nativeSrc": "6904:29:16",
															"nodeType": "YulAssignment",
															"src": "6904:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6917:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "6917:7:16"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "6926:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6926:6:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6913:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6913:3:16"
																},
																"nativeSrc": "6913:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6913:20:16"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6904:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6904:5:16"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6133:806:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6163:4:16",
														"nodeType": "YulTypedName",
														"src": "6163:4:16",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6169:8:16",
														"nodeType": "YulTypedName",
														"src": "6169:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6182:5:16",
														"nodeType": "YulTypedName",
														"src": "6182:5:16",
														"type": ""
													}
												],
												"src": "6133:806:16"
											},
											{
												"body": {
													"nativeSrc": "7012:72:16",
													"nodeType": "YulBlock",
													"src": "7012:72:16",
													"statements": [
														{
															"nativeSrc": "7022:56:16",
															"nodeType": "YulAssignment",
															"src": "7022:56:16",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7052:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7052:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7062:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "7062:8:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7072:4:16",
																				"nodeType": "YulLiteral",
																				"src": "7072:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7058:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:16"
																		},
																		"nativeSrc": "7058:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7058:19:16"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7031:20:16",
																	"nodeType": "YulIdentifier",
																	"src": "7031:20:16"
																},
																"nativeSrc": "7031:47:16",
																"nodeType": "YulFunctionCall",
																"src": "7031:47:16"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7022:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "7022:5:16"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "6944:140:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6983:4:16",
														"nodeType": "YulTypedName",
														"src": "6983:4:16",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6989:8:16",
														"nodeType": "YulTypedName",
														"src": "6989:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7002:5:16",
														"nodeType": "YulTypedName",
														"src": "7002:5:16",
														"type": ""
													}
												],
												"src": "6944:140:16"
											},
											{
												"body": {
													"nativeSrc": "7135:171:16",
													"nodeType": "YulBlock",
													"src": "7135:171:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7166:111:16",
																"nodeType": "YulBlock",
																"src": "7166:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7187:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7187:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7194:3:16",
																							"nodeType": "YulLiteral",
																							"src": "7194:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7199:10:16",
																							"nodeType": "YulLiteral",
																							"src": "7199:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7190:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "7190:3:16"
																					},
																					"nativeSrc": "7190:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7190:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7180:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7180:6:16"
																			},
																			"nativeSrc": "7180:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7180:31:16"
																		},
																		"nativeSrc": "7180:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7180:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7231:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7231:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7234:4:16",
																					"nodeType": "YulLiteral",
																					"src": "7234:4:16",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7224:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7224:6:16"
																			},
																			"nativeSrc": "7224:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7224:15:16"
																		},
																		"nativeSrc": "7224:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7224:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7259:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7259:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7262:4:16",
																					"nodeType": "YulLiteral",
																					"src": "7262:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7252:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7252:6:16"
																			},
																			"nativeSrc": "7252:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7252:15:16"
																		},
																		"nativeSrc": "7252:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7252:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7155:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7155:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7148:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:16"
																},
																"nativeSrc": "7148:9:16",
																"nodeType": "YulFunctionCall",
																"src": "7148:9:16"
															},
															"nativeSrc": "7145:132:16",
															"nodeType": "YulIf",
															"src": "7145:132:16"
														},
														{
															"nativeSrc": "7286:14:16",
															"nodeType": "YulAssignment",
															"src": "7286:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7295:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7295:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7298:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7298:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7291:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7291:3:16"
																},
																"nativeSrc": "7291:9:16",
																"nodeType": "YulFunctionCall",
																"src": "7291:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7286:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "7286:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7089:217:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7120:1:16",
														"nodeType": "YulTypedName",
														"src": "7120:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7123:1:16",
														"nodeType": "YulTypedName",
														"src": "7123:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7129:1:16",
														"nodeType": "YulTypedName",
														"src": "7129:1:16",
														"type": ""
													}
												],
												"src": "7089:217:16"
											},
											{
												"body": {
													"nativeSrc": "7343:95:16",
													"nodeType": "YulBlock",
													"src": "7343:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7360:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7360:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7367:3:16",
																				"nodeType": "YulLiteral",
																				"src": "7367:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7372:10:16",
																				"nodeType": "YulLiteral",
																				"src": "7372:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7363:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7363:3:16"
																		},
																		"nativeSrc": "7363:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7363:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7353:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:16"
																},
																"nativeSrc": "7353:31:16",
																"nodeType": "YulFunctionCall",
																"src": "7353:31:16"
															},
															"nativeSrc": "7353:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "7353:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7400:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7400:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7403:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7403:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7393:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:16"
																},
																"nativeSrc": "7393:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7393:15:16"
															},
															"nativeSrc": "7393:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7393:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7424:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7424:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7427:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7427:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7417:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:16"
																},
																"nativeSrc": "7417:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7417:15:16"
															},
															"nativeSrc": "7417:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7417:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7311:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7311:127:16"
											},
											{
												"body": {
													"nativeSrc": "7617:181:16",
													"nodeType": "YulBlock",
													"src": "7617:181:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7634:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7645:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7645:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7627:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7627:6:16"
																},
																"nativeSrc": "7627:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7627:21:16"
															},
															"nativeSrc": "7627:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "7627:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7668:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7668:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7679:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7679:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7664:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:16"
																		},
																		"nativeSrc": "7664:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7664:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7684:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7657:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:16"
																},
																"nativeSrc": "7657:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7657:30:16"
															},
															"nativeSrc": "7657:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "7657:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7707:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7718:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7703:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:16"
																		},
																		"nativeSrc": "7703:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:16"
																	},
																	{
																		"hexValue": "796f75206172652073656e64696e6720746f207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7723:33:16",
																		"nodeType": "YulLiteral",
																		"src": "7723:33:16",
																		"type": "",
																		"value": "you are sending to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7696:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:16"
																},
																"nativeSrc": "7696:61:16",
																"nodeType": "YulFunctionCall",
																"src": "7696:61:16"
															},
															"nativeSrc": "7696:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "7696:61:16"
														},
														{
															"nativeSrc": "7766:26:16",
															"nodeType": "YulAssignment",
															"src": "7766:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7778:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7778:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7789:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7789:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7774:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7774:3:16"
																},
																"nativeSrc": "7774:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7774:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7766:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7766:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7443:355:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7594:9:16",
														"nodeType": "YulTypedName",
														"src": "7594:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7608:4:16",
														"nodeType": "YulTypedName",
														"src": "7608:4:16",
														"type": ""
													}
												],
												"src": "7443:355:16"
											},
											{
												"body": {
													"nativeSrc": "7884:103:16",
													"nodeType": "YulBlock",
													"src": "7884:103:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7930:16:16",
																"nodeType": "YulBlock",
																"src": "7930:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7939:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7939:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7942:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7942:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7932:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7932:6:16"
																			},
																			"nativeSrc": "7932:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7932:12:16"
																		},
																		"nativeSrc": "7932:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7932:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7905:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7905:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7914:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7914:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7901:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:16"
																		},
																		"nativeSrc": "7901:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7901:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7926:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7926:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7897:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:16"
																},
																"nativeSrc": "7897:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7897:32:16"
															},
															"nativeSrc": "7894:52:16",
															"nodeType": "YulIf",
															"src": "7894:52:16"
														},
														{
															"nativeSrc": "7955:26:16",
															"nodeType": "YulAssignment",
															"src": "7955:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7971:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7971:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7965:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "7965:5:16"
																},
																"nativeSrc": "7965:16:16",
																"nodeType": "YulFunctionCall",
																"src": "7965:16:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7955:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7955:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7803:184:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7850:9:16",
														"nodeType": "YulTypedName",
														"src": "7850:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7861:7:16",
														"nodeType": "YulTypedName",
														"src": "7861:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7873:6:16",
														"nodeType": "YulTypedName",
														"src": "7873:6:16",
														"type": ""
													}
												],
												"src": "7803:184:16"
											},
											{
												"body": {
													"nativeSrc": "8040:77:16",
													"nodeType": "YulBlock",
													"src": "8040:77:16",
													"statements": [
														{
															"nativeSrc": "8050:16:16",
															"nodeType": "YulAssignment",
															"src": "8050:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8061:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8061:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8064:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8064:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8057:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8057:3:16"
																},
																"nativeSrc": "8057:9:16",
																"nodeType": "YulFunctionCall",
																"src": "8057:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8050:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8089:22:16",
																"nodeType": "YulBlock",
																"src": "8089:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8091:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "8091:16:16"
																			},
																			"nativeSrc": "8091:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8091:18:16"
																		},
																		"nativeSrc": "8091:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8091:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8081:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8081:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8084:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8084:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8078:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8078:2:16"
																},
																"nativeSrc": "8078:10:16",
																"nodeType": "YulFunctionCall",
																"src": "8078:10:16"
															},
															"nativeSrc": "8075:36:16",
															"nodeType": "YulIf",
															"src": "8075:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7992:125:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8023:1:16",
														"nodeType": "YulTypedName",
														"src": "8023:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8026:1:16",
														"nodeType": "YulTypedName",
														"src": "8026:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8032:3:16",
														"nodeType": "YulTypedName",
														"src": "8032:3:16",
														"type": ""
													}
												],
												"src": "7992:125:16"
											},
											{
												"body": {
													"nativeSrc": "8171:79:16",
													"nodeType": "YulBlock",
													"src": "8171:79:16",
													"statements": [
														{
															"nativeSrc": "8181:17:16",
															"nodeType": "YulAssignment",
															"src": "8181:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8193:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8193:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8196:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8189:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:16"
																},
																"nativeSrc": "8189:9:16",
																"nodeType": "YulFunctionCall",
																"src": "8189:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8181:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8181:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8222:22:16",
																"nodeType": "YulBlock",
																"src": "8222:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8224:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "8224:16:16"
																			},
																			"nativeSrc": "8224:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8224:18:16"
																		},
																		"nativeSrc": "8224:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8224:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8213:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8213:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8219:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8219:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8210:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8210:2:16"
																},
																"nativeSrc": "8210:11:16",
																"nodeType": "YulFunctionCall",
																"src": "8210:11:16"
															},
															"nativeSrc": "8207:37:16",
															"nodeType": "YulIf",
															"src": "8207:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8122:128:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8153:1:16",
														"nodeType": "YulTypedName",
														"src": "8153:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8156:1:16",
														"nodeType": "YulTypedName",
														"src": "8156:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8162:4:16",
														"nodeType": "YulTypedName",
														"src": "8162:4:16",
														"type": ""
													}
												],
												"src": "8122:128:16"
											},
											{
												"body": {
													"nativeSrc": "8429:170:16",
													"nodeType": "YulBlock",
													"src": "8429:170:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8446:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8446:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8457:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8457:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8439:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:16"
																},
																"nativeSrc": "8439:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8439:21:16"
															},
															"nativeSrc": "8439:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8439:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8480:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8480:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8491:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8491:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8476:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8476:3:16"
																		},
																		"nativeSrc": "8476:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8476:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8496:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8496:2:16",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8469:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8469:6:16"
																},
																"nativeSrc": "8469:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8469:30:16"
															},
															"nativeSrc": "8469:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8469:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8519:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8530:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8515:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:16"
																		},
																		"nativeSrc": "8515:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:16"
																	},
																	{
																		"hexValue": "6e6f206e6577206465706f736974206164646564",
																		"kind": "string",
																		"nativeSrc": "8535:22:16",
																		"nodeType": "YulLiteral",
																		"src": "8535:22:16",
																		"type": "",
																		"value": "no new deposit added"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8508:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:16"
																},
																"nativeSrc": "8508:50:16",
																"nodeType": "YulFunctionCall",
																"src": "8508:50:16"
															},
															"nativeSrc": "8508:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "8508:50:16"
														},
														{
															"nativeSrc": "8567:26:16",
															"nodeType": "YulAssignment",
															"src": "8567:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8579:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8579:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8590:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8590:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8575:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8575:3:16"
																},
																"nativeSrc": "8575:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8575:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8567:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8567:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d76893c2f0238fd9c77950c3a3abca4482a5081e88db2e94ed7f1a183b26a26__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8255:344:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8406:9:16",
														"nodeType": "YulTypedName",
														"src": "8406:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8420:4:16",
														"nodeType": "YulTypedName",
														"src": "8420:4:16",
														"type": ""
													}
												],
												"src": "8255:344:16"
											},
											{
												"body": {
													"nativeSrc": "8778:171:16",
													"nodeType": "YulBlock",
													"src": "8778:171:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8795:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8795:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8806:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8806:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8788:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8788:6:16"
																},
																"nativeSrc": "8788:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8788:21:16"
															},
															"nativeSrc": "8788:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8788:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8829:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8829:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8840:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8840:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8825:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8825:3:16"
																		},
																		"nativeSrc": "8825:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8825:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8845:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8845:2:16",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8818:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:16"
																},
																"nativeSrc": "8818:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8818:30:16"
															},
															"nativeSrc": "8818:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8818:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8868:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8868:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8879:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8879:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8864:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8864:3:16"
																		},
																		"nativeSrc": "8864:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8864:18:16"
																	},
																	{
																		"hexValue": "63616e742073656e64207a65726f20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "8884:23:16",
																		"nodeType": "YulLiteral",
																		"src": "8884:23:16",
																		"type": "",
																		"value": "cant send zero amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8857:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8857:6:16"
																},
																"nativeSrc": "8857:51:16",
																"nodeType": "YulFunctionCall",
																"src": "8857:51:16"
															},
															"nativeSrc": "8857:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "8857:51:16"
														},
														{
															"nativeSrc": "8917:26:16",
															"nodeType": "YulAssignment",
															"src": "8917:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8929:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8940:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8925:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8925:3:16"
																},
																"nativeSrc": "8925:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8925:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8917:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8917:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b379c917a4dc8c3898738d13abfa21e18194ad28cbafadbd6c44246f20237637__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8604:345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8755:9:16",
														"nodeType": "YulTypedName",
														"src": "8755:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8769:4:16",
														"nodeType": "YulTypedName",
														"src": "8769:4:16",
														"type": ""
													}
												],
												"src": "8604:345:16"
											},
											{
												"body": {
													"nativeSrc": "9083:145:16",
													"nodeType": "YulBlock",
													"src": "9083:145:16",
													"statements": [
														{
															"nativeSrc": "9093:26:16",
															"nodeType": "YulAssignment",
															"src": "9093:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9105:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9105:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9116:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9116:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9101:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9101:3:16"
																},
																"nativeSrc": "9101:18:16",
																"nodeType": "YulFunctionCall",
																"src": "9101:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9093:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9093:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9135:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9135:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9150:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9150:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9166:3:16",
																								"nodeType": "YulLiteral",
																								"src": "9166:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9171:1:16",
																								"nodeType": "YulLiteral",
																								"src": "9171:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9162:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "9162:3:16"
																						},
																						"nativeSrc": "9162:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "9162:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9175:1:16",
																						"nodeType": "YulLiteral",
																						"src": "9175:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9158:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9158:3:16"
																				},
																				"nativeSrc": "9158:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9158:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9146:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:16"
																		},
																		"nativeSrc": "9146:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9128:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:16"
																},
																"nativeSrc": "9128:51:16",
																"nodeType": "YulFunctionCall",
																"src": "9128:51:16"
															},
															"nativeSrc": "9128:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "9128:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9199:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9199:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9210:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9210:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9195:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9195:3:16"
																		},
																		"nativeSrc": "9195:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9195:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9215:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9215:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9188:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9188:6:16"
																},
																"nativeSrc": "9188:34:16",
																"nodeType": "YulFunctionCall",
																"src": "9188:34:16"
															},
															"nativeSrc": "9188:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "9188:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8954:274:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9044:9:16",
														"nodeType": "YulTypedName",
														"src": "9044:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9055:6:16",
														"nodeType": "YulTypedName",
														"src": "9055:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9063:6:16",
														"nodeType": "YulTypedName",
														"src": "9063:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9074:4:16",
														"nodeType": "YulTypedName",
														"src": "9074:4:16",
														"type": ""
													}
												],
												"src": "8954:274:16"
											},
											{
												"body": {
													"nativeSrc": "9311:167:16",
													"nodeType": "YulBlock",
													"src": "9311:167:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9357:16:16",
																"nodeType": "YulBlock",
																"src": "9357:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9366:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9366:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9369:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9369:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9359:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9359:6:16"
																			},
																			"nativeSrc": "9359:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9359:12:16"
																		},
																		"nativeSrc": "9359:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9359:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9332:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9332:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9341:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9341:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9328:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9328:3:16"
																		},
																		"nativeSrc": "9328:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9328:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9353:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9353:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9324:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9324:3:16"
																},
																"nativeSrc": "9324:32:16",
																"nodeType": "YulFunctionCall",
																"src": "9324:32:16"
															},
															"nativeSrc": "9321:52:16",
															"nodeType": "YulIf",
															"src": "9321:52:16"
														},
														{
															"nativeSrc": "9382:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "9382:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9401:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9401:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9395:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "9395:5:16"
																},
																"nativeSrc": "9395:16:16",
																"nodeType": "YulFunctionCall",
																"src": "9395:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9386:5:16",
																	"nodeType": "YulTypedName",
																	"src": "9386:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9442:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "9442:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "9420:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "9420:21:16"
																},
																"nativeSrc": "9420:28:16",
																"nodeType": "YulFunctionCall",
																"src": "9420:28:16"
															},
															"nativeSrc": "9420:28:16",
															"nodeType": "YulExpressionStatement",
															"src": "9420:28:16"
														},
														{
															"nativeSrc": "9457:15:16",
															"nodeType": "YulAssignment",
															"src": "9457:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "9467:5:16",
																"nodeType": "YulIdentifier",
																"src": "9467:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9457:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9457:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9233:245:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9277:9:16",
														"nodeType": "YulTypedName",
														"src": "9277:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9288:7:16",
														"nodeType": "YulTypedName",
														"src": "9288:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9300:6:16",
														"nodeType": "YulTypedName",
														"src": "9300:6:16",
														"type": ""
													}
												],
												"src": "9233:245:16"
											},
											{
												"body": {
													"nativeSrc": "9657:166:16",
													"nodeType": "YulBlock",
													"src": "9657:166:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9674:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9674:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9685:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9685:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9667:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:16"
																},
																"nativeSrc": "9667:21:16",
																"nodeType": "YulFunctionCall",
																"src": "9667:21:16"
															},
															"nativeSrc": "9667:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "9667:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9708:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9708:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9719:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9719:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9704:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9704:3:16"
																		},
																		"nativeSrc": "9704:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9704:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9724:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9724:2:16",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9697:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9697:6:16"
																},
																"nativeSrc": "9697:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9697:30:16"
															},
															"nativeSrc": "9697:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9697:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9747:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9747:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9758:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9758:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9743:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9743:3:16"
																		},
																		"nativeSrc": "9743:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9743:18:16"
																	},
																	{
																		"hexValue": "636f6e747261637420667265657a6564",
																		"kind": "string",
																		"nativeSrc": "9763:18:16",
																		"nodeType": "YulLiteral",
																		"src": "9763:18:16",
																		"type": "",
																		"value": "contract freezed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9736:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9736:6:16"
																},
																"nativeSrc": "9736:46:16",
																"nodeType": "YulFunctionCall",
																"src": "9736:46:16"
															},
															"nativeSrc": "9736:46:16",
															"nodeType": "YulExpressionStatement",
															"src": "9736:46:16"
														},
														{
															"nativeSrc": "9791:26:16",
															"nodeType": "YulAssignment",
															"src": "9791:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9803:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9803:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9814:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9814:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9799:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9799:3:16"
																},
																"nativeSrc": "9799:18:16",
																"nodeType": "YulFunctionCall",
																"src": "9799:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9791:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9791:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b0277e6454e2ac2e31447966d5418245e63192c6d388fa86142f5bb21c10bb6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9483:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9634:9:16",
														"nodeType": "YulTypedName",
														"src": "9634:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9648:4:16",
														"nodeType": "YulTypedName",
														"src": "9648:4:16",
														"type": ""
													}
												],
												"src": "9483:340:16"
											},
											{
												"body": {
													"nativeSrc": "10002:224:16",
													"nodeType": "YulBlock",
													"src": "10002:224:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10019:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10019:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10030:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10030:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10012:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10012:6:16"
																},
																"nativeSrc": "10012:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10012:21:16"
															},
															"nativeSrc": "10012:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10012:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10053:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10053:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10064:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10064:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10049:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10049:3:16"
																		},
																		"nativeSrc": "10049:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10049:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10069:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10069:2:16",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10042:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10042:6:16"
																},
																"nativeSrc": "10042:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10042:30:16"
															},
															"nativeSrc": "10042:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "10042:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10092:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10092:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10103:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10103:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10088:3:16"
																		},
																		"nativeSrc": "10088:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10088:18:16"
																	},
																	{
																		"hexValue": "706f696e747320746f2073776170206c657373207468616e206d696e706f696e",
																		"kind": "string",
																		"nativeSrc": "10108:34:16",
																		"nodeType": "YulLiteral",
																		"src": "10108:34:16",
																		"type": "",
																		"value": "points to swap less than minpoin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10081:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10081:6:16"
																},
																"nativeSrc": "10081:62:16",
																"nodeType": "YulFunctionCall",
																"src": "10081:62:16"
															},
															"nativeSrc": "10081:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "10081:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10163:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10163:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10174:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10174:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10159:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10159:3:16"
																		},
																		"nativeSrc": "10159:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10159:18:16"
																	},
																	{
																		"hexValue": "7473",
																		"kind": "string",
																		"nativeSrc": "10179:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10179:4:16",
																		"type": "",
																		"value": "ts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10152:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10152:6:16"
																},
																"nativeSrc": "10152:32:16",
																"nodeType": "YulFunctionCall",
																"src": "10152:32:16"
															},
															"nativeSrc": "10152:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "10152:32:16"
														},
														{
															"nativeSrc": "10193:27:16",
															"nodeType": "YulAssignment",
															"src": "10193:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10205:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10205:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10216:3:16",
																		"nodeType": "YulLiteral",
																		"src": "10216:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10201:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10201:3:16"
																},
																"nativeSrc": "10201:19:16",
																"nodeType": "YulFunctionCall",
																"src": "10201:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10193:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10193:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c76f5dbf815a0d4a0a69b2459d6d3337e979ed437973377d86ebb8708773a32__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9828:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9979:9:16",
														"nodeType": "YulTypedName",
														"src": "9979:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9993:4:16",
														"nodeType": "YulTypedName",
														"src": "9993:4:16",
														"type": ""
													}
												],
												"src": "9828:398:16"
											},
											{
												"body": {
													"nativeSrc": "10388:162:16",
													"nodeType": "YulBlock",
													"src": "10388:162:16",
													"statements": [
														{
															"nativeSrc": "10398:26:16",
															"nodeType": "YulAssignment",
															"src": "10398:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10410:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10410:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10421:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10421:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10406:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:16"
																},
																"nativeSrc": "10406:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10406:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10398:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10398:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10440:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10440:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10451:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10451:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10433:6:16"
																},
																"nativeSrc": "10433:25:16",
																"nodeType": "YulFunctionCall",
																"src": "10433:25:16"
															},
															"nativeSrc": "10433:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "10433:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10478:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10478:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10489:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10489:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10474:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10474:3:16"
																		},
																		"nativeSrc": "10474:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10474:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10494:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10494:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10467:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:16"
																},
																"nativeSrc": "10467:34:16",
																"nodeType": "YulFunctionCall",
																"src": "10467:34:16"
															},
															"nativeSrc": "10467:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "10467:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10521:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10521:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10532:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10532:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10517:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10517:3:16"
																		},
																		"nativeSrc": "10517:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10537:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10537:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10510:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10510:6:16"
																},
																"nativeSrc": "10510:34:16",
																"nodeType": "YulFunctionCall",
																"src": "10510:34:16"
															},
															"nativeSrc": "10510:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "10510:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10231:319:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10341:9:16",
														"nodeType": "YulTypedName",
														"src": "10341:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10352:6:16",
														"nodeType": "YulTypedName",
														"src": "10352:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10360:6:16",
														"nodeType": "YulTypedName",
														"src": "10360:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10368:6:16",
														"nodeType": "YulTypedName",
														"src": "10368:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10379:4:16",
														"nodeType": "YulTypedName",
														"src": "10379:4:16",
														"type": ""
													}
												],
												"src": "10231:319:16"
											},
											{
												"body": {
													"nativeSrc": "10729:157:16",
													"nodeType": "YulBlock",
													"src": "10729:157:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10746:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10746:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10757:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10757:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10739:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:16"
																},
																"nativeSrc": "10739:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10739:21:16"
															},
															"nativeSrc": "10739:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10739:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10780:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10780:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10791:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10791:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10776:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:16"
																		},
																		"nativeSrc": "10776:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10776:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10796:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10796:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10769:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10769:6:16"
																},
																"nativeSrc": "10769:29:16",
																"nodeType": "YulFunctionCall",
																"src": "10769:29:16"
															},
															"nativeSrc": "10769:29:16",
															"nodeType": "YulExpressionStatement",
															"src": "10769:29:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10829:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10829:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10814:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:16"
																		},
																		"nativeSrc": "10814:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10814:18:16"
																	},
																	{
																		"hexValue": "7369672075736564",
																		"kind": "string",
																		"nativeSrc": "10834:10:16",
																		"nodeType": "YulLiteral",
																		"src": "10834:10:16",
																		"type": "",
																		"value": "sig used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10807:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:16"
																},
																"nativeSrc": "10807:38:16",
																"nodeType": "YulFunctionCall",
																"src": "10807:38:16"
															},
															"nativeSrc": "10807:38:16",
															"nodeType": "YulExpressionStatement",
															"src": "10807:38:16"
														},
														{
															"nativeSrc": "10854:26:16",
															"nodeType": "YulAssignment",
															"src": "10854:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10866:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10866:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10877:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10877:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10862:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10862:3:16"
																},
																"nativeSrc": "10862:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10862:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10854:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10854:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_caec8756a40efc76a36098b7e1250a0625590caab7950a2b4ad5e46b24f6665d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10555:331:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10706:9:16",
														"nodeType": "YulTypedName",
														"src": "10706:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10720:4:16",
														"nodeType": "YulTypedName",
														"src": "10720:4:16",
														"type": ""
													}
												],
												"src": "10555:331:16"
											},
											{
												"body": {
													"nativeSrc": "11104:306:16",
													"nodeType": "YulBlock",
													"src": "11104:306:16",
													"statements": [
														{
															"nativeSrc": "11114:27:16",
															"nodeType": "YulAssignment",
															"src": "11114:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11126:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11126:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11137:3:16",
																		"nodeType": "YulLiteral",
																		"src": "11137:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11122:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11122:3:16"
																},
																"nativeSrc": "11122:19:16",
																"nodeType": "YulFunctionCall",
																"src": "11122:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11114:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11114:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11157:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11157:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11168:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11168:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11150:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:16"
																},
																"nativeSrc": "11150:25:16",
																"nodeType": "YulFunctionCall",
																"src": "11150:25:16"
															},
															"nativeSrc": "11150:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "11150:25:16"
														},
														{
															"nativeSrc": "11184:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11184:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11202:3:16",
																				"nodeType": "YulLiteral",
																				"src": "11202:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11207:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11207:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11198:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11198:3:16"
																		},
																		"nativeSrc": "11198:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11198:11:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11211:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11211:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11194:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11194:3:16"
																},
																"nativeSrc": "11194:19:16",
																"nodeType": "YulFunctionCall",
																"src": "11194:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11188:2:16",
																	"nodeType": "YulTypedName",
																	"src": "11188:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11233:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11233:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11244:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11244:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11229:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11229:3:16"
																		},
																		"nativeSrc": "11229:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11229:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11253:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11253:6:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11261:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11261:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11249:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:16"
																		},
																		"nativeSrc": "11249:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11222:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11222:6:16"
																},
																"nativeSrc": "11222:43:16",
																"nodeType": "YulFunctionCall",
																"src": "11222:43:16"
															},
															"nativeSrc": "11222:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "11222:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11285:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11285:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11296:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11296:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11281:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11281:3:16"
																		},
																		"nativeSrc": "11281:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11281:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "11305:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11305:6:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11313:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11313:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11301:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11301:3:16"
																		},
																		"nativeSrc": "11301:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11301:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11274:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11274:6:16"
																},
																"nativeSrc": "11274:43:16",
																"nodeType": "YulFunctionCall",
																"src": "11274:43:16"
															},
															"nativeSrc": "11274:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "11274:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11337:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11337:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11348:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11348:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11333:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:16"
																		},
																		"nativeSrc": "11333:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11333:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11353:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11353:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:16"
																},
																"nativeSrc": "11326:34:16",
																"nodeType": "YulFunctionCall",
																"src": "11326:34:16"
															},
															"nativeSrc": "11326:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "11326:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11380:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11380:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11391:3:16",
																				"nodeType": "YulLiteral",
																				"src": "11391:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11376:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11376:3:16"
																		},
																		"nativeSrc": "11376:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11376:19:16"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "11397:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11397:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11369:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11369:6:16"
																},
																"nativeSrc": "11369:35:16",
																"nodeType": "YulFunctionCall",
																"src": "11369:35:16"
															},
															"nativeSrc": "11369:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "11369:35:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10891:519:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11041:9:16",
														"nodeType": "YulTypedName",
														"src": "11041:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11052:6:16",
														"nodeType": "YulTypedName",
														"src": "11052:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11060:6:16",
														"nodeType": "YulTypedName",
														"src": "11060:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11068:6:16",
														"nodeType": "YulTypedName",
														"src": "11068:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11076:6:16",
														"nodeType": "YulTypedName",
														"src": "11076:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11084:6:16",
														"nodeType": "YulTypedName",
														"src": "11084:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11095:4:16",
														"nodeType": "YulTypedName",
														"src": "11095:4:16",
														"type": ""
													}
												],
												"src": "10891:519:16"
											},
											{
												"body": {
													"nativeSrc": "11544:175:16",
													"nodeType": "YulBlock",
													"src": "11544:175:16",
													"statements": [
														{
															"nativeSrc": "11554:26:16",
															"nodeType": "YulAssignment",
															"src": "11554:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11566:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11566:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11577:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11577:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11562:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:16"
																},
																"nativeSrc": "11562:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11562:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11554:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11554:4:16"
																}
															]
														},
														{
															"nativeSrc": "11589:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11589:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11607:3:16",
																				"nodeType": "YulLiteral",
																				"src": "11607:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11612:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11612:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11603:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11603:3:16"
																		},
																		"nativeSrc": "11603:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11603:11:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11616:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11616:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11599:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11599:3:16"
																},
																"nativeSrc": "11599:19:16",
																"nodeType": "YulFunctionCall",
																"src": "11599:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11593:2:16",
																	"nodeType": "YulTypedName",
																	"src": "11593:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11634:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11634:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11649:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11649:6:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11657:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11657:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11645:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:16"
																		},
																		"nativeSrc": "11645:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11645:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11627:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:16"
																},
																"nativeSrc": "11627:34:16",
																"nodeType": "YulFunctionCall",
																"src": "11627:34:16"
															},
															"nativeSrc": "11627:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "11627:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11681:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11681:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11692:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11692:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11677:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11677:3:16"
																		},
																		"nativeSrc": "11677:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11677:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11701:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11701:6:16"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11709:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "11709:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11697:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11697:3:16"
																		},
																		"nativeSrc": "11697:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11697:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11670:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11670:6:16"
																},
																"nativeSrc": "11670:43:16",
																"nodeType": "YulFunctionCall",
																"src": "11670:43:16"
															},
															"nativeSrc": "11670:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "11670:43:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11415:304:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11505:9:16",
														"nodeType": "YulTypedName",
														"src": "11505:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11516:6:16",
														"nodeType": "YulTypedName",
														"src": "11516:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11524:6:16",
														"nodeType": "YulTypedName",
														"src": "11524:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11535:4:16",
														"nodeType": "YulTypedName",
														"src": "11535:4:16",
														"type": ""
													}
												],
												"src": "11415:304:16"
											},
											{
												"body": {
													"nativeSrc": "11937:276:16",
													"nodeType": "YulBlock",
													"src": "11937:276:16",
													"statements": [
														{
															"nativeSrc": "11947:27:16",
															"nodeType": "YulAssignment",
															"src": "11947:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11959:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11959:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11970:3:16",
																		"nodeType": "YulLiteral",
																		"src": "11970:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11955:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11955:3:16"
																},
																"nativeSrc": "11955:19:16",
																"nodeType": "YulFunctionCall",
																"src": "11955:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11947:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11947:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11990:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11990:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12001:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12001:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11983:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11983:6:16"
																},
																"nativeSrc": "11983:25:16",
																"nodeType": "YulFunctionCall",
																"src": "11983:25:16"
															},
															"nativeSrc": "11983:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "11983:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12028:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12028:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12039:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12039:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12024:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12024:3:16"
																		},
																		"nativeSrc": "12024:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12024:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12044:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12044:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12017:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12017:6:16"
																},
																"nativeSrc": "12017:34:16",
																"nodeType": "YulFunctionCall",
																"src": "12017:34:16"
															},
															"nativeSrc": "12017:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "12017:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12071:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12071:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12082:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12082:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12067:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12067:3:16"
																		},
																		"nativeSrc": "12067:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12067:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12087:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12087:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12060:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12060:6:16"
																},
																"nativeSrc": "12060:34:16",
																"nodeType": "YulFunctionCall",
																"src": "12060:34:16"
															},
															"nativeSrc": "12060:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "12060:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12114:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12114:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12125:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12125:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12110:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12110:3:16"
																		},
																		"nativeSrc": "12110:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12110:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "12130:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12130:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12103:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12103:6:16"
																},
																"nativeSrc": "12103:34:16",
																"nodeType": "YulFunctionCall",
																"src": "12103:34:16"
															},
															"nativeSrc": "12103:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "12103:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12157:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12157:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12168:3:16",
																				"nodeType": "YulLiteral",
																				"src": "12168:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12153:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12153:3:16"
																		},
																		"nativeSrc": "12153:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12153:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "12178:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12178:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12194:3:16",
																								"nodeType": "YulLiteral",
																								"src": "12194:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12199:1:16",
																								"nodeType": "YulLiteral",
																								"src": "12199:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12190:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "12190:3:16"
																						},
																						"nativeSrc": "12190:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "12190:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12203:1:16",
																						"nodeType": "YulLiteral",
																						"src": "12203:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12186:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12186:3:16"
																				},
																				"nativeSrc": "12186:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12186:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12174:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:16"
																		},
																		"nativeSrc": "12174:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12146:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12146:6:16"
																},
																"nativeSrc": "12146:61:16",
																"nodeType": "YulFunctionCall",
																"src": "12146:61:16"
															},
															"nativeSrc": "12146:61:16",
															"nodeType": "YulExpressionStatement",
															"src": "12146:61:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "11724:489:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11874:9:16",
														"nodeType": "YulTypedName",
														"src": "11874:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11885:6:16",
														"nodeType": "YulTypedName",
														"src": "11885:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11893:6:16",
														"nodeType": "YulTypedName",
														"src": "11893:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11901:6:16",
														"nodeType": "YulTypedName",
														"src": "11901:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11909:6:16",
														"nodeType": "YulTypedName",
														"src": "11909:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11917:6:16",
														"nodeType": "YulTypedName",
														"src": "11917:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11928:4:16",
														"nodeType": "YulTypedName",
														"src": "11928:4:16",
														"type": ""
													}
												],
												"src": "11724:489:16"
											},
											{
												"body": {
													"nativeSrc": "12399:217:16",
													"nodeType": "YulBlock",
													"src": "12399:217:16",
													"statements": [
														{
															"nativeSrc": "12409:27:16",
															"nodeType": "YulAssignment",
															"src": "12409:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12421:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12421:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12432:3:16",
																		"nodeType": "YulLiteral",
																		"src": "12432:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12417:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12417:3:16"
																},
																"nativeSrc": "12417:19:16",
																"nodeType": "YulFunctionCall",
																"src": "12417:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12409:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12409:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12452:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12452:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12463:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12463:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12445:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12445:6:16"
																},
																"nativeSrc": "12445:25:16",
																"nodeType": "YulFunctionCall",
																"src": "12445:25:16"
															},
															"nativeSrc": "12445:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "12445:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12490:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12490:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12501:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12501:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12486:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12486:3:16"
																		},
																		"nativeSrc": "12486:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12486:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12510:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12510:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12518:4:16",
																				"nodeType": "YulLiteral",
																				"src": "12518:4:16",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12506:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12506:3:16"
																		},
																		"nativeSrc": "12506:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12506:17:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12479:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:16"
																},
																"nativeSrc": "12479:45:16",
																"nodeType": "YulFunctionCall",
																"src": "12479:45:16"
															},
															"nativeSrc": "12479:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "12479:45:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12544:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12544:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12555:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12555:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12540:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12540:3:16"
																		},
																		"nativeSrc": "12540:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12540:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12560:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12560:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12533:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12533:6:16"
																},
																"nativeSrc": "12533:34:16",
																"nodeType": "YulFunctionCall",
																"src": "12533:34:16"
															},
															"nativeSrc": "12533:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "12533:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12587:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12587:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12598:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12598:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12583:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12583:3:16"
																		},
																		"nativeSrc": "12583:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12583:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "12603:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12603:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12576:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12576:6:16"
																},
																"nativeSrc": "12576:34:16",
																"nodeType": "YulFunctionCall",
																"src": "12576:34:16"
															},
															"nativeSrc": "12576:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "12576:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "12218:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12344:9:16",
														"nodeType": "YulTypedName",
														"src": "12344:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12355:6:16",
														"nodeType": "YulTypedName",
														"src": "12355:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12363:6:16",
														"nodeType": "YulTypedName",
														"src": "12363:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12371:6:16",
														"nodeType": "YulTypedName",
														"src": "12371:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12379:6:16",
														"nodeType": "YulTypedName",
														"src": "12379:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12390:4:16",
														"nodeType": "YulTypedName",
														"src": "12390:4:16",
														"type": ""
													}
												],
												"src": "12218:398:16"
											},
											{
												"body": {
													"nativeSrc": "12653:95:16",
													"nodeType": "YulBlock",
													"src": "12653:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12670:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12670:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12677:3:16",
																				"nodeType": "YulLiteral",
																				"src": "12677:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12682:10:16",
																				"nodeType": "YulLiteral",
																				"src": "12682:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12673:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12673:3:16"
																		},
																		"nativeSrc": "12673:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12673:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12663:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12663:6:16"
																},
																"nativeSrc": "12663:31:16",
																"nodeType": "YulFunctionCall",
																"src": "12663:31:16"
															},
															"nativeSrc": "12663:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "12663:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12710:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12710:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12713:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12713:4:16",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12703:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:16"
																},
																"nativeSrc": "12703:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12703:15:16"
															},
															"nativeSrc": "12703:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12703:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12734:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12734:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12737:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12737:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12727:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12727:6:16"
																},
																"nativeSrc": "12727:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12727:15:16"
															},
															"nativeSrc": "12727:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12727:15:16"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "12621:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "12621:127:16"
											},
											{
												"body": {
													"nativeSrc": "12890:150:16",
													"nodeType": "YulBlock",
													"src": "12890:150:16",
													"statements": [
														{
															"nativeSrc": "12900:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12900:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12920:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12920:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12914:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "12914:5:16"
																},
																"nativeSrc": "12914:13:16",
																"nodeType": "YulFunctionCall",
																"src": "12914:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12904:6:16",
																	"nodeType": "YulTypedName",
																	"src": "12904:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12975:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12975:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12983:4:16",
																				"nodeType": "YulLiteral",
																				"src": "12983:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12971:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12971:3:16"
																		},
																		"nativeSrc": "12971:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12971:17:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12990:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12990:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12995:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12995:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12936:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "12936:34:16"
																},
																"nativeSrc": "12936:66:16",
																"nodeType": "YulFunctionCall",
																"src": "12936:66:16"
															},
															"nativeSrc": "12936:66:16",
															"nodeType": "YulExpressionStatement",
															"src": "12936:66:16"
														},
														{
															"nativeSrc": "13011:23:16",
															"nodeType": "YulAssignment",
															"src": "13011:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13022:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13022:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13027:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13027:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13018:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13018:3:16"
																},
																"nativeSrc": "13018:16:16",
																"nodeType": "YulFunctionCall",
																"src": "13018:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13011:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13011:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12753:287:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12866:3:16",
														"nodeType": "YulTypedName",
														"src": "12866:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12871:6:16",
														"nodeType": "YulTypedName",
														"src": "12871:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12882:3:16",
														"nodeType": "YulTypedName",
														"src": "12882:3:16",
														"type": ""
													}
												],
												"src": "12753:287:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_uint8(value)\n        value3 := value\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"you are sending to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_4d76893c2f0238fd9c77950c3a3abca4482a5081e88db2e94ed7f1a183b26a26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"no new deposit added\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b379c917a4dc8c3898738d13abfa21e18194ad28cbafadbd6c44246f20237637__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"cant send zero amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7b0277e6454e2ac2e31447966d5418245e63192c6d388fa86142f5bb21c10bb6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"contract freezed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5c76f5dbf815a0d4a0a69b2459d6d3337e979ed437973377d86ebb8708773a32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"points to swap less than minpoin\")\n        mstore(add(headStart, 96), \"ts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_caec8756a40efc76a36098b7e1250a0625590caab7950a2b4ad5e46b24f6665d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"sig used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1810": [
									{
										"length": 32,
										"start": 2775
									}
								],
								"1812": [
									{
										"length": 32,
										"start": 2733
									}
								],
								"1814": [
									{
										"length": 32,
										"start": 2691
									}
								],
								"1816": [
									{
										"length": 32,
										"start": 2856
									}
								],
								"1818": [
									{
										"length": 32,
										"start": 2896
									}
								],
								"1821": [
									{
										"length": 32,
										"start": 3062
									}
								],
								"1824": [
									{
										"length": 32,
										"start": 3107
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610187575f3560e01c80638bc7e8c4116100d9578063cbeacb8011610093578063f2fde38b1161006e578063f2fde38b1461031c578063f851a4401461032f578063f9c3a1e814610342578063fd91871614610355575f80fd5b8063cbeacb80146102ed578063e1fefd4214610300578063e63ea40814610309575f80fd5b80638bc7e8c41461027e5780638da5cb5b146102875780639683cdc4146102ab578063ac1e5025146102be578063c08e7286146102d1578063c4a9e858146102e4575f80fd5b80633644e51511610144578063704b6c021161011f578063704b6c0214610235578063715018a61461024857806376ee947f1461025057806384b0196e14610263575f80fd5b80633644e5151461021157806367a52793146102195780636b4c078914610222575f80fd5b806306e0e5821461018b5780630ace9ca0146101a75780630d461e61146101bc578063252de51b146101cf5780632c4e722e146101f357806334fcf437146101fc575b5f80fd5b61019460095481565b6040519081526020015b60405180910390f35b6101af61035e565b60405161019e919061132c565b6101946101ca36600461133e565b6103ea565b600d546101e390600160a01b900460ff1681565b604051901515815260200161019e565b61019460065481565b61020f61020a36600461133e565b6104a7565b005b6101946104b4565b61019460055481565b61020f610230366004611362565b6104c2565b61020f610243366004611398565b6104e8565b61020f610512565b61020f61025e36600461133e565b610525565b61026b610532565b60405161019e97969594939291906113b1565b61019460075481565b5f546001600160a01b03165b6040516001600160a01b03909116815260200161019e565b61020f6102b9366004611398565b610574565b61020f6102cc36600461133e565b6106ef565b61020f6102df36600461133e565b6106fc565b610194600b5481565b61020f6102fb366004611398565b61071c565b61019460085481565b61020f610317366004611448565b610750565b61020f61032a366004611398565b61085b565b600d54610293906001600160a01b031681565b61020f61035036600461148f565b610898565b610194600a5481565b600c805461036b906114e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610397906114e5565b80156103e25780601f106103b9576101008083540402835291602001916103e2565b820191905f5260205f20905b8154815290600101906020018083116103c557829003601f168201915b505050505081565b5f80600654670de0b6b3a76400006104029190611531565b60035f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610452573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104769190611548565b61048190600a611643565b61048c856001611531565b6104969190611531565b6104a09190611651565b9392505050565b6104af610a4b565b600655565b5f6104bd610a77565b905090565b6104ca610a4b565b600d8054911515600160a01b0260ff60a01b19909216919091179055565b6104f0610a4b565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b61051a610a4b565b6105235f610ba0565b565b61052d610a4b565b600555565b5f6060805f805f6060610543610bef565b61054b610c1c565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b61057c610a4b565b6001600160a01b0381166105ab5760405162461bcd60e51b81526004016105a290611670565b60405180910390fd5b6003546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105f1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061591906116a7565b90505f600954600b54600a548461062c91906116be565b61063691906116be565b61064091906116d1565b90508060095f82825461065391906116be565b90915550506005545f9060649061066a9084611531565b6106749190611651565b90505f81116106bc5760405162461bcd60e51b81526020600482015260146024820152731b9bc81b995dc819195c1bdcda5d08185919195960621b60448201526064016105a2565b80600b5f8282546106cd91906116be565b90915550506004546106e9906001600160a01b03168583610c49565b50505050565b6106f7610a4b565b600755565b610704610a4b565b61071681670de0b6b3a7640000611531565b60085550565b610724610a4b565b600380546001600160a01b039092166001600160a01b0319928316811790915560048054909216179055565b610758610a4b565b6001600160a01b03831661077e5760405162461bcd60e51b81526004016105a290611670565b6001600160a01b0382166107a45760405162461bcd60e51b81526004016105a290611670565b5f81116107eb5760405162461bcd60e51b815260206004820152601560248201527418d85b9d081cd95b99081e995c9bc8185b5bdd5b9d605a1b60448201526064016105a2565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af1158015610837573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e991906116e4565b610863610a4b565b6001600160a01b03811661088c57604051631e4fbdf760e01b81525f60048201526024016105a2565b61089581610ba0565b50565b6001600160a01b0386166108be5760405162461bcd60e51b81526004016105a290611670565b6108cc868686868686610ca0565b600d54600160a01b900460ff16156109195760405162461bcd60e51b815260206004820152601060248201526f18dbdb9d1c9858dd08199c99595e995960821b60448201526064016105a2565b6008548510156109765760405162461bcd60e51b815260206004820152602260248201527f706f696e747320746f2073776170206c657373207468616e206d696e706f696e604482015261747360f01b60648201526084016105a2565b5f610980866103ea565b905080600a5f82825461099391906116be565b90915550506007545f906064906109aa9084611531565b6109b49190611651565b90505f6109c182846116d1565b6004549091506109db906001600160a01b03168a83610c49565b6004546109f2906001600160a01b03163384610c49565b604080518981526020810183905290810183905242906001600160a01b038b16907f9a5f60e59cc27a7c25a7f78275c910454cd9adacb21cecff527c98ed63e028779060600160405180910390a3505050505050505050565b5f546001600160a01b031633146105235760405163118cdaa760e01b81523360048201526024016105a2565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610acf57507f000000000000000000000000000000000000000000000000000000000000000046145b15610af957507f000000000000000000000000000000000000000000000000000000000000000090565b6104bd604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606104bd7f00000000000000000000000000000000000000000000000000000000000000006001610e68565b60606104bd7f00000000000000000000000000000000000000000000000000000000000000006002610e68565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c9b908490610f13565b505050565b60ff8084165f908152600e6020526040902054161580610cce57505f828152600f602052604090205460ff16155b80610ce757505f8181526010602052604090205460ff16155b610d1e5760405162461bcd60e51b81526020600482015260086024820152671cda59c81d5cd95960c21b60448201526064016105a2565b83421115610d425760405163313c898160e11b8152600481018590526024016105a2565b600d54604080517f05619a74ecd0240afc3bfb1df2bd1319401220fb577809c3a09bf0ab809ac86160208201526001600160a01b039283169181019190915290871660608201526080810186905260a081018590525f9060c0016040516020818303038152906040528051906020012090505f610dbe82610f74565b90505f610dcd82878787610fa0565b600d549091506001600160a01b03808316911614610e1557600d546040516325c0072360e11b81526001600160a01b03808416600483015290911660248201526044016105a2565b50505060ff9092165f908152600e60209081526040808320805460ff199081166001908117909255948452600f835281842080548616821790559483526010909152902080549091169091179055505050565b606060ff8314610e8257610e7b83610fcc565b9050610f0d565b818054610e8e906114e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610eba906114e5565b8015610f055780601f10610edc57610100808354040283529160200191610f05565b820191905f5260205f20905b815481529060010190602001808311610ee857829003601f168201915b505050505090505b92915050565b5f610f276001600160a01b03841683611009565b905080515f14158015610f4b575080806020019051810190610f4991906116e4565b155b15610c9b57604051635274afe760e01b81526001600160a01b03841660048201526024016105a2565b5f610f0d610f80610a77565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f80610fb088888888611016565b925092509250610fc082826110de565b50909695505050505050565b60605f610fd88361119a565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b60606104a083835f6111c1565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561104f57505f915060039050826110d4565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156110a0573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166110cb57505f9250600191508290506110d4565b92505f91508190505b9450945094915050565b5f8260038111156110f1576110f16116ff565b036110fa575050565b600182600381111561110e5761110e6116ff565b0361112c5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611140576111406116ff565b036111615760405163fce698f760e01b8152600481018290526024016105a2565b6003826003811115611175576111756116ff565b03611196576040516335e2f38360e21b8152600481018290526024016105a2565b5050565b5f60ff8216601f811115610f0d57604051632cd44ac360e21b815260040160405180910390fd5b6060814710156111e65760405163cd78605960e01b81523060048201526024016105a2565b5f80856001600160a01b031684866040516112019190611713565b5f6040518083038185875af1925050503d805f811461123b576040519150601f19603f3d011682016040523d82523d5f602084013e611240565b606091505b509150915061125086838361125a565b9695505050505050565b60608261126f5761126a826112b6565b6104a0565b815115801561128657506001600160a01b0384163b155b156112af57604051639996b31560e01b81526001600160a01b03851660048201526024016105a2565b50806104a0565b8051156112c65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f5b838110156112f95781810151838201526020016112e1565b50505f910152565b5f81518084526113188160208601602086016112df565b601f01601f19169290920160200192915050565b602081525f6104a06020830184611301565b5f6020828403121561134e575f80fd5b5035919050565b8015158114610895575f80fd5b5f60208284031215611372575f80fd5b81356104a081611355565b80356001600160a01b0381168114611393575f80fd5b919050565b5f602082840312156113a8575f80fd5b6104a08261137d565b60ff60f81b881681525f602060e060208401526113d160e084018a611301565b83810360408501526113e3818a611301565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b818110156114365783518352928401929184019160010161141a565b50909c9b505050505050505050505050565b5f805f6060848603121561145a575f80fd5b6114638461137d565b92506114716020850161137d565b9150604084013590509250925092565b60ff81168114610895575f80fd5b5f805f805f8060c087890312156114a4575f80fd5b6114ad8761137d565b9550602087013594506040870135935060608701356114cb81611481565b9598949750929560808101359460a0909101359350915050565b600181811c908216806114f957607f821691505b60208210810361151757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610f0d57610f0d61151d565b5f60208284031215611558575f80fd5b81516104a081611481565b600181815b8085111561159d57815f19048211156115835761158361151d565b8085161561159057918102915b93841c9390800290611568565b509250929050565b5f826115b357506001610f0d565b816115bf57505f610f0d565b81600181146115d557600281146115df576115fb565b6001915050610f0d565b60ff8411156115f0576115f061151d565b50506001821b610f0d565b5060208310610133831016604e8410600b841016171561161e575081810a610f0d565b6116288383611563565b805f190482111561163b5761163b61151d565b029392505050565b5f6104a060ff8416836115a5565b5f8261166b57634e487b7160e01b5f52601260045260245ffd5b500490565b6020808252601f908201527f796f75206172652073656e64696e6720746f207a65726f206164647265737300604082015260600190565b5f602082840312156116b7575f80fd5b5051919050565b80820180821115610f0d57610f0d61151d565b81810381811115610f0d57610f0d61151d565b5f602082840312156116f4575f80fd5b81516104a081611355565b634e487b7160e01b5f52602160045260245ffd5b5f82516117248184602087016112df565b919091019291505056fea2646970667358221220200b4ce79d87c1aec0797c58112fa52c8f87218bedf4b4598d52c0cc4b05dcdd64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x187 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BC7E8C4 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xCBEACB80 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xF9C3A1E8 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xFD918716 EQ PUSH2 0x355 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBEACB80 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xE1FEFD42 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xE63EA408 EQ PUSH2 0x309 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x9683CDC4 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xC08E7286 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC4A9E858 EQ PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x704B6C02 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x76EE947F EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x67A52793 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x6B4C0789 EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E0E582 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xACE9CA0 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xD461E61 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x252DE51B EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x1FC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x194 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x132C JUMP JUMPDEST PUSH2 0x194 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x194 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x194 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x512 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x194 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x194 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH2 0x194 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x293 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST PUSH2 0x194 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x36B SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x397 SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x452 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x481 SWAP1 PUSH1 0xA PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x48C DUP6 PUSH1 0x1 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x4BD PUSH2 0xA77 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4CA PUSH2 0xA4B JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x51A PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x523 PUSH0 PUSH2 0xBA0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x52D PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x543 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x54B PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD DUP5 PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x66A SWAP1 DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B9BC81B995DC819195C1BDCDA5D081859191959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH2 0x6E9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 PUSH2 0xC49 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x704 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH2 0x724 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x758 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x18D85B9D081CD95B99081E995C9BC8185B5BDD5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x837 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x863 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH2 0x895 DUP2 PUSH2 0xBA0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x8CC DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x18DBDB9D1C9858DD08199C99595E9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP6 LT ISZERO PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F696E747320746F2073776170206C657373207468616E206D696E706F696E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 PUSH2 0x980 DUP7 PUSH2 0x3EA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x9AA SWAP1 DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 DUP3 DUP5 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x9DB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP4 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x9F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH32 0x9A5F60E59CC27A7C25A7F78275C910454CD9ADACB21CECFF527C98ED63E02877 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xACF JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAF9 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4BD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BD PUSH32 0x0 PUSH1 0x1 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4BD PUSH32 0x0 PUSH1 0x2 PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC9B SWAP1 DUP5 SWAP1 PUSH2 0xF13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0xCCE JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0xCE7 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x1CDA59C81D5CD959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A2 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x5619A74ECD0240AFC3BFB1DF2BD1319401220FB577809C3A09BF0AB809AC861 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0xDBE DUP3 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDCD DUP3 DUP8 DUP8 DUP8 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0xE15 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x5A2 JUMP JUMPDEST POP POP POP PUSH1 0xFF SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP5 DUP5 MSTORE PUSH1 0xF DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE SWAP5 DUP4 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xE82 JUMPI PUSH2 0xE7B DUP4 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP PUSH2 0xF0D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xE8E SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEBA SWAP1 PUSH2 0x14E5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF05 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF05 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF27 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 PUSH2 0xF0D PUSH2 0xF80 PUSH2 0xA77 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xFB0 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1016 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xFC0 DUP3 DUP3 PUSH2 0x10DE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xFD8 DUP4 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4A0 DUP4 DUP4 PUSH0 PUSH2 0x11C1 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x104F JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10CB JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10F1 JUMPI PUSH2 0x10F1 PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x10FA JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x110E JUMPI PUSH2 0x110E PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1140 JUMPI PUSH2 0x1140 PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1175 PUSH2 0x16FF JUMP JUMPDEST SUB PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1201 SWAP2 SWAP1 PUSH2 0x1713 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x123B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1250 DUP7 DUP4 DUP4 PUSH2 0x125A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x126F JUMPI PUSH2 0x126A DUP3 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1286 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5A2 JUMP JUMPDEST POP DUP1 PUSH2 0x4A0 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x12C6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12E1 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1318 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x4A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1301 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x895 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1372 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4A0 DUP2 PUSH2 0x1355 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1393 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A0 DUP3 PUSH2 0x137D JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x13D1 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1301 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x13E3 DUP2 DUP11 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1436 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x141A JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x145A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1463 DUP5 PUSH2 0x137D JUMP JUMPDEST SWAP3 POP PUSH2 0x1471 PUSH1 0x20 DUP6 ADD PUSH2 0x137D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x895 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14AD DUP8 PUSH2 0x137D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x14CB DUP2 PUSH2 0x1481 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1517 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF0D JUMPI PUSH2 0xF0D PUSH2 0x151D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1558 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4A0 DUP2 PUSH2 0x1481 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x159D JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x151D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1590 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1568 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15B3 JUMPI POP PUSH1 0x1 PUSH2 0xF0D JUMP JUMPDEST DUP2 PUSH2 0x15BF JUMPI POP PUSH0 PUSH2 0xF0D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15D5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15DF JUMPI PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF0D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15F0 JUMPI PUSH2 0x15F0 PUSH2 0x151D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xF0D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x161E JUMPI POP DUP2 DUP2 EXP PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1628 DUP4 DUP4 PUSH2 0x1563 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x163B JUMPI PUSH2 0x163B PUSH2 0x151D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A0 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x15A5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x166B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x796F75206172652073656E64696E6720746F207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF0D JUMPI PUSH2 0xF0D PUSH2 0x151D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xF0D JUMPI PUSH2 0xF0D PUSH2 0x151D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4A0 DUP2 PUSH2 0x1355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1724 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x12DF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SIGNEXTEND 0x4C 0xE7 SWAP14 DUP8 0xC1 0xAE 0xC0 PUSH26 0x7C58112FA52C8F87218BEDF4B4598D52C0CC4B05DCDD64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "650:7898:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:42;;;;;;;;;160:25:16;;;148:2;133:18;1322:42:15;;;;;;;;1456:23;;;:::i;:::-;;;;;;;:::i;3064:202::-;;;;;;:::i;:::-;;:::i;1513:24::-;;;;;-1:-1:-1;;;1513:24:15;;;;;;;;;1302:14:16;;1295:22;1277:41;;1265:2;1250:18;1513:24:15;1137:187:16;1239:16:15;;;;;;4372:76;;;;;;:::i;:::-;;:::i;:::-;;3278:114;;;:::i;1210:22::-;;;;;;4839:91;;;;;;:::i;:::-;;:::i;3648:79::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;4082:92:15:-;;;;;;:::i;:::-;;:::i;5144:557:11:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1262:25:15:-;;;;;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;3677:32:16;;;3659:51;;3647:2;3632:18;1638:85:0;3513:203:16;5170:631:15;;;;;;:::i;:::-;;:::i;4232:90::-;;;;;;:::i;:::-;;:::i;4597:109::-;;;;;;:::i;:::-;;:::i;1408:41::-;;;;;;3835:192;;;;;;:::i;:::-;;:::i;1294:21::-;;;;;;7039:361;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1486:20:15:-;;;;;-1:-1:-1;;;;;1486:20:15;;;6032:894;;;;;;:::i;:::-;;:::i;1371:30::-;;;;;;1456:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3064:202::-;3130:4;3148:10;3209:4;;3214:6;3209:11;;;;:::i;:::-;3182:13;;;;;;;;;-1:-1:-1;;;;;3182:13:15;-1:-1:-1;;;;;3182:22:15;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3178:28;;:2;:28;:::i;:::-;3162:15;:11;3176:1;3162:15;:::i;:::-;:44;;;;:::i;:::-;3161:60;;;;:::i;:::-;3148:73;3064:202;-1:-1:-1;;;3064:202:15:o;4372:76::-;1531:13:0;:11;:13::i;:::-;4428:4:15::1;:12:::0;4372:76::o;3278:114::-;3337:7;3364:20;:18;:20::i;:::-;3357:27;;3278:114;:::o;4839:91::-;1531:13:0;:11;:13::i;:::-;4900:12:15::1;:22:::0;;;::::1;;-1:-1:-1::0;;;4900:22:15::1;-1:-1:-1::0;;;;4900:22:15;;::::1;::::0;;;::::1;::::0;;4839:91::o;3648:79::-;1531:13:0;:11;:13::i;:::-;3706:5:15::1;:13:::0;;-1:-1:-1;;;;;;3706:13:15::1;-1:-1:-1::0;;;;;3706:13:15;;;::::1;::::0;;;::::1;::::0;;3648:79::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4082:92:15:-;1531:13:0;:11;:13::i;:::-;4149:10:15::1;:17:::0;4082:92::o;5144:557:11:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:11;;;-1:-1:-1;5482:212:11;;-1:-1:-1;5590:13:11;;-1:-1:-1;5625:4:11;;-1:-1:-1;5652:1:11;-1:-1:-1;5668:16:11;-1:-1:-1;5482:212:11;-1:-1:-1;5144:557:11:o;5170:631:15:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5251:29:15;::::1;5243:72;;;;-1:-1:-1::0;;;5243:72:15::1;;;;;;;:::i;:::-;;;;;;;;;5347:13;::::0;:38:::1;::::0;-1:-1:-1;;;5347:38:15;;5379:4:::1;5347:38;::::0;::::1;3659:51:16::0;5325:20:15::1;::::0;-1:-1:-1;;;;;5347:13:15::1;::::0;:23:::1;::::0;3632:18:16;;5347:38:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5325:60;;5395:21;5492:30;;5459:29;;5438:18;;5420:15;:36;;;;:::i;:::-;:68;;;;:::i;:::-;5419:103;;;;:::i;:::-;5395:127;;5566:16;5532:30;;:50;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5622:10:15::1;::::0;5592:9:::1;::::0;5634:3:::1;::::0;5605:27:::1;::::0;:16;:27:::1;:::i;:::-;5604:33;;;;:::i;:::-;5592:45;;5662:1;5655:4;:8;5647:40;;;::::0;-1:-1:-1;;;5647:40:15;;8457:2:16;5647:40:15::1;::::0;::::1;8439:21:16::0;8496:2;8476:18;;;8469:30;-1:-1:-1;;;8515:18:16;;;8508:50;8575:18;;5647:40:15::1;8255:344:16::0;5647:40:15::1;5730:4;5697:29;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5744:14:15::1;::::0;:49:::1;::::0;-1:-1:-1;;;;;5744:14:15::1;5772:15:::0;5788:4;5744:27:::1;:49::i;:::-;5233:568;;;5170:631:::0;:::o;4232:90::-;1531:13:0;:11;:13::i;:::-;4294::15::1;:20:::0;4232:90::o;4597:109::-;1531:13:0;:11;:13::i;:::-;4681:17:15::1;:10:::0;4692:6:::1;4681:17;:::i;:::-;4669:9;:29:::0;-1:-1:-1;4597:109:15:o;3835:192::-;1531:13:0;:11;:13::i;:::-;3918::15::1;:39:::0;;-1:-1:-1;;;;;3918:39:15;;::::1;-1:-1:-1::0;;;;;;3918:39:15;;::::1;::::0;::::1;::::0;;;3967:14:::1;:39:::0;;;;::::1;;::::0;;3835:192::o;7039:361::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;7149:27:15;::::1;7141:70;;;;-1:-1:-1::0;;;7141:70:15::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7230:17:15;::::1;7222:60;;;;-1:-1:-1::0;;;7222:60:15::1;;;;;;;:::i;:::-;7311:1;7301:7;:11;7293:44;;;::::0;-1:-1:-1;;;7293:44:15;;8806:2:16;7293:44:15::1;::::0;::::1;8788:21:16::0;8845:2;8825:18;;;8818:30;-1:-1:-1;;;8864:18:16;;;8857:51;8925:18;;7293:44:15::1;8604:345:16::0;7293:44:15::1;7348;::::0;-1:-1:-1;;;7348:44:15;;-1:-1:-1;;;;;9146:32:16;;;7348:44:15::1;::::0;::::1;9128:51:16::0;9195:18;;;9188:34;;;7348:31:15;::::1;::::0;::::1;::::0;9101:18:16;;7348:44:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2543:215:0:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3659:51:16::0;3632:18;;2672:31:0::1;3513:203:16::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;6032:894:15:-;-1:-1:-1;;;;;6166:18:15;;6158:61;;;;-1:-1:-1;;;6158:61:15;;;;;;;:::i;:::-;6230:40;6238:4;6243:11;6255:8;6264:1;6266;6268;6230:7;:40::i;:::-;6289:12;;-1:-1:-1;;;6289:12:15;;;;:19;6281:47;;;;-1:-1:-1;;;6281:47:15;;9685:2:16;6281:47:15;;;9667:21:16;9724:2;9704:18;;;9697:30;-1:-1:-1;;;9743:18:16;;;9736:46;9799:18;;6281:47:15;9483:340:16;6281:47:15;6447:9;;6432:11;:24;;6424:70;;;;-1:-1:-1;;;6424:70:15;;10030:2:16;6424:70:15;;;10012:21:16;10069:2;10049:18;;;10042:30;10108:34;10088:18;;;10081:62;-1:-1:-1;;;10159:18:16;;;10152:32;10201:19;;6424:70:15;9828:398:16;6424:70:15;6505:11;6519:32;6539:11;6519:19;:32::i;:::-;6505:46;;6584:6;6562:18;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;6621:13:15;;6601:9;;6636:3;;6614:20;;:6;:20;:::i;:::-;6613:26;;;;:::i;:::-;6601:38;-1:-1:-1;6650:18:15;6671:12;6601:38;6671:6;:12;:::i;:::-;6743:14;;6650:33;;-1:-1:-1;6743:47:15;;-1:-1:-1;;;;;6743:14:15;6771:4;6650:33;6743:27;:47::i;:::-;6801:14;;:44;;-1:-1:-1;;;;;6801:14:15;6829:10;6840:4;6801:27;:44::i;:::-;6861:57;;;10433:25:16;;;10489:2;10474:18;;10467:34;;;10517:18;;;10510:34;;;6871:15:15;;-1:-1:-1;;;;;6861:57:15;;;;;10421:2:16;10406:18;6861:57:15;;;;;;;6147:779;;;6032:894;;;;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;3659:51:16;3632:18;;1901:40:0;3513:203:16;3845:262:11;3898:7;3929:4;-1:-1:-1;;;;;3938:11:11;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:11;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;11983:25:16;4226:11:11;12024:18:16;;;12017:34;;;;4239:14:11;12067:18:16;;;12060:34;4255:13:11;12110:18:16;;;12103:34;4278:4:11;12153:19:16;;;12146:61;4168:7:11;;11955:19:16;;4204:80:11;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;6021:126:11:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;1303:160:4:-;1412:43;;;-1:-1:-1;;;;;9146:32:16;;1412:43:4;;;9128:51:16;9195:18;;;;9188:34;;;1412:43:4;;;;;;;;;;9101:18:16;;;;1412:43:4;;;;;;;;-1:-1:-1;;;;;1412:43:4;-1:-1:-1;;;1412:43:4;;;1385:71;;1405:5;;1385:19;:71::i;:::-;1303:160;;;:::o;7701:841:15:-;7969:8;;;;;;;;:5;:8;;;;;;;:15;;:36;;-1:-1:-1;7988:8:15;;;;:5;:8;;;;;;;;:17;7969:36;:55;;;-1:-1:-1;8009:8:15;;;;:5;:8;;;;;;;;:15;7969:55;7961:75;;;;-1:-1:-1;;;7961:75:15;;10757:2:16;7961:75:15;;;10739:21:16;10796:1;10776:18;;;10769:29;-1:-1:-1;;;10814:18:16;;;10807:38;10862:18;;7961:75:15;10555:331:16;7961:75:15;8069:8;8051:15;:26;8047:99;;;8101:33;;-1:-1:-1;;;8101:33:15;;;;;160:25:16;;;133:18;;8101:33:15;14:177:16;8047:99:15;8215:5;;8187:57;;;765:81;8187:57;;;11150:25:16;-1:-1:-1;;;;;8215:5:15;;;11229:18:16;;;11222:43;;;;11301:15;;;11281:18;;;11274:43;11333:18;;;11326:34;;;11376:19;;;11369:35;;;8156:18:15;;11122:19:16;;8187:57:15;;;;;;;;;;;;8177:68;;;;;;8156:89;;8257:12;8272:28;8289:10;8272:16;:28::i;:::-;8257:43;;8313:14;8330:28;8344:4;8350:1;8353;8356;8330:13;:28::i;:::-;8383:5;;8313:45;;-1:-1:-1;;;;;;8373:15:15;;;8383:5;;8373:15;8369:90;;8441:5;;8412:35;;-1:-1:-1;;;8412:35:15;;-1:-1:-1;;;;;11645:15:16;;;8412:35:15;;;11627:34:16;8441:5:15;;;11677:18:16;;;11670:43;11562:18;;8412:35:15;11415:304:16;8369:90:15;-1:-1:-1;;;8469:8:15;;;;;;;;:5;:8;;;;;;;;:13;;-1:-1:-1;;8469:13:15;;;8478:4;8469:13;;;;;;8493:8;;;:5;:8;;;;;:13;;;;;;;;8517:8;;;:5;:8;;;;;:13;;;;;;;;;;-1:-1:-1;;;7701:841:15:o;3385:267:7:-;3479:13;1390:66;3508:46;;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:142;3385:267;;;;:::o;4059:629:4:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:4;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:4;;-1:-1:-1;;;;;3677:32:16;;4631:40:4;;;3659:51:16;3632:18;;4631:40:4;3513:203:16;4917:176:11;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3555:4:12;3549:11;-1:-1:-1;;;3573:23:12;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;6803:260:10;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;-1:-1:-1;7047:9:10;;6803:260;-1:-1:-1;;;;;;6803:260:10:o;2078:405:7:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:7;;2300:14;;;;;;;;;-1:-1:-1;;;2390:16:7;;;-1:-1:-1;2435:4:7;2426:14;;2419:28;;;;-1:-1:-1;2390:16:7;2078:405::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;5140:1530:10:-;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:10;;-1:-1:-1;6301:30:10;;-1:-1:-1;6333:1:10;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;12445:25:16;;;12518:4;12506:17;;12486:18;;;12479:45;;;;12540:18;;;12533:34;;;12583:18;;;12576:34;;;6457:24:10;;12417:19:16;;6457:24:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:10;;-1:-1:-1;;6457:24:10;;;-1:-1:-1;;;;;;;6495:20:10;;6491:113;;-1:-1:-1;6547:1:10;;-1:-1:-1;6551:29:10;;-1:-1:-1;6547:1:10;;-1:-1:-1;6531:62:10;;6491:113;6622:6;-1:-1:-1;6630:20:10;;-1:-1:-1;6630:20:10;;-1:-1:-1;5140:1530:10;;;;;;;;;:::o;7196:532::-;7291:20;7282:5;:29;;;;;;;;:::i;:::-;;7278:444;;7196:532;;:::o;7278:444::-;7387:29;7378:5;:38;;;;;;;;:::i;:::-;;7374:348;;7439:23;;-1:-1:-1;;;7439:23:10;;;;;;;;;;;7374:348;7492:35;7483:5;:44;;;;;;;;:::i;:::-;;7479:243;;7550:46;;-1:-1:-1;;;7550:46:10;;;;;160:25:16;;;133:18;;7550:46:10;14:177:16;7479:243:10;7626:30;7617:5;:39;;;;;;;;:::i;:::-;;7613:109;;7679:32;;-1:-1:-1;;;7679:32:10;;;;;160:25:16;;;133:18;;7679:32:10;14:177:16;7613:109:10;7196:532;;:::o;2555:245:7:-;2616:7;2688:4;2652:40;;2715:2;2706:11;;2702:69;;;2740:20;;-1:-1:-1;;;2740:20:7;;;;;;;;;;;3180:392:5;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:5;;3394:4;3359:41;;;3659:51:16;3632:18;;3359:41:5;3513:203:16;3303:108:5;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:5;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:5:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:5;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:5;;-1:-1:-1;;;;;3677:32:16;;5121:24:5;;;3659:51:16;3632:18;;5121:24:5;3513:203:16;5041:119:5;-1:-1:-1;5180:10:5;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:5;;;;;;;;;;;196:250:16;281:1;291:113;305:6;302:1;299:13;291:113;;;381:11;;;375:18;362:11;;;355:39;327:2;320:10;291:113;;;-1:-1:-1;;438:1:16;420:16;;413:27;196:250::o;451:271::-;493:3;531:5;525:12;558:6;553:3;546:19;574:76;643:6;636:4;631:3;627:14;620:4;613:5;609:16;574:76;:::i;:::-;704:2;683:15;-1:-1:-1;;679:29:16;670:39;;;;711:4;666:50;;451:271;-1:-1:-1;;451:271:16:o;727:220::-;876:2;865:9;858:21;839:4;896:45;937:2;926:9;922:18;914:6;896:45;:::i;952:180::-;1011:6;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;-1:-1:-1;1103:23:16;;952:180;-1:-1:-1;952:180:16:o;1511:118::-;1597:5;1590:13;1583:21;1576:5;1573:32;1563:60;;1619:1;1616;1609:12;1634:241;1690:6;1743:2;1731:9;1722:7;1718:23;1714:32;1711:52;;;1759:1;1756;1749:12;1711:52;1798:9;1785:23;1817:28;1839:5;1817:28;:::i;1880:173::-;1948:20;;-1:-1:-1;;;;;1997:31:16;;1987:42;;1977:70;;2043:1;2040;2033:12;1977:70;1880:173;;;:::o;2058:186::-;2117:6;2170:2;2158:9;2149:7;2145:23;2141:32;2138:52;;;2186:1;2183;2176:12;2138:52;2209:29;2228:9;2209:29;:::i;2249:1259::-;2655:3;2650;2646:13;2638:6;2634:26;2623:9;2616:45;2597:4;2680:2;2718:3;2713:2;2702:9;2698:18;2691:31;2745:46;2786:3;2775:9;2771:19;2763:6;2745:46;:::i;:::-;2839:9;2831:6;2827:22;2822:2;2811:9;2807:18;2800:50;2873:33;2899:6;2891;2873:33;:::i;:::-;2937:2;2922:18;;2915:34;;;-1:-1:-1;;;;;2986:32:16;;2980:3;2965:19;;2958:61;3006:3;3035:19;;3028:35;;;3100:22;;;3094:3;3079:19;;3072:51;3172:13;;3194:22;;;3244:2;3270:15;;;;-1:-1:-1;3232:15:16;;;;-1:-1:-1;3313:169:16;3327:6;3324:1;3321:13;3313:169;;;3388:13;;3376:26;;3457:15;;;;3422:12;;;;3349:1;3342:9;3313:169;;;-1:-1:-1;3499:3:16;;2249:1259;-1:-1:-1;;;;;;;;;;;;2249:1259:16:o;3721:328::-;3798:6;3806;3814;3867:2;3855:9;3846:7;3842:23;3838:32;3835:52;;;3883:1;3880;3873:12;3835:52;3906:29;3925:9;3906:29;:::i;:::-;3896:39;;3954:38;3988:2;3977:9;3973:18;3954:38;:::i;:::-;3944:48;;4039:2;4028:9;4024:18;4011:32;4001:42;;3721:328;;;;;:::o;4054:114::-;4138:4;4131:5;4127:16;4120:5;4117:27;4107:55;;4158:1;4155;4148:12;4173:592;4275:6;4283;4291;4299;4307;4315;4368:3;4356:9;4347:7;4343:23;4339:33;4336:53;;;4385:1;4382;4375:12;4336:53;4408:29;4427:9;4408:29;:::i;:::-;4398:39;;4484:2;4473:9;4469:18;4456:32;4446:42;;4535:2;4524:9;4520:18;4507:32;4497:42;;4589:2;4578:9;4574:18;4561:32;4602:29;4625:5;4602:29;:::i;:::-;4173:592;;;;-1:-1:-1;4173:592:16;;4702:3;4687:19;;4674:33;;4754:3;4739:19;;;4726:33;;-1:-1:-1;4173:592:16;-1:-1:-1;;4173:592:16:o;4770:380::-;4849:1;4845:12;;;;4892;;;4913:61;;4967:4;4959:6;4955:17;4945:27;;4913:61;5020:2;5012:6;5009:14;4989:18;4986:38;4983:161;;5066:10;5061:3;5057:20;5054:1;5047:31;5101:4;5098:1;5091:15;5129:4;5126:1;5119:15;4983:161;;4770:380;;;:::o;5155:127::-;5216:10;5211:3;5207:20;5204:1;5197:31;5247:4;5244:1;5237:15;5271:4;5268:1;5261:15;5287:168;5360:9;;;5391;;5408:15;;;5402:22;;5388:37;5378:71;;5429:18;;:::i;5460:247::-;5528:6;5581:2;5569:9;5560:7;5556:23;5552:32;5549:52;;;5597:1;5594;5587:12;5549:52;5629:9;5623:16;5648:29;5671:5;5648:29;:::i;5712:416::-;5801:1;5838:5;5801:1;5852:270;5873:7;5863:8;5860:21;5852:270;;;5932:4;5928:1;5924:6;5920:17;5914:4;5911:27;5908:53;;;5941:18;;:::i;:::-;5991:7;5981:8;5977:22;5974:55;;;6011:16;;;;5974:55;6090:22;;;;6050:15;;;;5852:270;;;5856:3;5712:416;;;;;:::o;6133:806::-;6182:5;6212:8;6202:80;;-1:-1:-1;6253:1:16;6267:5;;6202:80;6301:4;6291:76;;-1:-1:-1;6338:1:16;6352:5;;6291:76;6383:4;6401:1;6396:59;;;;6469:1;6464:130;;;;6376:218;;6396:59;6426:1;6417:10;;6440:5;;;6464:130;6501:3;6491:8;6488:17;6485:43;;;6508:18;;:::i;:::-;-1:-1:-1;;6564:1:16;6550:16;;6579:5;;6376:218;;6678:2;6668:8;6665:16;6659:3;6653:4;6650:13;6646:36;6640:2;6630:8;6627:16;6622:2;6616:4;6613:12;6609:35;6606:77;6603:159;;;-1:-1:-1;6715:19:16;;;6747:5;;6603:159;6794:34;6819:8;6813:4;6794:34;:::i;:::-;6864:6;6860:1;6856:6;6852:19;6843:7;6840:32;6837:58;;;6875:18;;:::i;:::-;6913:20;;6133:806;-1:-1:-1;;;6133:806:16:o;6944:140::-;7002:5;7031:47;7072:4;7062:8;7058:19;7052:4;7031:47;:::i;7089:217::-;7129:1;7155;7145:132;;7199:10;7194:3;7190:20;7187:1;7180:31;7234:4;7231:1;7224:15;7262:4;7259:1;7252:15;7145:132;-1:-1:-1;7291:9:16;;7089:217::o;7443:355::-;7645:2;7627:21;;;7684:2;7664:18;;;7657:30;7723:33;7718:2;7703:18;;7696:61;7789:2;7774:18;;7443:355::o;7803:184::-;7873:6;7926:2;7914:9;7905:7;7901:23;7897:32;7894:52;;;7942:1;7939;7932:12;7894:52;-1:-1:-1;7965:16:16;;7803:184;-1:-1:-1;7803:184:16:o;7992:125::-;8057:9;;;8078:10;;;8075:36;;;8091:18;;:::i;8122:128::-;8189:9;;;8210:11;;;8207:37;;;8224:18;;:::i;9233:245::-;9300:6;9353:2;9341:9;9332:7;9328:23;9324:32;9321:52;;;9369:1;9366;9359:12;9321:52;9401:9;9395:16;9420:28;9442:5;9420:28;:::i;12621:127::-;12682:10;12677:3;12673:20;12670:1;12663:31;12713:4;12710:1;12703:15;12737:4;12734:1;12727:15;12753:287;12882:3;12920:6;12914:13;12936:66;12995:6;12990:3;12983:4;12975:6;12971:17;12936:66;:::i;:::-;13018:16;;;;;12753:287;-1:-1:-1;;12753:287:16:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1197600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"TotalfeescollectedPaymentCoin()": "2416",
								"admin()": "2402",
								"checkAmountToRecive(uint256)": "infinite",
								"claimedPaymentCoin()": "2393",
								"depositFee()": "2351",
								"eip712Domain()": "infinite",
								"emergencyWithdraw(address,address,uint256)": "infinite",
								"freezeContract(bool)": "26800",
								"freezePermit()": "2416",
								"initContractBalancePaymentCoin()": "2307",
								"owner()": "2363",
								"permitSwapToPaymentCoin(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"pointsMin()": "2350",
								"rate()": "2395",
								"renounceOwnership()": "infinite",
								"setAdmin(address)": "26777",
								"setMinPointsToSWap(uint256)": "24689",
								"setPaymentDepositfees(uint256)": "24574",
								"setRate(uint256)": "24619",
								"setWithdrawalFee(uint256)": "24574",
								"setpaymentTokenAndpoints(address)": "50998",
								"transferOwnership(address)": "28373",
								"vaultName()": "infinite",
								"withdrawalFee()": "2306",
								"withdrawfees(address)": "infinite"
							},
							"internal": {
								"_permit(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2408,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2408,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2497,
									"end": 2501,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2497,
									"end": 2501,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2484,
									"end": 2489,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1801,
									"end": 1852,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1774,
									"end": 1792,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1774,
									"end": 1792,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 11
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 11,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4677,
									"end": 4702,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4718,
									"end": 4736,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4718,
									"end": 4736,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4718,
									"end": 4736,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4711,
									"end": 4745,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4711,
									"end": 4745,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4711,
									"end": 4745,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4711,
									"end": 4745,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4761,
									"end": 4779,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 4761,
									"end": 4779,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4761,
									"end": 4779,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4754,
									"end": 4788,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4822,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 4804,
									"end": 4822,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4804,
									"end": 4822,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4797,
									"end": 4831,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 4847,
									"end": 4866,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 4847,
									"end": 4866,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4847,
									"end": 4866,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4840,
									"end": 4901,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4649,
									"end": 4668,
									"name": "PUSH",
									"source": 16,
									"value": "C0"
								},
								{
									"begin": 4649,
									"end": 4668,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2518,
									"end": 2527,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "C"
								},
								{
									"begin": 2518,
									"end": 2532,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2528,
									"end": 2532,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2518,
									"end": 2527,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2518,
									"end": 2532,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 2518,
									"end": 2532,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2518,
									"end": 2532,
									"modifierDepth": 2,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2518,
									"end": 2532,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2555,
									"end": 2557,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "A"
								},
								{
									"begin": 2543,
									"end": 2553,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 2543,
									"end": 2557,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2575,
									"end": 2579,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "1388"
								},
								{
									"begin": 2568,
									"end": 2572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 2568,
									"end": 2579,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2603,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"modifierDepth": 2,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2590,
									"end": 2629,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2654,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"modifierDepth": 2,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2679,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2695,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "D"
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"modifierDepth": 2,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"modifierDepth": 2,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2690,
									"end": 2703,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "305A27A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 16,
									"value": "51"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 328,
									"end": 578,
									"name": "tag",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 328,
									"end": 578,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 413,
									"end": 414,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 434,
									"end": 435,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 431,
									"end": 444,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 423,
									"end": 536,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 524,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 507,
									"end": 525,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 494,
									"end": 505,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 487,
									"end": 526,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 459,
									"end": 461,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 462,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 568,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 552,
									"end": 568,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 545,
									"end": 572,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 328,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 681,
									"end": 687,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 697,
									"end": 703,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 738,
									"end": 747,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 729,
									"end": 736,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 725,
									"end": 748,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 721,
									"end": 753,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 718,
									"end": 770,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 718,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 718,
									"end": 770,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 766,
									"end": 767,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 764,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 756,
									"end": 768,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 718,
									"end": 770,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 718,
									"end": 770,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 789,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 819,
									"end": 828,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 789,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 789,
									"end": 829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 789,
									"end": 829,
									"name": "tag",
									"source": 16,
									"value": "59"
								},
								{
									"begin": 789,
									"end": 829,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 873,
									"end": 875,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 858,
									"end": 876,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 858,
									"end": 876,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 852,
									"end": 877,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 779,
									"end": 829,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 779,
									"end": 829,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 926,
									"end": 940,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 926,
									"end": 940,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 926,
									"end": 940,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 923,
									"end": 957,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 923,
									"end": 957,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 923,
									"end": 957,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 953,
									"end": 954,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 951,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 943,
									"end": 955,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 923,
									"end": 957,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 923,
									"end": 957,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 991,
									"end": 997,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 980,
									"end": 989,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 976,
									"end": 998,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 966,
									"end": 998,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 966,
									"end": 998,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1043,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1029,
									"end": 1033,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1025,
									"end": 1027,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1021,
									"end": 1034,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1044,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1007,
									"end": 1062,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 1056,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1048,
									"end": 1060,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 1062,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1007,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1087,
									"end": 1089,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1081,
									"end": 1090,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1109,
									"end": 1111,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1107,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1102,
									"end": 1112,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1099,
									"end": 1135,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1099,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 1099,
									"end": 1135,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1115,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1190,
									"end": 1192,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1158,
									"end": 1160,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1244,
									"end": 1257,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1244,
									"end": 1257,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1262,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1240,
									"end": 1262,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1240,
									"end": 1262,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1264,
									"end": 1266,
									"name": "PUSH",
									"source": 16,
									"value": "3F"
								},
								{
									"begin": 1236,
									"end": 1267,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1232,
									"end": 1272,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1220,
									"end": 1273,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1220,
									"end": 1273,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1220,
									"end": 1273,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1288,
									"end": 1306,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1285,
									"end": 1331,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1282,
									"end": 1354,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1282,
									"end": 1354,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1282,
									"end": 1354,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1334,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1334,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1334,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1334,
									"end": 1352,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1334,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1374,
									"end": 1384,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1370,
									"end": 1372,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1363,
									"end": 1385,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1409,
									"end": 1411,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1401,
									"end": 1407,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1449,
									"end": 1456,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 1444,
									"end": 1446,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1439,
									"end": 1441,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1435,
									"end": 1437,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1431,
									"end": 1442,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1427,
									"end": 1447,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1424,
									"end": 1457,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1474,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1421,
									"end": 1474,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1471,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1460,
									"end": 1472,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1474,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1421,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1483,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 1548,
									"end": 1550,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1545,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1535,
									"end": 1541,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1531,
									"end": 1546,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1526,
									"end": 1528,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1522,
									"end": 1524,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 1518,
									"end": 1529,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1483,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1483,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1483,
									"end": 1551,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 1483,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1570,
									"end": 1576,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "SWAP7",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1560,
									"end": 1576,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1595,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1638,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1625,
									"end": 1643,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1595,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1595,
									"end": 1644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1595,
									"end": 1644,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1595,
									"end": 1644,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1585,
									"end": 1644,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1585,
									"end": 1644,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 583,
									"end": 1650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1863,
									"end": 2243,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1863,
									"end": 2243,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1942,
									"end": 1943,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1938,
									"end": 1950,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1938,
									"end": 1950,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1938,
									"end": 1950,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1938,
									"end": 1950,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1985,
									"end": 1997,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1985,
									"end": 1997,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1985,
									"end": 1997,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2006,
									"end": 2067,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2006,
									"end": 2067,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2060,
									"end": 2064,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 2052,
									"end": 2058,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2038,
									"end": 2065,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2038,
									"end": 2065,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2006,
									"end": 2067,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2006,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2113,
									"end": 2115,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2105,
									"end": 2111,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2102,
									"end": 2116,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2082,
									"end": 2100,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2079,
									"end": 2117,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 2076,
									"end": 2237,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2076,
									"end": 2237,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2159,
									"end": 2169,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 2150,
									"end": 2170,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2147,
									"end": 2148,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2140,
									"end": 2171,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2191,
									"end": 2192,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 2184,
									"end": 2199,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2222,
									"end": 2226,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2219,
									"end": 2220,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2212,
									"end": 2227,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 2076,
									"end": 2237,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2076,
									"end": 2237,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2076,
									"end": 2237,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1863,
									"end": 2243,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1863,
									"end": 2243,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1863,
									"end": 2243,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1863,
									"end": 2243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2374,
									"end": 2892,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 2374,
									"end": 2892,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2476,
									"end": 2478,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2471,
									"end": 2474,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2468,
									"end": 2479,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2465,
									"end": 2886,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2465,
									"end": 2886,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2465,
									"end": 2886,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2512,
									"end": 2517,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2510,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2502,
									"end": 2518,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2556,
									"end": 2560,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2553,
									"end": 2554,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2543,
									"end": 2561,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2628,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2614,
									"end": 2624,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2610,
									"end": 2629,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 2608,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2603,
									"end": 2630,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2597,
									"end": 2601,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2593,
									"end": 2631,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2662,
									"end": 2666,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2650,
									"end": 2660,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2647,
									"end": 2667,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2644,
									"end": 2691,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2644,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2644,
									"end": 2691,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2685,
									"end": 2689,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2644,
									"end": 2691,
									"name": "tag",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2644,
									"end": 2691,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2740,
									"end": 2742,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2735,
									"end": 2738,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2731,
									"end": 2743,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2728,
									"end": 2729,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2724,
									"end": 2744,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2718,
									"end": 2722,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2714,
									"end": 2745,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2704,
									"end": 2745,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2704,
									"end": 2745,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2813,
									"end": 2815,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2803,
									"end": 2816,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2858,
									"end": 2874,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2858,
									"end": 2874,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2839,
									"end": 2840,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2828,
									"end": 2841,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2795,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2799,
									"end": 2802,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2799,
									"end": 2802,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2465,
									"end": 2886,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2465,
									"end": 2886,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2374,
									"end": 2892,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2374,
									"end": 2892,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2374,
									"end": 2892,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2374,
									"end": 2892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3068,
									"end": 4413,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 3068,
									"end": 4413,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3188,
									"end": 3198,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3188,
									"end": 3198,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3210,
									"end": 3240,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3210,
									"end": 3240,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3207,
									"end": 3263,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3207,
									"end": 3263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3207,
									"end": 3263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 3243,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3243,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 3369,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3362,
									"end": 3368,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3322,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3354,
									"end": 3358,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3348,
									"end": 3359,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3322,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 3322,
									"end": 3360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3322,
									"end": 3360,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3322,
									"end": 3360,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3316,
									"end": 3320,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 3369,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 3272,
									"end": 3369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3272,
									"end": 3369,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3272,
									"end": 3369,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3481,
									"end": 3483,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 3470,
									"end": 3484,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3470,
									"end": 3484,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3498,
									"end": 3499,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3493,
									"end": 4156,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3493,
									"end": 4156,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 3493,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3493,
									"end": 4156,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4200,
									"end": 4201,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4217,
									"end": 4223,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4214,
									"end": 4303,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4214,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 4214,
									"end": 4303,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4269,
									"end": 4288,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4269,
									"end": 4288,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4269,
									"end": 4288,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4263,
									"end": 4289,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4214,
									"end": 4303,
									"name": "tag",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 4214,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3025,
									"end": 3026,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 3021,
									"end": 3032,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3021,
									"end": 3032,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3021,
									"end": 3032,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3017,
									"end": 3041,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3013,
									"end": 3042,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3003,
									"end": 3043,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3045,
									"end": 3056,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3045,
									"end": 3056,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3045,
									"end": 3056,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3000,
									"end": 3057,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4316,
									"end": 4397,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4316,
									"end": 4397,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3493,
									"end": 4156,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3493,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2321,
									"end": 2322,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2314,
									"end": 2328,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2314,
									"end": 2328,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2314,
									"end": 2328,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2358,
									"end": 2362,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2345,
									"end": 2363,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2345,
									"end": 2363,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3529,
									"end": 3549,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3529,
									"end": 3549,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3529,
									"end": 3549,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3661,
									"end": 3668,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3658,
									"end": 3659,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3655,
									"end": 3669,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "93"
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3769,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3769,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3750,
									"end": 3769,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3729,
									"end": 3771,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3729,
									"end": 3771,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3842,
									"end": 3869,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3842,
									"end": 3869,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3842,
									"end": 3869,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3842,
									"end": 3869,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3810,
									"end": 3811,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3798,
									"end": 3812,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3798,
									"end": 3812,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3798,
									"end": 3812,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3798,
									"end": 3812,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3677,
									"end": 3696,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3677,
									"end": 3696,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "tag",
									"source": 16,
									"value": "93"
								},
								{
									"begin": 3647,
									"end": 3883,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3651,
									"end": 3654,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3911,
									"end": 3917,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3902,
									"end": 3909,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3899,
									"end": 3918,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3972,
									"end": 3991,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 3972,
									"end": 3991,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3972,
									"end": 3991,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3966,
									"end": 3992,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4055,
									"end": 4056,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 4051,
									"end": 4065,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4051,
									"end": 4065,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4051,
									"end": 4065,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4067,
									"end": 4070,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 4047,
									"end": 4071,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4080,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4039,
									"end": 4081,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4024,
									"end": 4082,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4009,
									"end": 4083,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4009,
									"end": 4083,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "tag",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3896,
									"end": 4097,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4143,
									"end": 4144,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4134,
									"end": 4140,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4131,
									"end": 4132,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4127,
									"end": 4141,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4123,
									"end": 4145,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4117,
									"end": 4121,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4110,
									"end": 4146,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "tag",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3463,
									"end": 4407,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3068,
									"end": 4413,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3068,
									"end": 4413,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3068,
									"end": 4413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4912,
									"end": 5308,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 4912,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5061,
									"end": 5063,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5050,
									"end": 5059,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5043,
									"end": 5064,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 5024,
									"end": 5028,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5093,
									"end": 5099,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5087,
									"end": 5100,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5136,
									"end": 5142,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 5131,
									"end": 5133,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5120,
									"end": 5129,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5116,
									"end": 5134,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5109,
									"end": 5143,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5219,
									"end": 5221,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5208,
									"end": 5217,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5204,
									"end": 5222,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5199,
									"end": 5201,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5191,
									"end": 5197,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 5187,
									"end": 5202,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 5152,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5231,
									"name": "tag",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 5152,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5292,
									"end": 5294,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 5271,
									"end": 5286,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5267,
									"end": 5296,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 5252,
									"end": 5297,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5252,
									"end": 5297,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5252,
									"end": 5297,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5252,
									"end": 5297,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5299,
									"end": 5301,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5248,
									"end": 5302,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5248,
									"end": 5302,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4912,
									"end": 5308,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4912,
									"end": 5308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5313,
									"end": 5610,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5313,
									"end": 5610,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5431,
									"end": 5443,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 5431,
									"end": 5443,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5478,
									"end": 5482,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5467,
									"end": 5483,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 5467,
									"end": 5483,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5467,
									"end": 5483,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5461,
									"end": 5484,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5461,
									"end": 5484,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5431,
									"end": 5443,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5496,
									"end": 5512,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5496,
									"end": 5512,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 5493,
									"end": 5604,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5493,
									"end": 5604,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 5493,
									"end": 5604,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5570,
									"end": 5574,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5566,
									"end": 5583,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5583,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5583,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5583,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 5563,
									"end": 5564,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 5559,
									"end": 5584,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 5555,
									"end": 5593,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 5544,
									"end": 5594,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 5544,
									"end": 5594,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5313,
									"end": 5610,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5313,
									"end": 5610,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5313,
									"end": 5610,
									"name": "tag",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 5313,
									"end": 5610,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "C0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1824"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1821"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1818"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1816"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1814"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1812"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "1810"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 8548,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220200b4ce79d87c1aec0797c58112fa52c8f87218bedf4b4598d52c0cc4b05dcdd64736f6c63430008160033",
									".code": [
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "8BC7E8C4"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "CBEACB80"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "F851A440"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "F9C3A1E8"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "FD918716"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "CBEACB80"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "E1FEFD42"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "E63EA408"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "8BC7E8C4"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "9683CDC4"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "AC1E5025"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "C08E7286"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "C4A9E858"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "3644E515"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "704B6C02"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "704B6C02"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "76EE947F"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "84B0196E"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "3644E515"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "67A52793"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "6B4C0789"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "6E0E582"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "ACE9CA0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "D461E61"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "252DE51B"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "2C4E722E"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "34FCF437"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 8548,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1364,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1456,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1456,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3064,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 3064,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1316,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1316,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1295,
											"end": 1317,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1137,
											"end": 1324,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1239,
											"end": 1255,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4372,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 4372,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3278,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 4839,
											"end": 4930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 4839,
											"end": 4930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 3648,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3648,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4082,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 4082,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1262,
											"end": 1287,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3513,
											"end": 3716,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 5170,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 5170,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4232,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 4232,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4597,
											"end": 4706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 4597,
											"end": 4706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1449,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 3835,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 3835,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1294,
											"end": 1315,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 7039,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 7039,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1486,
											"end": 1506,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 6032,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 6032,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 1456,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 1456,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1456,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3130,
											"end": 3134,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 3209,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 3209,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3204,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3204,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 3182,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 3182,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 3178,
											"end": 3206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3178,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 3178,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 3178,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 3162,
											"end": 3173,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 3162,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 3162,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3161,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 3161,
											"end": 3221,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3161,
											"end": 3221,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3161,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 3161,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3161,
											"end": 3221,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 3161,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3148,
											"end": 3221,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3266,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3064,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 4372,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 3364,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3364,
											"end": 3384,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 3364,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3384,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3278,
											"end": 3392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3278,
											"end": 3392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 4839,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4922,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4922,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3719,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 4082,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4149,
											"end": 4166,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4082,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP12",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5251,
											"end": 5280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5251,
											"end": 5280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 5243,
											"end": 5315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 5243,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 5347,
											"end": 5360,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5385,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5347,
											"end": 5385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5379,
											"end": 5383,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5347,
											"end": 5385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5325,
											"end": 5345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5347,
											"end": 5360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 5347,
											"end": 5370,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5385,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 5347,
											"end": 5385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 5347,
											"end": 5385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5325,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5325,
											"end": 5385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5395,
											"end": 5416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 5492,
											"end": 5522,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5459,
											"end": 5488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 5459,
											"end": 5488,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5438,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 5438,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5435,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 5420,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 5420,
											"end": 5456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 5420,
											"end": 5456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 5420,
											"end": 5488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 5420,
											"end": 5488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5420,
											"end": 5488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 5420,
											"end": 5488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5419,
											"end": 5522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5419,
											"end": 5522,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5419,
											"end": 5522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5419,
											"end": 5522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 5419,
											"end": 5522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5419,
											"end": 5522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5419,
											"end": 5522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5395,
											"end": 5522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5395,
											"end": 5522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 5532,
											"end": 5562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 5532,
											"end": 5582,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 5532,
											"end": 5582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5582,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5622,
											"end": 5632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 5622,
											"end": 5632,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5592,
											"end": 5601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5601,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5634,
											"end": 5637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5605,
											"end": 5632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 5605,
											"end": 5632,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5605,
											"end": 5621,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5605,
											"end": 5632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 5605,
											"end": 5632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5605,
											"end": 5632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 5605,
											"end": 5632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 5604,
											"end": 5637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 5604,
											"end": 5637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 5604,
											"end": 5637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5592,
											"end": 5637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5592,
											"end": 5637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5662,
											"end": 5663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5655,
											"end": 5663,
											"modifierDepth": 1,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5687,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5647,
											"end": 5687,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5687,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5647,
											"end": 5687,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8439,
											"end": 8460,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8496,
											"end": 8498,
											"name": "PUSH",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8476,
											"end": 8494,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8469,
											"end": 8499,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BC81B995DC819195C1BDCDA5D081859191959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8508,
											"end": 8558,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 8255,
											"end": 8599,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 5647,
											"end": 5687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5730,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 5697,
											"end": 5726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 5697,
											"end": 5734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 5697,
											"end": 5734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5734,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 5758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5758,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5744,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 5744,
											"end": 5793,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 5758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5772,
											"end": 5787,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5788,
											"end": 5792,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5744,
											"end": 5771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 5744,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5744,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 5744,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5233,
											"end": 5801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5233,
											"end": 5801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5233,
											"end": 5801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5170,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 4232,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 4294,
											"end": 4314,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 4597,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 4681,
											"end": 4691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4681,
											"end": 4698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 4681,
											"end": 4698,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4698,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 4681,
											"end": 4698,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4669,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 4669,
											"end": 4698,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 3835,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3957,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3967,
											"end": 4006,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4006,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 7039,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7176,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7149,
											"end": 7176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 7141,
											"end": 7211,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 7141,
											"end": 7211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7230,
											"end": 7247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7230,
											"end": 7247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 7222,
											"end": 7282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 7222,
											"end": 7282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7311,
											"end": 7312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7301,
											"end": 7312,
											"modifierDepth": 1,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7293,
											"end": 7337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7293,
											"end": 7337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7293,
											"end": 7337,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8806,
											"end": 8808,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7293,
											"end": 7337,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8788,
											"end": 8809,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8845,
											"end": 8847,
											"name": "PUSH",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8818,
											"end": 8848,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D85B9D081CD95B99081E995C9BC8185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8857,
											"end": 8908,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 8604,
											"end": 8949,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 7293,
											"end": 7337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7392,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9146,
											"end": 9178,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9146,
											"end": 9178,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9146,
											"end": 9178,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7348,
											"end": 7392,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9179,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9188,
											"end": 9222,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9188,
											"end": 9222,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9188,
											"end": 9222,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7348,
											"end": 7379,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7379,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 7348,
											"end": 7379,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7392,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7348,
											"end": 7392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 7348,
											"end": 7392,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3513,
											"end": 3716,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 6158,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6158,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6230,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 6238,
											"end": 6242,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6243,
											"end": 6254,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6255,
											"end": 6263,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6265,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6230,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 6230,
											"end": 6270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6230,
											"end": 6270,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 6230,
											"end": 6270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 6289,
											"end": 6301,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6289,
											"end": 6308,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9667,
											"end": 9688,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9724,
											"end": 9726,
											"name": "PUSH",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9697,
											"end": 9727,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DBDB9D1C9858DD08199C99595E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9743,
											"end": 9761,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9743,
											"end": 9761,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9743,
											"end": 9761,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9736,
											"end": 9782,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9799,
											"end": 9817,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9799,
											"end": 9817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 9483,
											"end": 9823,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 6281,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10030,
											"end": 10032,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10012,
											"end": 10033,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10069,
											"end": 10071,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10042,
											"end": 10072,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10108,
											"end": 10142,
											"name": "PUSH",
											"source": 16,
											"value": "706F696E747320746F2073776170206C657373207468616E206D696E706F696E"
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10081,
											"end": 10143,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10152,
											"end": 10184,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10201,
											"end": 10220,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 10201,
											"end": 10220,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 9828,
											"end": 10226,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 6424,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 6519,
											"end": 6551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6551,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 6519,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6551,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 6562,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6590,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6621,
											"end": 6634,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 6621,
											"end": 6634,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6620,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 6614,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 6614,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 6613,
											"end": 6639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6601,
											"end": 6639,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 6601,
											"end": 6639,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6671,
											"end": 6677,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 6671,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6757,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6743,
											"end": 6757,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6650,
											"end": 6683,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6650,
											"end": 6683,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6743,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 6743,
											"end": 6790,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6743,
											"end": 6757,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6771,
											"end": 6775,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 6650,
											"end": 6683,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 6743,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6743,
											"end": 6790,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 6743,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6801,
											"end": 6815,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6815,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 6801,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 6801,
											"end": 6845,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6815,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6829,
											"end": 6839,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6801,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 6801,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6801,
											"end": 6845,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 6801,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10433,
											"end": 10458,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 10433,
											"end": 10458,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10433,
											"end": 10458,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10489,
											"end": 10491,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10474,
											"end": 10492,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10501,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10517,
											"end": 10535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10517,
											"end": 10535,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10517,
											"end": 10535,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10510,
											"end": 10544,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10510,
											"end": 10544,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10510,
											"end": 10544,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6871,
											"end": 6886,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6886,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "PUSH",
											"source": 15,
											"value": "9A5F60E59CC27A7C25A7F78275C910454CD9ADACB21CECFF527C98ED63E02877"
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10406,
											"end": 10424,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6918,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 6147,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6147,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6147,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6032,
											"end": 6926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3513,
											"end": 3716,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1814"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1812"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1810"
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12008,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1816"
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12051,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1818"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12060,
											"end": 12094,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 11
										},
										{
											"begin": 12110,
											"end": 12128,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 12110,
											"end": 12128,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 12128,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12103,
											"end": 12137,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12153,
											"end": 12172,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12146,
											"end": 12207,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 11974,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 11955,
											"end": 11974,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1821"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1824"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9146,
											"end": 9178,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9146,
											"end": 9178,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9179,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9188,
											"end": 9222,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9188,
											"end": 9222,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9188,
											"end": 9222,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 8542,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 7701,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7974,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7977,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 7969,
											"end": 8005,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7993,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 7988,
											"end": 7996,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 8005,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8005,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 7969,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8024,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 7969,
											"end": 8024,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8014,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 8009,
											"end": 8017,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8009,
											"end": 8024,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 8024,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 7969,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10757,
											"end": 10759,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10739,
											"end": 10760,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10796,
											"end": 10797,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10776,
											"end": 10794,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10769,
											"end": 10798,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDA59C81D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10807,
											"end": 10845,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 10555,
											"end": 10886,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 7961,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8069,
											"end": 8077,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8066,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8077,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8047,
											"end": 8146,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8047,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 8047,
											"end": 8146,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313C8981"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8101,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8047,
											"end": 8146,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 8047,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 765,
											"end": 846,
											"name": "PUSH",
											"source": 15,
											"value": "5619A74ECD0240AFC3BFB1DF2BD1319401220FB577809C3A09BF0AB809AC861"
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11150,
											"end": 11175,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11222,
											"end": 11265,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11222,
											"end": 11265,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11222,
											"end": 11265,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11222,
											"end": 11265,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11301,
											"end": 11316,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11301,
											"end": 11316,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11301,
											"end": 11316,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11274,
											"end": 11317,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11326,
											"end": 11360,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11326,
											"end": 11360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11326,
											"end": 11360,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11376,
											"end": 11395,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 11376,
											"end": 11395,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11376,
											"end": 11395,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11369,
											"end": 11404,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11369,
											"end": 11404,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11369,
											"end": 11404,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 11122,
											"end": 11141,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8245,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8245,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8245,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8245,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8245,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8245,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8156,
											"end": 8245,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8156,
											"end": 8245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8257,
											"end": 8269,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 8289,
											"end": 8299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8272,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 8272,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8272,
											"end": 8300,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 8272,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8257,
											"end": 8300,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8257,
											"end": 8300,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8327,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 8344,
											"end": 8348,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8350,
											"end": 8351,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8353,
											"end": 8354,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8356,
											"end": 8357,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8330,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 8330,
											"end": 8358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8330,
											"end": 8358,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 8330,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8383,
											"end": 8388,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 8383,
											"end": 8388,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8358,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8383,
											"end": 8388,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8383,
											"end": 8388,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8373,
											"end": 8388,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 8369,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 8369,
											"end": 8459,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "25C00723"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11627,
											"end": 11661,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8446,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 11695,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11670,
											"end": 11713,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8412,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 11415,
											"end": 11719,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8369,
											"end": 8459,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 8369,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8474,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8477,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8478,
											"end": 8482,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8482,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8498,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8501,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8506,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8522,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8525,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8530,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7701,
											"end": 8542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3513,
											"end": 3716,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12518,
											"end": 12522,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 12506,
											"end": 12523,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 12506,
											"end": 12523,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12479,
											"end": 12524,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12479,
											"end": 12524,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12479,
											"end": 12524,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12479,
											"end": 12524,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12558,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12540,
											"end": 12558,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12540,
											"end": 12558,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12533,
											"end": 12567,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12533,
											"end": 12567,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12533,
											"end": 12567,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12576,
											"end": 12610,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12576,
											"end": 12610,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12576,
											"end": 12610,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12417,
											"end": 12436,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 12417,
											"end": 12436,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CD44AC3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3513,
											"end": 3716,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3513,
											"end": 3716,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 196,
											"end": 446,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 196,
											"end": 446,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 305,
											"end": 311,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 302,
											"end": 303,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 299,
											"end": 312,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 291,
											"end": 404,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 291,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 381,
											"end": 392,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 381,
											"end": 392,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 381,
											"end": 392,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 375,
											"end": 393,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 362,
											"end": 373,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 362,
											"end": 373,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 362,
											"end": 373,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 355,
											"end": 394,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 330,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 291,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 291,
											"end": 404,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 438,
											"end": 439,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 436,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 420,
											"end": 436,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 413,
											"end": 440,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 196,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 451,
											"end": 722,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 451,
											"end": 722,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 493,
											"end": 496,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 525,
											"end": 537,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 553,
											"end": 556,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 546,
											"end": 565,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 574,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 643,
											"end": 649,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 634,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 627,
											"end": 641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 620,
											"end": 624,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 609,
											"end": 625,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 574,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 574,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 574,
											"end": 650,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 574,
											"end": 650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 704,
											"end": 706,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 683,
											"end": 698,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 679,
											"end": 708,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 670,
											"end": 709,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 711,
											"end": 715,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 716,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 666,
											"end": 716,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 451,
											"end": 722,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 451,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 727,
											"end": 947,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 727,
											"end": 947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 874,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 858,
											"end": 879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 914,
											"end": 920,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 896,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 896,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 952,
											"end": 1132,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 952,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1061,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1039,
											"end": 1062,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1084,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 1032,
											"end": 1084,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1084,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 1032,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1126,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1103,
											"end": 1126,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 952,
											"end": 1132,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 952,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1511,
											"end": 1629,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 1511,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1597,
											"end": 1602,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1590,
											"end": 1603,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1583,
											"end": 1604,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1576,
											"end": 1581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1605,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1617,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1609,
											"end": 1621,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1634,
											"end": 1875,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 1634,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1690,
											"end": 1696,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1718,
											"end": 1741,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1714,
											"end": 1746,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 1711,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 1807,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1785,
											"end": 1808,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1817,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1839,
											"end": 1844,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1817,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 1817,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2053,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 1880,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 1968,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1948,
											"end": 1968,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1997,
											"end": 2028,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1997,
											"end": 2028,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1987,
											"end": 2029,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1987,
											"end": 2029,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 1977,
											"end": 2047,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2041,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 2047,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 1977,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2053,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2053,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2053,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2058,
											"end": 2244,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 2058,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2149,
											"end": 2156,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2145,
											"end": 2168,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2173,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2138,
											"end": 2190,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2138,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 2138,
											"end": 2190,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2138,
											"end": 2190,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 2138,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 2228,
											"end": 2237,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 2209,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 3508,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2249,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 2646,
											"end": 2659,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 2634,
											"end": 2660,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2623,
											"end": 2632,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2661,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2597,
											"end": 2601,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2682,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2745,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2771,
											"end": 2790,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2745,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 2745,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2745,
											"end": 2791,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 2745,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2827,
											"end": 2849,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2822,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2800,
											"end": 2850,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 2873,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2937,
											"end": 2939,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2949,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2986,
											"end": 3018,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 2986,
											"end": 3018,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2965,
											"end": 2984,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2958,
											"end": 3019,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3009,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3063,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3063,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3063,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3122,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3122,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3122,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 3079,
											"end": 3098,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3079,
											"end": 3098,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3172,
											"end": 3185,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3172,
											"end": 3185,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3216,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3285,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3270,
											"end": 3285,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 3270,
											"end": 3285,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3270,
											"end": 3285,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3321,
											"end": 3334,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3388,
											"end": 3401,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3388,
											"end": 3401,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3376,
											"end": 3402,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3376,
											"end": 3402,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3342,
											"end": 3351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 3313,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "SWAP13",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 3508,
											"name": "SWAP12",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3869,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3846,
											"end": 3853,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3842,
											"end": 3865,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 3870,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3835,
											"end": 3887,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3835,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 3835,
											"end": 3887,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3881,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3885,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3835,
											"end": 3887,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 3835,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 3925,
											"end": 3934,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3906,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3935,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 3906,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3896,
											"end": 3935,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3896,
											"end": 3935,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3954,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3954,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3954,
											"end": 3992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3954,
											"end": 3992,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 3954,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3944,
											"end": 3992,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3944,
											"end": 3992,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4039,
											"end": 4041,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4024,
											"end": 4042,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4011,
											"end": 4043,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4001,
											"end": 4043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4001,
											"end": 4043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 4049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4054,
											"end": 4168,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 4054,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4138,
											"end": 4142,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4127,
											"end": 4143,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4120,
											"end": 4125,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4117,
											"end": 4144,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4289,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4291,
											"end": 4297,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4305,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4307,
											"end": 4313,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4321,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4368,
											"end": 4371,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4347,
											"end": 4354,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 4343,
											"end": 4366,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4339,
											"end": 4372,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4383,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 4408,
											"end": 4437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4437,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 4408,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4398,
											"end": 4437,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4398,
											"end": 4437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4484,
											"end": 4486,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4469,
											"end": 4487,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4456,
											"end": 4488,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4488,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4497,
											"end": 4539,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4497,
											"end": 4539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4574,
											"end": 4592,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 4625,
											"end": 4630,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 4602,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 4602,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP9",
											"source": 16
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4702,
											"end": 4705,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 4687,
											"end": 4706,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4687,
											"end": 4706,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4674,
											"end": 4707,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4674,
											"end": 4707,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4754,
											"end": 4757,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4726,
											"end": 4759,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4726,
											"end": 4759,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4765,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4770,
											"end": 5150,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 4770,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4913,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 4913,
											"end": 4974,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 4959,
											"end": 4965,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4955,
											"end": 4972,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4945,
											"end": 4972,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4945,
											"end": 4972,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4913,
											"end": 4974,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 4913,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5022,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5009,
											"end": 5023,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4986,
											"end": 5024,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4983,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 4983,
											"end": 5144,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5066,
											"end": 5076,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5061,
											"end": 5064,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5057,
											"end": 5077,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5078,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5101,
											"end": 5105,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5091,
											"end": 5106,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5134,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4983,
											"end": 5144,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 4983,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4983,
											"end": 5144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4770,
											"end": 5150,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4770,
											"end": 5150,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4770,
											"end": 5150,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4770,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5155,
											"end": 5282,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 5155,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5216,
											"end": 5226,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5211,
											"end": 5214,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5207,
											"end": 5227,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5228,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5247,
											"end": 5251,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 5244,
											"end": 5245,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 5252,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5276,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5287,
											"end": 5455,
											"name": "tag",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 5287,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5423,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5423,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5408,
											"end": 5423,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 5388,
											"end": 5425,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5378,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 5378,
											"end": 5449,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 5429,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5707,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 5460,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5528,
											"end": 5534,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5569,
											"end": 5578,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5560,
											"end": 5567,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5556,
											"end": 5579,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5552,
											"end": 5584,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5549,
											"end": 5601,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5549,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 5549,
											"end": 5601,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5597,
											"end": 5598,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5587,
											"end": 5599,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5549,
											"end": 5601,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 5549,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5623,
											"end": 5639,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 5671,
											"end": 5676,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 5648,
											"end": 5677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5838,
											"end": 5843,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5873,
											"end": 5880,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5863,
											"end": 5871,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5860,
											"end": 5881,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5930,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 5920,
											"end": 5937,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5911,
											"end": 5938,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 5941,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5981,
											"end": 5989,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5977,
											"end": 5999,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6027,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6027,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6027,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6027,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6112,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6112,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6112,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6112,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 5852,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6133,
											"end": 6939,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 6133,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6220,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 6202,
											"end": 6282,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6282,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 6202,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6301,
											"end": 6305,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6291,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 6291,
											"end": 6367,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 6352,
											"end": 6357,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6291,
											"end": 6367,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 6291,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6387,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6469,
											"end": 6470,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 6464,
											"end": 6594,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6464,
											"end": 6594,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6464,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 6464,
											"end": 6594,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 6376,
											"end": 6594,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6417,
											"end": 6427,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6417,
											"end": 6427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6440,
											"end": 6445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6440,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 6440,
											"end": 6445,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6464,
											"end": 6594,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 6464,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 6491,
											"end": 6499,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6505,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6485,
											"end": 6528,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6485,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 6485,
											"end": 6528,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 6508,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6550,
											"end": 6566,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6550,
											"end": 6566,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6579,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 6579,
											"end": 6584,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6594,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 6376,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6668,
											"end": 6676,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6681,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6659,
											"end": 6662,
											"name": "PUSH",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6650,
											"end": 6663,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6646,
											"end": 6682,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6640,
											"end": 6642,
											"name": "PUSH",
											"source": 16,
											"value": "4E"
										},
										{
											"begin": 6630,
											"end": 6638,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6627,
											"end": 6643,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6622,
											"end": 6624,
											"name": "PUSH",
											"source": 16,
											"value": "B"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6613,
											"end": 6625,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6609,
											"end": 6644,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6606,
											"end": 6683,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 6603,
											"end": 6762,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6603,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 6603,
											"end": 6762,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6715,
											"end": 6734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6715,
											"end": 6734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6715,
											"end": 6734,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6603,
											"end": 6762,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 6603,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6794,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 6819,
											"end": 6827,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6813,
											"end": 6817,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6794,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 6794,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6794,
											"end": 6828,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 6794,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6870,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6862,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 6872,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6837,
											"end": 6895,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6837,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 6837,
											"end": 6895,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 6875,
											"end": 6893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6913,
											"end": 6933,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6913,
											"end": 6933,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6133,
											"end": 6939,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6944,
											"end": 7084,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 6944,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7002,
											"end": 7007,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 7072,
											"end": 7076,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 7062,
											"end": 7070,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7052,
											"end": 7056,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7031,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 7031,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7089,
											"end": 7306,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 7089,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7129,
											"end": 7130,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7156,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 7145,
											"end": 7277,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7199,
											"end": 7209,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 7194,
											"end": 7197,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 7190,
											"end": 7210,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7187,
											"end": 7188,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7211,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7224,
											"end": 7239,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7259,
											"end": 7260,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7145,
											"end": 7277,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 7145,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7291,
											"end": 7300,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 7291,
											"end": 7300,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7089,
											"end": 7306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7443,
											"end": 7798,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 7443,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7627,
											"end": 7648,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 7648,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 7648,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7657,
											"end": 7687,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7723,
											"end": 7756,
											"name": "PUSH",
											"source": 16,
											"value": "796F75206172652073656E64696E6720746F207A65726F206164647265737300"
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7696,
											"end": 7757,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7791,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7774,
											"end": 7792,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7774,
											"end": 7792,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7443,
											"end": 7798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7803,
											"end": 7987,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 7803,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7873,
											"end": 7879,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7905,
											"end": 7912,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7901,
											"end": 7924,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7897,
											"end": 7929,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7946,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 7894,
											"end": 7946,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7942,
											"end": 7943,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7940,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7946,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 7894,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7965,
											"end": 7981,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7965,
											"end": 7981,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7803,
											"end": 7987,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7803,
											"end": 7987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7992,
											"end": 8117,
											"name": "tag",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 7992,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8057,
											"end": 8066,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8057,
											"end": 8066,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8057,
											"end": 8066,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8078,
											"end": 8088,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8078,
											"end": 8088,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8078,
											"end": 8088,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8075,
											"end": 8111,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8075,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 8075,
											"end": 8111,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 8091,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8122,
											"end": 8250,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 8122,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8210,
											"end": 8221,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8210,
											"end": 8221,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8210,
											"end": 8221,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8207,
											"end": 8244,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8207,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 8207,
											"end": 8244,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 8224,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9233,
											"end": 9478,
											"name": "tag",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 9233,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9300,
											"end": 9306,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9355,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9341,
											"end": 9350,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9332,
											"end": 9339,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9328,
											"end": 9351,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9324,
											"end": 9356,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9321,
											"end": 9373,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9321,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 9321,
											"end": 9373,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9369,
											"end": 9370,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9321,
											"end": 9373,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 9321,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9401,
											"end": 9410,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9395,
											"end": 9411,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9420,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 9442,
											"end": 9447,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9420,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 9420,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12621,
											"end": 12748,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 12621,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12682,
											"end": 12692,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 12673,
											"end": 12693,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12670,
											"end": 12671,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12663,
											"end": 12694,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12713,
											"end": 12717,
											"name": "PUSH",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 12710,
											"end": 12711,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12703,
											"end": 12718,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12734,
											"end": 12735,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12727,
											"end": 12742,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12753,
											"end": 13040,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 12753,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12882,
											"end": 12885,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12920,
											"end": 12926,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12914,
											"end": 12927,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12995,
											"end": 13001,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12990,
											"end": 12993,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12983,
											"end": 12987,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12975,
											"end": 12981,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 12936,
											"end": 13002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13002,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12936,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13018,
											"end": 13034,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12753,
											"end": 13040,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12753,
											"end": 13040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ribbonVault1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"TotalfeescollectedPaymentCoin()": "c4a9e858",
							"admin()": "f851a440",
							"checkAmountToRecive(uint256)": "0d461e61",
							"claimedPaymentCoin()": "fd918716",
							"depositFee()": "67a52793",
							"eip712Domain()": "84b0196e",
							"emergencyWithdraw(address,address,uint256)": "e63ea408",
							"freezeContract(bool)": "6b4c0789",
							"freezePermit()": "252de51b",
							"initContractBalancePaymentCoin()": "06e0e582",
							"owner()": "8da5cb5b",
							"permitSwapToPaymentCoin(address,uint256,uint256,uint8,bytes32,bytes32)": "f9c3a1e8",
							"pointsMin()": "e1fefd42",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"setAdmin(address)": "704b6c02",
							"setMinPointsToSWap(uint256)": "c08e7286",
							"setPaymentDepositfees(uint256)": "76ee947f",
							"setRate(uint256)": "34fcf437",
							"setWithdrawalFee(uint256)": "ac1e5025",
							"setpaymentTokenAndpoints(address)": "cbeacb80",
							"transferOwnership(address)": "f2fde38b",
							"vaultName()": "0ace9ca0",
							"withdrawalFee()": "8bc7e8c4",
							"withdrawfees(address)": "9683cdc4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointToSwap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentTokenRecieved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalfeescollectedPaymentCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointToSwap\",\"type\":\"uint256\"}],\"name\":\"checkAmountToRecive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimedPaymentCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freezeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezePermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initContractBalancePaymentCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pointToSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitSwapToPaymentCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pointsMin\",\"type\":\"uint256\"}],\"name\":\"setMinPointsToSWap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setPaymentDepositfees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"}],\"name\":\"setpaymentTokenAndpoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTakerAddress\",\"type\":\"address\"}],\"name\":\"withdrawfees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"checkAmountToRecive(uint256)\":{\"details\":\"used to calcultae amount of the worldcoin token or other payment token to recieve at a specific rate specified\"},\"constructor\":{\"params\":{\"paymentAddress\":\"the contract address that the points would be swaped into\"}},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"emergencyWithdraw(address,address,uint256)\":{\"details\":\"this is used to withdraw any asset stuck in the contract by mistake by only the admin\"},\"freezeContract(bool)\":{\"details\":\"used to stop the permit functions to claim point and and swap points to worldcoin token or other payment coin \"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permitSwapToPaymentCoin(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"admin signs a user ,amount ,deadline  ofchain and pass the signature  to the user to swap points to worldcoin or payment coin ,but this is done automatically \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"update padmin address\"},\"setMinPointsToSWap(uint256)\":{\"details\":\"set minimum points to swap without decimal\"},\"setPaymentDepositfees(uint256)\":{\"details\":\"set depositFee  without decimal \"},\"setRate(uint256)\":{\"details\":\"set _rate  without decimal \"},\"setWithdrawalFee(uint256)\":{\"details\":\"set withdrawalFee  without decimal \"},\"setpaymentTokenAndpoints(address)\":{\"details\":\"update points contract address and worldcoin token or other payment contract address\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawfees(address)\":{\"details\":\"used withdraw fees when a new deposit is address into the contract the computation allows fees to be deducted when new deposit is added  when no new deposit is added and this function is called it will revert\"}},\"title\":\"RibbonVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setMinPointsToSWap(uint256)\":{\"notice\":\"18 decimal was hardcoded because the points contract is 18 decimal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ribbonVault1.sol\":\"vault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ribbonVault1.sol\":{\"keccak256\":\"0x8f8b9c51e97ced8d9174570538e6138e100db36dad485830ae7e4038e1b9ecb3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3ae7b0e0bc4cb3ad099da1aa94e3d5f9335ddc9c95617f00cb4c0cd15c82f47f\",\"dweb:/ipfs/Qma8YiN5crczsHhxSwdfHmeNx6FaB6uz6H4XjXRMBSyKWp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1826,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1828,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 3301,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "_Ipaymentcoin",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20T)3284"
							},
							{
								"astId": 3304,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "_IpaymentcoinT",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)250"
							},
							{
								"astId": 3306,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "depositFee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3308,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "rate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 3310,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "withdrawalFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 3312,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "pointsMin",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 3314,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "initContractBalancePaymentCoin",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 3316,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "claimedPaymentCoin",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 3318,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "TotalfeescollectedPaymentCoin",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 3320,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "vaultName",
								"offset": 0,
								"slot": "12",
								"type": "t_string_storage"
							},
							{
								"astId": 3322,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "admin",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 3324,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "freezePermit",
								"offset": 20,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 3358,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "sig_v",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint8,t_bool)"
							},
							{
								"astId": 3362,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "sig_r",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 3366,
								"contract": "src/ribbonVault1.sol:vault",
								"label": "sig_s",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)250": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20T)3284": {
								"encoding": "inplace",
								"label": "contract IERC20T",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint8,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setMinPointsToSWap(uint256)": {
								"notice": "18 decimal was hardcoded because the points contract is 18 decimal"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							859
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 860,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 859,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 859,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								859
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "IERC5267",
							"nameLocation": "143:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:1",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 152,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:1"
									},
									"src": "247:28:1"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:1",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "510:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 155,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "537:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "569:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "604:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "633:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "672:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "698:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 167,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 168,
													"nodeType": "ArrayTypeName",
													"src": "698:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:1"
									},
									"scope": 172,
									"src": "426:310:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 173,
							"src": "133:605:1",
							"usedErrors": [],
							"usedEvents": [
								152
							]
						}
					],
					"src": "107:632:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 175,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 184,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 193,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 250,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 250,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 250,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 250,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 250,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 250,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 251,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								184,
								193
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 263,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 286,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 286,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 286,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							829
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"SafeERC20": [
							576
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 251,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 250,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 287,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 286,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 830,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 829,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 298,
									"libraryName": {
										"id": 296,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 829,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 303,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 312,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 327,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 217,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 329,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 320,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 331,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 325,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 323,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 314,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 250,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 576,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 249,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 355,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 356,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 357,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 250,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 576,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 380,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$576",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$576",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 376,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 386,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 387,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 389,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 250,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 576,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															406
														],
														"declarations": [
															{
																"constant": false,
																"id": 406,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 435,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 415,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 411,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$576",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$576",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 409,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 407,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 227,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 417,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 426,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 425,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 420,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 400,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 421,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 406,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 422,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 419,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 424,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 430,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 431,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 427,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 250,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 576,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 483,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 448,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 452,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 237,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 454,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 456,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 450,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 460,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 461,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$250",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 459,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 465,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 468,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 441,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$250",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 237,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 470,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 443,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 471,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 472,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 466,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 464,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 478,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$250",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 476,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 439,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 250,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 576,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 493,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"id": 500,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 497,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 650,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 503,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 509,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 510,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 512,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 507,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 519,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 488,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$250",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$250",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 517,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 516,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 522,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 250,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 576,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													538,
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 537,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 539,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [
														{
															"id": 546,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 543,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$250",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 550,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 540,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 556,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 540,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 558,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 557,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 559,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 554,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 562,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 566,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$250",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 564,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 536,
												"id": 573,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$250",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 250,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 576,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 577,
							"src": "751:5018:4",
							"usedErrors": [
								303,
								312
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							829
						]
					},
					"id": 830,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 579,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 829,
							"linearizedBaseContracts": [
								829
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 584,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 589,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 592,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$829",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$829",
																		"typeString": "library Address"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 605,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 610,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$829",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$829",
																					"typeString": "library Address"
																				}
																			],
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 608,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 607,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 613,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													617,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 616,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 618,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 620,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 627,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 829,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 643,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 829,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 664,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$829",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$829",
																		"typeString": "library Address"
																	}
																],
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 662,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 667,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 672,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$829",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$829",
																					"typeString": "library Address"
																				}
																			],
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 670,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 669,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 675,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													679,
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 678,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 680,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"arguments": [
														{
															"id": 686,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 682,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 684,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 692,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 689,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 694,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 829,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													707,
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 721,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 706,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 721,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"id": 712,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 718,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 715,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 720,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 700,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 829,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													733,
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 732,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 734,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 740,
												"initialValue": {
													"arguments": [
														{
															"id": 738,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 736,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 744,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 741,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 731,
												"id": 746,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 829,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 760,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 767,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 771,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 782,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 781,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 777,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 780,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 783,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 759,
															"id": 784,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 786,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 763,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 762,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 829,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 798,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 805,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 797,
															"id": 806,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 801,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 800,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 803,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 795,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 829,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 816,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 822,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 824,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 813,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 813,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 820,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 812,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 829,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 830,
							"src": "195:6066:5",
							"usedErrors": [
								584,
								589,
								592
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							859
						]
					},
					"id": 860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 831,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 832,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 859,
							"linearizedBaseContracts": [
								859
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 837,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 836,
												"id": 839,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 859,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 846,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 845,
												"id": 848,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 859,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 854,
												"id": 856,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 859,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 860,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							865
						],
						"ShortStrings": [
							1076
						],
						"StorageSlot": [
							1186
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1187,
							"src": "132:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 862,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1186,
										"src": "140:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 865,
							"name": "ShortString",
							"nameLocation": "353:11:7",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:7",
							"underlyingType": {
								"id": 864,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:7",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 866,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:7",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1076,
							"linearizedBaseContracts": [
								1076
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 869,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1076,
									"src": "1345:111:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 867,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 868,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 873,
									"name": "StringTooLong",
									"nameLocation": "1469:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1483:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:7"
									},
									"src": "1463:32:7"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 875,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:7"
									},
									"src": "1500:27:7"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "1786:208:7",
										"statements": [
											{
												"assignments": [
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 918,
														"src": "1796:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 884,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"arguments": [
														{
															"id": 888,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "1822:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 886,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:7",
															"typeDescriptions": {}
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 891,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "1840:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "1836:72:7",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "1858:50:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 896,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "1893:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 895,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "1879:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "1872:25:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 909,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "1965:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 908,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 907,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 905,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 912,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "1974:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 903,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 901,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "1924:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$865_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:7",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$865_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 883,
												"id": 917,
												"nodeType": "Return",
												"src": "1917:70:7"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:7",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 877,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:7"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1773:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 880,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 865,
														"src": "1773:11:7"
													},
													"referencedDeclaration": 865,
													"src": "1773:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:7"
									},
									"scope": 1076,
									"src": "1708:286:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "2152:331:7",
										"statements": [
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "2162:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2187:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																"typeString": "ShortString"
															}
														],
														"id": 930,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "2176:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$865_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:7"
											},
											{
												"assignments": [
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "2280:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 934,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 936,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:7"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:7",
													"nodeType": "YulBlock",
													"src": "2376:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:7"
																},
																"nativeSrc": "2390:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:7"
															},
															"nativeSrc": "2390:16:7",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:7"
																		},
																		"nativeSrc": "2426:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:7"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:7"
																},
																"nativeSrc": "2419:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:7"
															},
															"nativeSrc": "2419:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:7"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 929,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:7",
														"valueSize": 1
													},
													{
														"declaration": 923,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:7",
														"valueSize": 1
													},
													{
														"declaration": 935,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:7",
														"valueSize": 1
													},
													{
														"declaration": 935,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:7",
														"valueSize": 1
													}
												],
												"id": 941,
												"nodeType": "InlineAssembly",
												"src": "2367:90:7"
											},
											{
												"expression": {
													"id": 942,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 935,
													"src": "2473:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 927,
												"id": 943,
												"nodeType": "Return",
												"src": "2466:10:7"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:7",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2096:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 921,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 865,
														"src": "2096:11:7"
													},
													"referencedDeclaration": 865,
													"src": "2096:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:7"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2137:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:7"
									},
									"scope": 1076,
									"src": "2078:405:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "2625:175:7",
										"statements": [
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "2635:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 960,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "2679:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 958,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "2660:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$865_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:7",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$865_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 956,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2706:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "2702:69:7",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "2719:52:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 969,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "2740:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 971,
															"nodeType": "RevertStatement",
															"src": "2733:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 974,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 955,
													"src": "2787:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 953,
												"id": 975,
												"nodeType": "Return",
												"src": "2780:13:7"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:7",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2575:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 865,
														"src": "2575:11:7"
													},
													"referencedDeclaration": 865,
													"src": "2575:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:7"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2616:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:7"
									},
									"scope": 1076,
									"src": "2555:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "3023:231:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3043:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 988,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "3121:127:7",
													"statements": [
														{
															"expression": {
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1003,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "3161:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1000,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1186,
																				"src": "3135:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1186_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:7",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1163,
																			"src": "3135:25:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1094_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1094_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "3135:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3176:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1011,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "3219:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1009,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "3202:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$865_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:7",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$865_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 987,
															"id": 1013,
															"nodeType": "Return",
															"src": "3195:42:7"
														}
													]
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "3033:215:7",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "3063:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 996,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "3098:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 995,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "3084:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$865_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 987,
															"id": 998,
															"nodeType": "Return",
															"src": "3077:27:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:7",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2949:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2970:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "3010:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 984,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 865,
														"src": "3010:11:7"
													},
													"referencedDeclaration": 865,
													"src": "3010:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:7"
									},
									"scope": 1076,
									"src": "2914:340:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "3494:158:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1030,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "3527:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1028,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "3508:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$865_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:7",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$865_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1032,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3537:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "3609:37:7",
													"statements": [
														{
															"expression": {
																"id": 1039,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "3630:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1040,
															"nodeType": "Return",
															"src": "3623:12:7"
														}
													]
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "3504:142:7",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "3556:47:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1035,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "3586:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1034,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "3577:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$865_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1037,
															"nodeType": "Return",
															"src": "3570:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:7",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3415:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 865,
														"src": "3415:11:7"
													},
													"referencedDeclaration": 865,
													"src": "3415:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3434:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:7"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3479:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:7"
									},
									"scope": 1076,
									"src": "3385:267:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "4132:174:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1057,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "4165:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1055,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "4146:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$865_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:7",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$865_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1059,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4175:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "4249:51:7",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1068,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1050,
																			"src": "4276:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1066,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1054,
															"id": 1071,
															"nodeType": "Return",
															"src": "4263:26:7"
														}
													]
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "4142:158:7",
												"trueBody": {
													"id": 1065,
													"nodeType": "Block",
													"src": "4194:49:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1062,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "4226:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1061,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "4215:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$865_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1054,
															"id": 1064,
															"nodeType": "Return",
															"src": "4208:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:7",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4059:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1046,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 865,
														"src": "4059:11:7"
													},
													"referencedDeclaration": 865,
													"src": "4059:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4078:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1049,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:7"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "4123:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:7"
									},
									"scope": 1076,
									"src": "4027:279:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1077,
							"src": "1255:3053:7",
							"usedErrors": [
								873,
								875
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1186
						]
					},
					"id": 1187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1082,
									"members": [
										{
											"constant": false,
											"id": 1081,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1080,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1186,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1085,
									"members": [
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1085,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1083,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1186,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1088,
									"members": [
										{
											"constant": false,
											"id": 1087,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1088,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1086,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1186,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1091,
									"members": [
										{
											"constant": false,
											"id": 1090,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1091,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1089,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1186,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1094,
									"members": [
										{
											"constant": false,
											"id": 1093,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1094,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1092,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1186,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1097,
									"members": [
										{
											"constant": false,
											"id": 1096,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1095,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1186,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1104,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1100,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1106,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1099,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1082_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1102,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1082,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1082,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1082_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1186,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1115,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1111,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1117,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1085_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1085,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1085,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1085_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1186,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1126,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1128,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1088_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1124,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1088,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1088,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1088_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1186,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1133,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1139,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1132,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1091_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1135,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1091,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1091,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1091_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1186,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1148,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1144,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1150,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1094_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1146,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1094,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1094,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1094_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1186,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1159,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1155,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1161,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1094_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1157,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1094,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1094,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1094_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1186,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1170,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1166,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1172,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1097_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1168,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1097,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1097,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1097_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1186,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1181,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1177,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1183,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1097_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1179,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1097,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1097,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1097_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1186,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1187,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3144
						],
						"SignedMath": [
							3249
						],
						"Strings": [
							1441
						]
					},
					"id": 1442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 3145,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1189,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3144,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 3250,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1191,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3249,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1193,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1441,
							"linearizedBaseContracts": [
								1441
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1196,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1194,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1199,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1441,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1197,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1198,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1206,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1252,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1215
														],
														"declarations": [
															{
																"constant": false,
																"id": 1215,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1252,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1214,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1218,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1216,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3144,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3144_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2964,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1224
														],
														"declarations": [
															{
																"constant": false,
																"id": 1224,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1252,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1223,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1229,
														"initialValue": {
															"arguments": [
																{
																	"id": 1227,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1225,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1231
														],
														"declarations": [
															{
																"constant": false,
																"id": 1231,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1252,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1230,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1232,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1224,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1215,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1231,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1233,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1248,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1235,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1237,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1196,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1231,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1209,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1238,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1242,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1247,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1246,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1249,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1250,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1213,
														"id": 1251,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1211,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 1441,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1274,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1257,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1272,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3249,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3249_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3248,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1271,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1262,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1278,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1256,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 1441,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1298,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1292,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1290,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3144,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3144_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3086,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1288,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1300,
																	1383,
																	1403
																],
																"referencedDeclaration": 1383,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1287,
														"id": 1297,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 1441,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"id": 1312,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1303,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1314,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1319,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1316,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1325,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1327,
														"indexExpression": {
															"hexValue": "30",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1331,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1333,
														"indexExpression": {
															"hexValue": "31",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1365,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1351,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1353,
																	"indexExpression": {
																		"id": 1352,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1354,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1358,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1355,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1360,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1361,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1364,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1345,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1366,
												"initializationExpression": {
													"assignments": [
														1338
													],
													"declarations": [
														{
															"constant": false,
															"id": 1338,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1366,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1337,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1344,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1340,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1348,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1350,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1367,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1371,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1372,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1370,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1379,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1377,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1381,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 1441,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1396,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1394,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1399,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1391,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1300,
															1383,
															1403
														],
														"referencedDeclaration": 1383,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1401,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 1441,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1415,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1413,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1420,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1427,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1425,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1424,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1433,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1431,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1430,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1412,
												"id": 1438,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 1441,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1442,
							"src": "251:2847:9",
							"usedErrors": [
								1206
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1789
						]
					},
					"id": 1790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1444,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:10",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1789,
							"linearizedBaseContracts": [
								1789
							],
							"name": "ECDSA",
							"nameLocation": "352:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1449,
									"members": [
										{
											"id": 1445,
											"name": "NoError",
											"nameLocation": "392:7:10",
											"nodeType": "EnumValue",
											"src": "392:7:10"
										},
										{
											"id": 1446,
											"name": "InvalidSignature",
											"nameLocation": "409:16:10",
											"nodeType": "EnumValue",
											"src": "409:16:10"
										},
										{
											"id": 1447,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:10",
											"nodeType": "EnumValue",
											"src": "435:22:10"
										},
										{
											"id": 1448,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:10",
											"nodeType": "EnumValue",
											"src": "467:17:10"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:10",
									"nodeType": "EnumDefinition",
									"src": "364:126:10"
								},
								{
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:10",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1452,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:10"
									},
									"src": "564:30:10"
								},
								{
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:10",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1457,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "699:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:10"
									},
									"src": "665:50:10"
								},
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:10",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1462,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "840:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:10"
									},
									"src": "811:40:10"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "2242:653:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1477,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2256:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "2781:108:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1503,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "2815:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:10",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1447,
																		"src": "2815:35:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1449",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1507,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "2860:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1505,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1511,
															"nodeType": "Return",
															"src": "2795:83:10"
														}
													]
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "2252:637:10",
												"trueBody": {
													"id": 1498,
													"nodeType": "Block",
													"src": "2280:495:10",
													"statements": [
														{
															"assignments": [
																1482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1482,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1498,
																	"src": "2294:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1481,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1483,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:10"
														},
														{
															"assignments": [
																1485
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1485,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1498,
																	"src": "2317:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1484,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1486,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:10"
														},
														{
															"assignments": [
																1488
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1488,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1498,
																	"src": "2340:7:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1487,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1489,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:10"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:10",
																"nodeType": "YulBlock",
																"src": "2548:171:10",
																"statements": [
																	{
																		"nativeSrc": "2566:32:10",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:10",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:10",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:10"
																					},
																					"nativeSrc": "2577:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:10"
																			},
																			"nativeSrc": "2571:27:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:10"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:10",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:10",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:10",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:10",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:10"
																					},
																					"nativeSrc": "2626:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:10"
																			},
																			"nativeSrc": "2620:27:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:10"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:10",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:10",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:10",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:10"
																							},
																							"nativeSrc": "2683:20:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:10"
																					},
																					"nativeSrc": "2677:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:10"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:10"
																			},
																			"nativeSrc": "2669:36:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:10"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:10"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1482,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1485,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1467,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1467,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1467,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1488,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:10",
																	"valueSize": 1
																}
															],
															"id": 1490,
															"nodeType": "InlineAssembly",
															"src": "2539:180:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1492,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "2750:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1493,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1488,
																		"src": "2756:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1494,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "2759:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1495,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "2762:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1491,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1515,
																		1595,
																		1703
																	],
																	"referencedDeclaration": 1703,
																	"src": "2739:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1497,
															"nodeType": "Return",
															"src": "2732:32:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:10",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2149:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2163:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:10"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2219:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1449",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1471,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "2219:12:10"
													},
													"referencedDeclaration": 1449,
													"src": "2219:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1449",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "2233:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:10"
									},
									"scope": 1789,
									"src": "2129:766:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "3789:168:10",
										"statements": [
											{
												"assignments": [
													1526,
													1529,
													1531
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "3800:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1525,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "3819:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1449",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1528,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1527,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1449,
																"src": "3819:12:10"
															},
															"referencedDeclaration": 1449,
															"src": "3819:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "3839:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1530,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"arguments": [
														{
															"id": 1533,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3870:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1534,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3876:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1532,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1595,
															1703
														],
														"referencedDeclaration": 1515,
														"src": "3859:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1538,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3908:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1539,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "3915:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1537,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "3896:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1449_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:10"
											},
											{
												"expression": {
													"id": 1542,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1526,
													"src": "3941:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1524,
												"id": 1543,
												"nodeType": "Return",
												"src": "3934:16:10"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:10",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3719:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3733:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:10"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3780:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:10"
									},
									"scope": 1789,
									"src": "3702:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "4285:342:10",
										"statements": [
											{
												"id": 1593,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:10",
												"statements": [
													{
														"assignments": [
															1563
														],
														"declarations": [
															{
																"constant": false,
																"id": 1563,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1593,
																"src": "4319:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1562,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1570,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1564,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "4331:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:10"
													},
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1593,
																"src": "4522:7:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1585,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1577,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1552,
																							"src": "4547:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1576,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1575,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1581,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1587,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1548,
																	"src": "4596:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1588,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "4602:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1589,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "4605:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1590,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "4608:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1586,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1515,
																	1595,
																	1703
																],
																"referencedDeclaration": 1703,
																"src": "4585:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1561,
														"id": 1592,
														"nodeType": "Return",
														"src": "4578:32:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:10",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "4193:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "4207:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "4218:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:10"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "4253:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "4262:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1449",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1556,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "4262:12:10"
													},
													"referencedDeclaration": 1449,
													"src": "4262:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1449",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "4276:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:10"
									},
									"scope": 1789,
									"src": "4173:454:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "4840:164:10",
										"statements": [
											{
												"assignments": [
													1608,
													1611,
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1608,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1627,
														"src": "4851:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1607,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1627,
														"src": "4870:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1449",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1610,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1609,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1449,
																"src": "4870:12:10"
															},
															"referencedDeclaration": 1449,
															"src": "4870:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1627,
														"src": "4890:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1612,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"arguments": [
														{
															"id": 1615,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "4921:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1616,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "4927:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1617,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "4930:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1614,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1595,
															1703
														],
														"referencedDeclaration": 1595,
														"src": "4910:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1621,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "4955:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1622,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "4962:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1620,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "4943:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1449_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:10"
											},
											{
												"expression": {
													"id": 1625,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1608,
													"src": "4988:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1626,
												"nodeType": "Return",
												"src": "4981:16:10"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:10",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4771:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4785:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4796:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:10"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4831:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:10"
									},
									"scope": 1789,
									"src": "4754:250:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "5298:1372:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1649,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "6194:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1647,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "IfStatement",
												"src": "6182:164:10",
												"trueBody": {
													"id": 1662,
													"nodeType": "Block",
													"src": "6267:79:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1653,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1657,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "6301:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:10",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1448,
																		"src": "6301:30:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1449",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1659,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "6333:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1646,
															"id": 1661,
															"nodeType": "Return",
															"src": "6281:54:10"
														}
													]
												}
											},
											{
												"assignments": [
													1665
												],
												"declarations": [
													{
														"constant": false,
														"id": 1665,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "6440:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1664,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"arguments": [
														{
															"id": 1667,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "6467:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1668,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "6473:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1669,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "6476:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1670,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "6479:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1666,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1673,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "6495:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1674,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1692,
												"nodeType": "IfStatement",
												"src": "6491:113:10",
												"trueBody": {
													"id": 1691,
													"nodeType": "Block",
													"src": "6517:87:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1679,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1683,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "6551:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:10",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1446,
																		"src": "6551:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1449",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1685,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1646,
															"id": 1690,
															"nodeType": "Return",
															"src": "6531:62:10"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1693,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "6622:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1694,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "6630:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:10",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1445,
															"src": "6630:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1696,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1700,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1701,
												"nodeType": "Return",
												"src": "6614:49:10"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:10",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5169:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5191:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1632,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5208:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5227:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:10"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5266:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5275:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1449",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1642,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1641,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "5275:12:10"
													},
													"referencedDeclaration": 1449,
													"src": "5275:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1449",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5289:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:10"
									},
									"scope": 1789,
									"src": "5140:1530:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "6897:166:10",
										"statements": [
											{
												"assignments": [
													1718,
													1721,
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1718,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "6908:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1717,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1721,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "6927:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1449",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1720,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1719,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1449,
																"src": "6927:12:10"
															},
															"referencedDeclaration": 1449,
															"src": "6927:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1738,
														"src": "6947:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1722,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1730,
												"initialValue": {
													"arguments": [
														{
															"id": 1725,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "6978:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1726,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "6984:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1727,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "6987:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1728,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "6990:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1724,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1595,
															1703
														],
														"referencedDeclaration": 1703,
														"src": "6967:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1449_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1732,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "7014:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1733,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "7021:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1731,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "7002:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1449_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:10"
											},
											{
												"expression": {
													"id": 1736,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1718,
													"src": "7047:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1737,
												"nodeType": "Return",
												"src": "7040:16:10"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:10",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "6820:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "6834:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1707,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "6843:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "6854:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:10"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "6888:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:10"
									},
									"scope": 1789,
									"src": "6803:260:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "7268:460:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1449",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1748,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "7282:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1449",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1749,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "7291:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:10",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1445,
														"src": "7291:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1449",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1449",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1754,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "7378:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1755,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "7387:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:10",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1446,
															"src": "7387:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1449",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "7483:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1449",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1763,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "7492:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:10",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1447,
																"src": "7492:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1449",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1449",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1774,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "7617:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1449",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1775,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "7626:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1449_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:10",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1448,
																	"src": "7626:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1449",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1783,
															"nodeType": "IfStatement",
															"src": "7613:109:10",
															"trueBody": {
																"id": 1782,
																"nodeType": "Block",
																"src": "7658:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1779,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1745,
																					"src": "7702:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1778,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1462,
																				"src": "7679:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1781,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:10"
																	}
																]
															}
														},
														"id": 1784,
														"nodeType": "IfStatement",
														"src": "7479:243:10",
														"trueBody": {
															"id": 1773,
															"nodeType": "Block",
															"src": "7529:78:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1769,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1745,
																						"src": "7586:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1767,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1766,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "7550:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1772,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:10"
																}
															]
														}
													},
													"id": 1785,
													"nodeType": "IfStatement",
													"src": "7374:348:10",
													"trueBody": {
														"id": 1761,
														"nodeType": "Block",
														"src": "7418:55:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1758,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "7439:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1760,
																"nodeType": "RevertStatement",
																"src": "7432:30:10"
															}
														]
													}
												},
												"id": 1786,
												"nodeType": "IfStatement",
												"src": "7278:444:10",
												"trueBody": {
													"id": 1753,
													"nodeType": "Block",
													"src": "7313:55:10",
													"statements": [
														{
															"functionReturnParameters": 1747,
															"id": 1752,
															"nodeType": "Return",
															"src": "7327:7:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:10",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "7217:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1449",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "7217:12:10"
													},
													"referencedDeclaration": 1449,
													"src": "7217:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1449",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "7237:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:10"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:10"
									},
									"scope": 1789,
									"src": "7196:532:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1790,
							"src": "344:7386:10",
							"usedErrors": [
								1452,
								1457,
								1462
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2016
						],
						"IERC5267": [
							172
						],
						"MessageHashUtils": [
							2090
						],
						"ShortString": [
							865
						],
						"ShortStrings": [
							1076
						]
					},
					"id": 2017,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 1793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2017,
							"sourceUnit": 2091,
							"src": "139:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1792,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2090,
										"src": "147:16:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 1796,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2017,
							"sourceUnit": 1077,
							"src": "196:62:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1794,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "204:12:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1795,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 865,
										"src": "218:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 1798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2017,
							"sourceUnit": 173,
							"src": "259:55:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1797,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 172,
										"src": "267:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1800,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 172,
										"src": "1988:8:11"
									},
									"id": 1801,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:11"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1799,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:11",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2016,
							"linearizedBaseContracts": [
								2016,
								172
							],
							"name": "EIP712",
							"nameLocation": "1978:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1803,
									"libraryName": {
										"id": 1802,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "2009:12:11"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:11"
								},
								{
									"constant": true,
									"id": 1808,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2034:140:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1804,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1806,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1805,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1807,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1810,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2373:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1809,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1812,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2427:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1814,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2473:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1813,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1816,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2517:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1815,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1818,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2560:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1817,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1821,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2607:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1820,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1819,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 865,
											"src": "2607:11:11"
										},
										"referencedDeclaration": 865,
										"src": "2607:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1824,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2648:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1823,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1822,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 865,
											"src": "2648:11:11"
										},
										"referencedDeclaration": 865,
										"src": "2648:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1826,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2692:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1825,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1828,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "2726:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1827,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "3383:376:11",
										"statements": [
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1836,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "3393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1839,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "3432:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1837,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "3401:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:11",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1017,
															"src": "3401:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$865_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:11"
											},
											{
												"expression": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1843,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "3456:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1846,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "3501:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1844,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "3467:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:11",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1017,
															"src": "3467:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$865_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:11",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
														"typeString": "ShortString"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:11"
											},
											{
												"expression": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1850,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "3528:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1854,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "3558:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1852,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1851,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:11"
											},
											{
												"expression": {
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1859,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "3574:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1863,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "3607:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1861,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1860,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:11"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1868,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "3627:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1869,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:11",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:11"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1873,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "3667:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1874,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "3692:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:11"
											},
											{
												"expression": {
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1878,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "3725:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1881,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2016",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2016",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:11"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:11",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1886,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3340:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3360:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:11"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:11"
									},
									"scope": 2016,
									"src": "3328:431:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "3907:200:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1894,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2016",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2016",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1896,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "3938:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1898,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:11",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1900,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "3970:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1909,
													"nodeType": "Block",
													"src": "4046:55:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1906,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "4067:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1891,
															"id": 1908,
															"nodeType": "Return",
															"src": "4060:30:11"
														}
													]
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "3917:184:11",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "3986:54:11",
													"statements": [
														{
															"expression": {
																"id": 1903,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "4007:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1891,
															"id": 1904,
															"nodeType": "Return",
															"src": "4000:29:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:11",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:11"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "3898:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:11"
									},
									"scope": 2016,
									"src": "3845:262:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "4177:115:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1920,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "4215:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1921,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "4226:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1922,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "4239:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1923,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:11",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1927,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2016",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2016",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1925,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1918,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:11",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1917,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1916,
												"id": 1931,
												"nodeType": "Return",
												"src": "4187:98:11"
											}
										]
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:11"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "4168:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:11"
									},
									"scope": 2016,
									"src": "4113:179:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "5003:90:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1943,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1912,
																"src": "5053:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1945,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "5075:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1941,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "5020:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2090_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:11",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2089,
														"src": "5020:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1947,
												"nodeType": "Return",
												"src": "5013:73:11"
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:11",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4943:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:11"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4994:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1938,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:11"
									},
									"scope": 2016,
									"src": "4917:176:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										171
									],
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "5472:229:11",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1969,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "5533:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1971,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "5560:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1973,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:11",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1977,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2016",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2016",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1979,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1983,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1984,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1988,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1967,
												"id": 1989,
												"nodeType": "Return",
												"src": "5482:212:11"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:11",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:11"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5242:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5269:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1954,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5301:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1956,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5336:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5365:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5404:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5430:27:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1964,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1965,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:11"
									},
									"scope": 2016,
									"src": "5144:557:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "6082:65:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1999,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "6126:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1997,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "6099:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																"typeString": "ShortString"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:11",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "6099:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$865_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$865_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1996,
												"id": 2001,
												"nodeType": "Return",
												"src": "6092:48:11"
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:11",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:11"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "6067:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1994,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:11"
									},
									"scope": 2016,
									"src": "6021:126:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "6537:71:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2011,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "6584:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2009,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "6554:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$865",
																"typeString": "ShortString"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:11",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "6554:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$865_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$865_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2013,
												"nodeType": "Return",
												"src": "6547:54:11"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:11",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:11"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "6522:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:11"
									},
									"scope": 2016,
									"src": "6473:135:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2017,
							"src": "1960:4650:11",
							"usedErrors": [
								873,
								875
							],
							"usedEvents": [
								152
							]
						}
					],
					"src": "113:6498:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2090
						],
						"Strings": [
							1441
						]
					},
					"id": 2091,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2018,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2020,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2091,
							"sourceUnit": 1442,
							"src": "149:39:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2019,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1441,
										"src": "157:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2021,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:12",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2090,
							"linearizedBaseContracts": [
								2090
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "1314:368:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:12",
													"nodeType": "YulBlock",
													"src": "1376:300:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:12",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:12",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:12"
																},
																"nativeSrc": "1390:48:12",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:12"
															},
															"nativeSrc": "1390:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:12",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:12"
																},
																"nativeSrc": "1492:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:12"
															},
															"nativeSrc": "1492:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:12"
														},
														{
															"nativeSrc": "1571:31:12",
															"nodeType": "YulAssignment",
															"src": "1571:31:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:12",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:12",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:12"
																},
																"nativeSrc": "1581:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:12"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2027,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:12",
														"valueSize": 1
													}
												],
												"id": 2029,
												"nodeType": "InlineAssembly",
												"src": "1367:309:12"
											}
										]
									},
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:12",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1254:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:12"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1298:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:12"
									},
									"scope": 2090,
									"src": "1222:460:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "2234:143:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2048,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2034,
																						"src": "2343:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2049,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:12",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2046,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1441,
																					"src": "2326:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1441_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:12",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1254,
																				"src": "2326:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2044,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2052,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "2361:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2040,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:12",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2039,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2055,
												"nodeType": "Return",
												"src": "2244:126:12"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:12",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "2180:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:12"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "2225:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2036,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:12"
									},
									"scope": 2090,
									"src": "2148:229:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "2831:80:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2071,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "2887:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2072,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "2898:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2068,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2067,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2066,
												"id": 2075,
												"nodeType": "Return",
												"src": "2841:63:12"
											}
										]
									},
									"documentation": {
										"id": 2058,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:12",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "2761:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "2780:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:12"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "2822:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2064,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:12"
									},
									"scope": 2090,
									"src": "2720:191:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "3462:292:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:12",
													"nodeType": "YulBlock",
													"src": "3524:224:12",
													"statements": [
														{
															"nativeSrc": "3538:22:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:12"
																},
																"nativeSrc": "3549:11:12",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:12"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:12",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:12"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:12",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:12",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:12"
																},
																"nativeSrc": "3573:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:12"
															},
															"nativeSrc": "3573:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:12",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:12"
																		},
																		"nativeSrc": "3616:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:12"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:12",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:12"
																},
																"nativeSrc": "3609:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:12"
															},
															"nativeSrc": "3609:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:12",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:12"
																		},
																		"nativeSrc": "3668:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:12"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:12"
																},
																"nativeSrc": "3661:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:12"
															},
															"nativeSrc": "3661:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:12"
														},
														{
															"nativeSrc": "3708:30:12",
															"nodeType": "YulAssignment",
															"src": "3708:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:12",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:12"
																},
																"nativeSrc": "3718:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:12"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2085,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2080,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:12",
														"valueSize": 1
													},
													{
														"declaration": 2082,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:12",
														"valueSize": 1
													}
												],
												"id": 2087,
												"nodeType": "InlineAssembly",
												"src": "3515:233:12"
											}
										]
									},
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:12",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "3378:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "3403:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2081,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:12"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "3446:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:12"
									},
									"scope": 2090,
									"src": "3353:401:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2091,
							"src": "521:3235:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3144
						]
					},
					"id": 3145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2092,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2093,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3144,
							"linearizedBaseContracts": [
								3144
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2096,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2101,
									"members": [
										{
											"id": 2097,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2098,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2099,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2100,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2131,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2114
														],
														"declarations": [
															{
																"constant": false,
																"id": 2114,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2131,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2113,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2118,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2115,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2119,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2120,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2126,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2124,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2112,
															"id": 2125,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2128,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2129,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2112,
														"id": 2130,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3144,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2159,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2138,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2146,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2152,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2144,
															"id": 2151,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2154,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2136,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2155,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2138,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2144,
														"id": 2158,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3144,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2201,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2180,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2179,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2182
														],
														"declarations": [
															{
																"constant": false,
																"id": 2182,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2201,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2186,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2183,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2184,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2187,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2188,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2196,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2194,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2195,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2198,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2199,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2172,
														"id": 2200,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3144,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2229,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2215,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2222,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2220,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2214,
															"id": 2221,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2224,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2225,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2227,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2214,
														"id": 2228,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2204,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3144,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2257,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2250,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2242,
															"id": 2249,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2252,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2255,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2242,
														"id": 2256,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3144,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2269,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2270,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2273,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2272,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2268,
												"id": 2275,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3144,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2294,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2287,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2288,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2291,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2290,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2286,
												"id": 2293,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3144,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2305,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2306,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2308,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2309,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2310,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2300,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2312,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2304,
												"id": 2316,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3144,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2351,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2323,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2336,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2335,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2331,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2332,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2327,
															"id": 2334,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2337,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2321,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2341,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2321,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2345,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2327,
												"id": 2350,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2319,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3144,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2476,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2365
														],
														"declarations": [
															{
																"constant": false,
																"id": 2365,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2476,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2364,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2369,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2366,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2367,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2357,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2371
														],
														"declarations": [
															{
																"constant": false,
																"id": 2371,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2476,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2370,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2372,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2371,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2355,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2373,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2374,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2382,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2381,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2377,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2365,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2378,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2359,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2363,
																	"id": 2380,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2383,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2384,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2390,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2389,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2386,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2096,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2388,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2392
														],
														"declarations": [
															{
																"constant": false,
																"id": 2392,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2476,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2391,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2393,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2359,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2371,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2371,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2392,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2392,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2392,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2355,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2394,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2396
														],
														"declarations": [
															{
																"constant": false,
																"id": 2396,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2476,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2403,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2397,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2399,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2359,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2359,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2359,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2365,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2396,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2396,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2396,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2396,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2396,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2404,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2405,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2365,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2406,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2407,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2410,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2412
														],
														"declarations": [
															{
																"constant": false,
																"id": 2412,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2476,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2411,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2419,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2414,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2359,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2420,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2422,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2423,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2427,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2428,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2430,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2431,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2435,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2436,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2438,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2439,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2443,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2444,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2446,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2447,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2451,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2452,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2454,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2455,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2459,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2460,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2462,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2463,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2467,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2469,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2470,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2473,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2474,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2363,
														"id": 2475,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3144,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2520,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2494
												],
												"declarations": [
													{
														"constant": false,
														"id": 2494,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2520,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2500,
												"initialValue": {
													"arguments": [
														{
															"id": 2496,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2497,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2498,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2495,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2478,
															2521
														],
														"referencedDeclaration": 2478,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2502,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2101",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2101",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2501,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3143,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2101_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2505,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2506,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2507,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2485,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2504,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2517,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2516,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2512,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2515,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2518,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2494,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2492,
												"id": 2519,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2101",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2486,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2101,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2101",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3144,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2632,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2529,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2535,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2534,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2528,
															"id": 2533,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2537
												],
												"declarations": [
													{
														"constant": false,
														"id": 2537,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2632,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2546,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2540,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2524,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2539,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2800,
																			2835
																		],
																		"referencedDeclaration": 2800,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2544,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2631,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2547,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2548,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2549,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2550,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2553,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2557,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2558,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2559,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2560,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2561,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2564,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2568,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2569,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2570,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2571,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2572,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2575,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2579,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2580,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2581,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2582,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2583,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2586,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2590,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2591,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2592,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2593,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2594,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2597,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2601,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2602,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2603,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2604,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2605,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2608,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2612,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2613,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2614,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2615,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2524,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2616,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2619,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2623,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2625,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2537,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2626,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2524,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2627,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2537,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2624,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2528,
														"id": 2630,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2522,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3144,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2667,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2666,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2645
														],
														"declarations": [
															{
																"constant": false,
																"id": 2645,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2666,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2644,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2649,
														"initialValue": {
															"arguments": [
																{
																	"id": 2647,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2636,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2646,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2633,
																	2668
																],
																"referencedDeclaration": 2633,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2650,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2645,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2652,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2639,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2651,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3143,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2101_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2654,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2645,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2655,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2645,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2657,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2636,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2663,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2643,
														"id": 2665,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2634,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2101",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2637,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2101,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2101",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3144,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2677
												],
												"declarations": [
													{
														"constant": false,
														"id": 2677,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2799,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2679,
												"initialValue": {
													"hexValue": "30",
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2796,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2680,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2694,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2693,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2688,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2692,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2695,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2709,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2708,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2703,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2704,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2707,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2710,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2724,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2723,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2739,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2738,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2734,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2737,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2740,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2754,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2753,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2745,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2748,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2749,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2752,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2769,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2768,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2760,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2763,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2767,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2770,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2784,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2783,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2778,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2779,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2782,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2785,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2795,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2794,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2790,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2677,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2797,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2677,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2675,
												"id": 2798,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3144,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2833,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2812
														],
														"declarations": [
															{
																"constant": false,
																"id": 2812,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2833,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2811,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2816,
														"initialValue": {
															"arguments": [
																{
																	"id": 2814,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2813,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2800,
																	2835
																],
																"referencedDeclaration": 2800,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2817,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2812,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2819,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2806,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2818,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3143,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2101_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2822,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2812,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2824,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2803,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2830,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2810,
														"id": 2832,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2101",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2804,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2101,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2101",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3144,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2844
												],
												"declarations": [
													{
														"constant": false,
														"id": 2844,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2963,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2846,
												"initialValue": {
													"hexValue": "30",
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2960,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2847,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2863,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2862,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2852,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2857,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2858,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2861,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2864,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2880,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2879,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2869,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2874,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2875,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2878,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2881,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2897,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2896,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2886,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2898,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2914,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2913,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2903,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2908,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2909,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2912,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2915,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2931,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2930,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2920,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2925,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2926,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2929,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2932,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2948,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2947,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2942,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2946,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2949,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2959,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2958,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2844,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2844,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2842,
												"id": 2962,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3144,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 2997,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															2976
														],
														"declarations": [
															{
																"constant": false,
																"id": 2976,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2997,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2980,
														"initialValue": {
															"arguments": [
																{
																	"id": 2978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2967,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2977,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2964,
																	2999
																],
																"referencedDeclaration": 2964,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2981,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2976,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2983,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2970,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2982,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3143,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2101_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2985,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2986,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2976,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2988,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2967,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2974,
														"id": 2996,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2965,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2101",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2968,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2101,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2101",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3144,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3085,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													3008
												],
												"declarations": [
													{
														"constant": false,
														"id": 3008,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3085,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3010,
												"initialValue": {
													"hexValue": "30",
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3082,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3025,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3024,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3019,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3008,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3023,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3026,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3040,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3039,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3034,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3035,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3008,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3038,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3055,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3054,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3046,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3049,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3050,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3008,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3053,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3070,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3069,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3061,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3064,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3065,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3008,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3068,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3081,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3080,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3076,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3008,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3079,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3083,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3008,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3006,
												"id": 3084,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 3000,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3086,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3086,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3144,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3123,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3122,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3098
														],
														"declarations": [
															{
																"constant": false,
																"id": 3098,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3122,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3097,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3102,
														"initialValue": {
															"arguments": [
																{
																	"id": 3100,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3089,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3099,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3086,
																	3124
																],
																"referencedDeclaration": 3086,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3103,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3098,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3105,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3092,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2101",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3104,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3143,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2101_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3110,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3108,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3098,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3109,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3111,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3113,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3089,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3119,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3096,
														"id": 3121,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3087,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2101",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3091,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3090,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2101,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2101",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3124,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3144,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3135,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3128,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2101",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2101",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3133,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3132,
												"id": 3141,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3125,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2101",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3126,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2101,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2101",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3144,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3145,
							"src": "203:14914:13",
							"usedErrors": [
								2096
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3249
						]
					},
					"id": 3250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3147,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3249,
							"linearizedBaseContracts": [
								3249
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3164,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3157,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3158,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3161,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3152,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 3160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3156,
												"id": 3163,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 3148,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3165,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3149,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3165,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3165,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3154,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3249,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3182,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3175,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3168,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3176,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3170,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3179,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3170,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 3178,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3168,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3174,
												"id": 3181,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 3166,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3168,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3167,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3172,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3249,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3226,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													3194
												],
												"declarations": [
													{
														"constant": false,
														"id": 3194,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3226,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3193,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3207,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3195,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3196,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3188,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3198,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3199,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3186,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3200,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3188,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3202,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3205,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3208,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3194,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3213,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3211,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3209,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3218,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3186,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3219,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3188,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3192,
												"id": 3225,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 3184,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3185,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3187,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 3192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3190,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3249,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3247,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3246,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3237,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3230,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3241,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3230,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3240,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3230,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3235,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3234,
														"id": 3245,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3228,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3248,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3229,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3248,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3249,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3250,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"src/ribbonVault1.sol": {
				"ast": {
					"absolutePath": "src/ribbonVault1.sol",
					"exportedSymbols": {
						"Address": [
							829
						],
						"Context": [
							859
						],
						"ECDSA": [
							1789
						],
						"EIP712": [
							2016
						],
						"IERC20": [
							250
						],
						"IERC20Permit": [
							286
						],
						"IERC20T": [
							3284
						],
						"IERC5267": [
							172
						],
						"MessageHashUtils": [
							2090
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							576
						],
						"ShortString": [
							865
						],
						"ShortStrings": [
							1076
						],
						"vault": [
							3879
						]
					},
					"id": 3880,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3251,
							"literals": [
								"solidity",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3880,
							"sourceUnit": 148,
							"src": "73:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 3253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3880,
							"sourceUnit": 1790,
							"src": "127:62:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"id": 3254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3880,
							"sourceUnit": 2017,
							"src": "191:63:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3880,
							"sourceUnit": 577,
							"src": "256:65:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20T",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3284,
							"linearizedBaseContracts": [
								3284
							],
							"name": "IERC20T",
							"nameLocation": "335:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 3260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "359:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:15"
									},
									"returnParameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "392:5:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "392:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:7:15"
									},
									"scope": 3284,
									"src": "350:49:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 3267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "416:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "434:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "426:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:17:15"
									},
									"returnParameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "466:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:9:15"
									},
									"scope": 3284,
									"src": "407:68:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 3276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "490:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "507:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "499:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "519:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "511:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:27:15"
									},
									"returnParameters": {
										"id": 3275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "544:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:6:15"
									},
									"scope": 3284,
									"src": "481:69:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 3283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "565:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "578:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "570:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "595:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "587:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:32:15"
									},
									"returnParameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:15"
									},
									"scope": 3284,
									"src": "556:54:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3880,
							"src": "325:299:15",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3286,
										"name": "Ownable",
										"nameLocations": [
											"669:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "669:7:15"
									},
									"id": 3287,
									"nodeType": "InheritanceSpecifier",
									"src": "669:7:15"
								},
								{
									"baseName": {
										"id": 3288,
										"name": "EIP712",
										"nameLocations": [
											"677:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2016,
										"src": "677:6:15"
									},
									"id": 3289,
									"nodeType": "InheritanceSpecifier",
									"src": "677:6:15"
								}
							],
							"canonicalName": "vault",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3285,
								"nodeType": "StructuredDocumentation",
								"src": "626:24:15",
								"text": "@title RibbonVault"
							},
							"fullyImplemented": true,
							"id": 3879,
							"linearizedBaseContracts": [
								3879,
								2016,
								172,
								147,
								859
							],
							"name": "vault",
							"nameLocation": "660:5:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3293,
									"libraryName": {
										"id": 3290,
										"name": "SafeERC20",
										"nameLocations": [
											"695:9:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 576,
										"src": "695:9:15"
									},
									"nodeType": "UsingForDirective",
									"src": "689:27:15",
									"typeName": {
										"id": 3292,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3291,
											"name": "IERC20",
											"nameLocations": [
												"709:6:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 250,
											"src": "709:6:15"
										},
										"referencedDeclaration": 250,
										"src": "709:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$250",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 3298,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "747:15:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "722:124:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3294,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e7432353620646561646c696e6529",
												"id": 3296,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "775:70:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_05619a74ecd0240afc3bfb1df2bd1319401220fb577809c3a09bf0ab809ac861",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_05619a74ecd0240afc3bfb1df2bd1319401220fb577809c3a09bf0ab809ac861",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 deadline)\""
												}
											],
											"id": 3295,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "765:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3297,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "765:81:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3301,
									"mutability": "mutable",
									"name": "_Ipaymentcoin",
									"nameLocation": "871:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "863:21:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20T_$3284",
										"typeString": "contract IERC20T"
									},
									"typeName": {
										"id": 3300,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3299,
											"name": "IERC20T",
											"nameLocations": [
												"863:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3284,
											"src": "863:7:15"
										},
										"referencedDeclaration": 3284,
										"src": "863:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20T_$3284",
											"typeString": "contract IERC20T"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3304,
									"mutability": "mutable",
									"name": "_IpaymentcoinT",
									"nameLocation": "936:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "921:29:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$250",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3303,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3302,
											"name": "IERC20",
											"nameLocations": [
												"921:6:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 250,
											"src": "921:6:15"
										},
										"referencedDeclaration": 250,
										"src": "921:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$250",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "67a52793",
									"id": 3306,
									"mutability": "mutable",
									"name": "depositFee",
									"nameLocation": "1222:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1210:22:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3305,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1210:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 3308,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "1251:4:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1239:16:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3307,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1239:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8bc7e8c4",
									"id": 3310,
									"mutability": "mutable",
									"name": "withdrawalFee",
									"nameLocation": "1274:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1262:25:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3309,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1262:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1fefd42",
									"id": 3312,
									"mutability": "mutable",
									"name": "pointsMin",
									"nameLocation": "1306:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1294:21:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3311,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1294:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06e0e582",
									"id": 3314,
									"mutability": "mutable",
									"name": "initContractBalancePaymentCoin",
									"nameLocation": "1334:30:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1322:42:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3313,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1322:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fd918716",
									"id": 3316,
									"mutability": "mutable",
									"name": "claimedPaymentCoin",
									"nameLocation": "1383:18:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1371:30:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3315,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1371:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c4a9e858",
									"id": 3318,
									"mutability": "mutable",
									"name": "TotalfeescollectedPaymentCoin",
									"nameLocation": "1420:29:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1408:41:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3317,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1408:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ace9ca0",
									"id": 3320,
									"mutability": "mutable",
									"name": "vaultName",
									"nameLocation": "1470:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1456:23:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3319,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1456:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 3322,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "1501:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1486:20:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3321,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1486:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "252de51b",
									"id": 3324,
									"mutability": "mutable",
									"name": "freezePermit",
									"nameLocation": "1525:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1513:24:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3323,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1513:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9a5f60e59cc27a7c25a7f78275c910454cd9adacb21cecff527c98ed63e02877",
									"id": 3336,
									"name": "swap",
									"nameLocation": "1552:4:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3326,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1573:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3336,
												"src": "1557:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1591:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3336,
												"src": "1578:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1578:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3330,
												"indexed": false,
												"mutability": "mutable",
												"name": "pointToSwap",
												"nameLocation": "1606:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3336,
												"src": "1601:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3329,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1601:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3332,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentTokenRecieved",
												"nameLocation": "1623:20:15",
												"nodeType": "VariableDeclaration",
												"scope": 3336,
												"src": "1618:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1618:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3334,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fees",
												"nameLocation": "1649:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3336,
												"src": "1644:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1644:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:99:15"
									},
									"src": "1546:110:15"
								},
								{
									"anonymous": false,
									"eventSelector": "d8fb6dbeaadff1d38bb96624ec3bd037611260d2b198d0f78cc1f0955563e756",
									"id": 3344,
									"name": "PointsClaimed",
									"nameLocation": "1668:13:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3338,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1698:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "1682:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3340,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1716:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "1703:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3342,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1731:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "1726:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1726:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1681:57:15"
									},
									"src": "1662:77:15"
								},
								{
									"errorSelector": "62791302",
									"id": 3348,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1751:23:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3346,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1783:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "1775:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:15"
									},
									"src": "1745:48:15"
								},
								{
									"errorSelector": "4b800e46",
									"id": 3354,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1805:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3350,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1834:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3354,
												"src": "1826:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1850:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3354,
												"src": "1842:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:31:15"
									},
									"src": "1799:58:15"
								},
								{
									"constant": false,
									"id": 3358,
									"mutability": "mutable",
									"name": "sig_v",
									"nameLocation": "1887:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1865:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
										"typeString": "mapping(uint8 => bool)"
									},
									"typeName": {
										"id": 3357,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3355,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "1874:5:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "1865:21:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
											"typeString": "mapping(uint8 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3356,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1881:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3362,
									"mutability": "mutable",
									"name": "sig_r",
									"nameLocation": "1923:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1899:29:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 3361,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3359,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1908:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1899:23:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3360,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1917:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3366,
									"mutability": "mutable",
									"name": "sig_s",
									"nameLocation": "1959:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3879,
									"src": "1935:29:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 3365,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3363,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1944:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1935:23:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3364,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1953:4:15",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3411,
										"nodeType": "Block",
										"src": "2507:206:15",
										"statements": [
											{
												"expression": {
													"id": 3385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3383,
														"name": "vaultName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "2518:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3384,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3371,
														"src": "2528:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2518:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3386,
												"nodeType": "ExpressionStatement",
												"src": "2518:14:15"
											},
											{
												"expression": {
													"id": 3389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3387,
														"name": "depositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3306,
														"src": "2543:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 3388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2555:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2543:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3390,
												"nodeType": "ExpressionStatement",
												"src": "2543:14:15"
											},
											{
												"expression": {
													"id": 3393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3391,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3308,
														"src": "2568:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 3392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2575:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "2568:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3394,
												"nodeType": "ExpressionStatement",
												"src": "2568:11:15"
											},
											{
												"expression": {
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3395,
														"name": "_Ipaymentcoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3301,
														"src": "2590:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20T_$3284",
															"typeString": "contract IERC20T"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3397,
																"name": "paymentAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3373,
																"src": "2614:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3396,
															"name": "IERC20T",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3284,
															"src": "2606:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20T_$3284_$",
																"typeString": "type(contract IERC20T)"
															}
														},
														"id": 3398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2606:23:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20T_$3284",
															"typeString": "contract IERC20T"
														}
													},
													"src": "2590:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20T_$3284",
														"typeString": "contract IERC20T"
													}
												},
												"id": 3400,
												"nodeType": "ExpressionStatement",
												"src": "2590:39:15"
											},
											{
												"expression": {
													"id": 3405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3401,
														"name": "_IpaymentcoinT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3304,
														"src": "2640:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3403,
																"name": "paymentAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3373,
																"src": "2664:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3402,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "2657:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$250_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2657:22:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"src": "2640:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"id": 3406,
												"nodeType": "ExpressionStatement",
												"src": "2640:39:15"
											},
											{
												"expression": {
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3407,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "2690:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3408,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3369,
														"src": "2698:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2690:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3410,
												"nodeType": "ExpressionStatement",
												"src": "2690:13:15"
											}
										]
									},
									"documentation": {
										"id": 3367,
										"nodeType": "StructuredDocumentation",
										"src": "2319:83:15",
										"text": "@param paymentAddress the contract address that the points would be swaped into"
									},
									"id": 3412,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3376,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3369,
													"src": "2484:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3377,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3375,
												"name": "Ownable",
												"nameLocations": [
													"2476:7:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2476:7:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2476:14:15"
										},
										{
											"arguments": [
												{
													"id": 3379,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3371,
													"src": "2497:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3380,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2503:3:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3381,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3378,
												"name": "EIP712",
												"nameLocations": [
													"2490:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2016,
												"src": "2490:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2490:17:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2428:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3412,
												"src": "2420:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2448:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3412,
												"src": "2434:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2434:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "paymentAddress",
												"nameLocation": "2461:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3412,
												"src": "2453:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:57:15"
									},
									"returnParameters": {
										"id": 3382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2507:0:15"
									},
									"scope": 3879,
									"src": "2408:305:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3442,
										"nodeType": "Block",
										"src": "3135:131:15",
										"statements": [
											{
												"assignments": [
													3421
												],
												"declarations": [
													{
														"constant": false,
														"id": 3421,
														"mutability": "mutable",
														"name": "_rate",
														"nameLocation": "3153:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3442,
														"src": "3148:10:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3420,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3148:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3439,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3422,
																		"name": "pointToSwap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3415,
																		"src": "3162:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3176:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3162:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 3425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3178:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 3426,
																				"name": "_Ipaymentcoin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3301,
																				"src": "3182:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20T_$3284",
																					"typeString": "contract IERC20T"
																				}
																			},
																			"id": 3427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3196:8:15",
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3260,
																			"src": "3182:22:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																				"typeString": "function () view external returns (uint8)"
																			}
																		},
																		"id": 3428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3182:24:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3178:28:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3162:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3431,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3161:46:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3432,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3308,
																	"src": "3209:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 3435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 3433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3214:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 3434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3218:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3214:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3209:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3437,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3208:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3161:60:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3148:73:15"
											},
											{
												"expression": {
													"id": 3440,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3421,
													"src": "3241:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3419,
												"id": 3441,
												"nodeType": "Return",
												"src": "3234:12:15"
											}
										]
									},
									"documentation": {
										"id": 3413,
										"nodeType": "StructuredDocumentation",
										"src": "2939:119:15",
										"text": "@dev used to calcultae amount of the worldcoin token or other payment token to recieve at a specific rate specified"
									},
									"functionSelector": "0d461e61",
									"id": 3443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAmountToRecive",
									"nameLocation": "3073:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3415,
												"mutability": "mutable",
												"name": "pointToSwap",
												"nameLocation": "3098:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "3093:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3093:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:18:15"
									},
									"returnParameters": {
										"id": 3419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "3130:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3130:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:6:15"
									},
									"scope": 3879,
									"src": "3064:202:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3451,
										"nodeType": "Block",
										"src": "3346:46:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3448,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "3364:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3364:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3447,
												"id": 3450,
												"nodeType": "Return",
												"src": "3357:27:15"
											}
										]
									},
									"functionSelector": "3644e515",
									"id": 3452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3287:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3303:2:15"
									},
									"returnParameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3452,
												"src": "3337:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:9:15"
									},
									"scope": 3879,
									"src": "3278:114:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3464,
										"nodeType": "Block",
										"src": "3697:30:15",
										"statements": [
											{
												"expression": {
													"id": 3462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3460,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "3706:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3461,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3455,
														"src": "3713:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3706:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3463,
												"nodeType": "ExpressionStatement",
												"src": "3706:13:15"
											}
										]
									},
									"documentation": {
										"id": 3453,
										"nodeType": "StructuredDocumentation",
										"src": "3612:30:15",
										"text": "@dev update padmin address"
									},
									"functionSelector": "704b6c02",
									"id": 3465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3457,
												"name": "onlyOwner",
												"nameLocations": [
													"3688:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3688:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3688:9:15"
										}
									],
									"name": "setAdmin",
									"nameLocation": "3657:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "3674:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "3666:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3666:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3665:16:15"
									},
									"returnParameters": {
										"id": 3459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3697:0:15"
									},
									"scope": 3879,
									"src": "3648:79:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3485,
										"nodeType": "Block",
										"src": "3908:119:15",
										"statements": [
											{
												"expression": {
													"id": 3477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3473,
														"name": "_Ipaymentcoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3301,
														"src": "3918:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20T_$3284",
															"typeString": "contract IERC20T"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3475,
																"name": "paymentAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3468,
																"src": "3942:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3474,
															"name": "IERC20T",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3284,
															"src": "3934:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20T_$3284_$",
																"typeString": "type(contract IERC20T)"
															}
														},
														"id": 3476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3934:23:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20T_$3284",
															"typeString": "contract IERC20T"
														}
													},
													"src": "3918:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20T_$3284",
														"typeString": "contract IERC20T"
													}
												},
												"id": 3478,
												"nodeType": "ExpressionStatement",
												"src": "3918:39:15"
											},
											{
												"expression": {
													"id": 3483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3479,
														"name": "_IpaymentcoinT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3304,
														"src": "3967:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3481,
																"name": "paymentAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3468,
																"src": "3991:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3480,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3984:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$250_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3984:22:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$250",
															"typeString": "contract IERC20"
														}
													},
													"src": "3967:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$250",
														"typeString": "contract IERC20"
													}
												},
												"id": 3484,
												"nodeType": "ExpressionStatement",
												"src": "3967:39:15"
											}
										]
									},
									"documentation": {
										"id": 3466,
										"nodeType": "StructuredDocumentation",
										"src": "3736:93:15",
										"text": "@dev update points contract address and worldcoin token or other payment contract address"
									},
									"functionSelector": "cbeacb80",
									"id": 3486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3471,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3470,
												"name": "onlyOwner",
												"nameLocations": [
													"3899:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3899:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3899:9:15"
										}
									],
									"name": "setpaymentTokenAndpoints",
									"nameLocation": "3844:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3468,
												"mutability": "mutable",
												"name": "paymentAddress",
												"nameLocation": "3877:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "3869:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3869:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3868:24:15"
									},
									"returnParameters": {
										"id": 3472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:0:15"
									},
									"scope": 3879,
									"src": "3835:192:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3498,
										"nodeType": "Block",
										"src": "4139:35:15",
										"statements": [
											{
												"expression": {
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3494,
														"name": "depositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3306,
														"src": "4149:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3495,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3489,
														"src": "4162:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4149:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3497,
												"nodeType": "ExpressionStatement",
												"src": "4149:17:15"
											}
										]
									},
									"documentation": {
										"id": 3487,
										"nodeType": "StructuredDocumentation",
										"src": "4035:41:15",
										"text": "@dev set depositFee  without decimal "
									},
									"functionSelector": "76ee947f",
									"id": 3499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3491,
												"name": "onlyOwner",
												"nameLocations": [
													"4130:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4130:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4130:9:15"
										}
									],
									"name": "setPaymentDepositfees",
									"nameLocation": "4091:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "4118:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3499,
												"src": "4113:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4113:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:11:15"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4139:0:15"
									},
									"scope": 3879,
									"src": "4082:92:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3511,
										"nodeType": "Block",
										"src": "4284:38:15",
										"statements": [
											{
												"expression": {
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3507,
														"name": "withdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "4294:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3508,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3502,
														"src": "4310:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4294:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3510,
												"nodeType": "ExpressionStatement",
												"src": "4294:20:15"
											}
										]
									},
									"documentation": {
										"id": 3500,
										"nodeType": "StructuredDocumentation",
										"src": "4182:44:15",
										"text": "@dev set withdrawalFee  without decimal "
									},
									"functionSelector": "ac1e5025",
									"id": 3512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3504,
												"name": "onlyOwner",
												"nameLocations": [
													"4275:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4275:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4275:9:15"
										}
									],
									"name": "setWithdrawalFee",
									"nameLocation": "4241:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3502,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "4263:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "4258:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4258:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:11:15"
									},
									"returnParameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4284:0:15"
									},
									"scope": 3879,
									"src": "4232:90:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3524,
										"nodeType": "Block",
										"src": "4416:32:15",
										"statements": [
											{
												"expression": {
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3520,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3308,
														"src": "4428:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3521,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3515,
														"src": "4435:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4428:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3523,
												"nodeType": "ExpressionStatement",
												"src": "4428:12:15"
											}
										]
									},
									"documentation": {
										"id": 3513,
										"nodeType": "StructuredDocumentation",
										"src": "4330:36:15",
										"text": "@dev set _rate  without decimal "
									},
									"functionSelector": "34fcf437",
									"id": 3525,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3517,
												"name": "onlyOwner",
												"nameLocations": [
													"4407:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4407:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4407:9:15"
										}
									],
									"name": "setRate",
									"nameLocation": "4381:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "4394:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3525,
												"src": "4389:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3514,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4389:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:12:15"
									},
									"returnParameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4416:0:15"
									},
									"scope": 3879,
									"src": "4372:76:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3541,
										"nodeType": "Block",
										"src": "4657:49:15",
										"statements": [
											{
												"expression": {
													"id": 3539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3533,
														"name": "pointsMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3312,
														"src": "4669:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3534,
															"name": "_pointsMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3528,
															"src": "4681:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 3537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 3535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4692:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 3536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4696:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "4692:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "4681:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4669:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3540,
												"nodeType": "ExpressionStatement",
												"src": "4669:29:15"
											}
										]
									},
									"documentation": {
										"id": 3526,
										"nodeType": "StructuredDocumentation",
										"src": "4456:135:15",
										"text": "@dev set minimum points to swap without decimal\n @notice 18 decimal was hardcoded because the points contract is 18 decimal"
									},
									"functionSelector": "c08e7286",
									"id": 3542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3530,
												"name": "onlyOwner",
												"nameLocations": [
													"4648:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4648:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4648:9:15"
										}
									],
									"name": "setMinPointsToSWap",
									"nameLocation": "4606:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3528,
												"mutability": "mutable",
												"name": "_pointsMin",
												"nameLocation": "4630:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "4625:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4625:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:17:15"
									},
									"returnParameters": {
										"id": 3532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4657:0:15"
									},
									"scope": 3879,
									"src": "4597:109:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3554,
										"nodeType": "Block",
										"src": "4892:38:15",
										"statements": [
											{
												"expression": {
													"id": 3552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3550,
														"name": "freezePermit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3324,
														"src": "4900:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3551,
														"name": "_freeze",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3545,
														"src": "4915:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4900:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3553,
												"nodeType": "ExpressionStatement",
												"src": "4900:22:15"
											}
										]
									},
									"documentation": {
										"id": 3543,
										"nodeType": "StructuredDocumentation",
										"src": "4714:119:15",
										"text": "@dev used to stop the permit functions to claim point and and swap points to worldcoin token or other payment coin "
									},
									"functionSelector": "6b4c0789",
									"id": 3555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3547,
												"name": "onlyOwner",
												"nameLocations": [
													"4883:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4883:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4883:9:15"
										}
									],
									"name": "freezeContract",
									"nameLocation": "4848:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "_freeze",
												"nameLocation": "4868:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "4863:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:14:15"
									},
									"returnParameters": {
										"id": 3549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4892:0:15"
									},
									"scope": 3879,
									"src": "4839:91:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3625,
										"nodeType": "Block",
										"src": "5233:568:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3564,
																"name": "feeTakerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3558,
																"src": "5251:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5278:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5270:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3565,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5270:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5270:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5251:29:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206172652073656e64696e6720746f207a65726f2061646472657373",
															"id": 3570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5281:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															},
															"value": "you are sending to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															}
														],
														"id": 3563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5243:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5243:72:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3572,
												"nodeType": "ExpressionStatement",
												"src": "5243:72:15"
											},
											{
												"assignments": [
													3574
												],
												"declarations": [
													{
														"constant": false,
														"id": 3574,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "5330:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 3625,
														"src": "5325:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3573,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5325:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3582,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3579,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5379:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_vault_$3879",
																		"typeString": "contract vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_vault_$3879",
																		"typeString": "contract vault"
																	}
																],
																"id": 3578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5371:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3577,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5371:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5371:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3575,
															"name": "_Ipaymentcoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3301,
															"src": "5347:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20T_$3284",
																"typeString": "contract IERC20T"
															}
														},
														"id": 3576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5361:9:15",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3267,
														"src": "5347:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5347:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5325:60:15"
											},
											{
												"assignments": [
													3584
												],
												"declarations": [
													{
														"constant": false,
														"id": 3584,
														"mutability": "mutable",
														"name": "balanceDeposited",
														"nameLocation": "5400:16:15",
														"nodeType": "VariableDeclaration",
														"scope": 3625,
														"src": "5395:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3583,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5395:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3593,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3585,
																		"name": "contractBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3574,
																		"src": "5420:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3586,
																		"name": "claimedPaymentCoin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3316,
																		"src": "5438:18:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5420:36:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3588,
																	"name": "TotalfeescollectedPaymentCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3318,
																	"src": "5459:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5420:68:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3590,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5419:70:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3591,
														"name": "initContractBalancePaymentCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3314,
														"src": "5492:30:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5419:103:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5395:127:15"
											},
											{
												"expression": {
													"id": 3596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3594,
														"name": "initContractBalancePaymentCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3314,
														"src": "5532:30:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3595,
														"name": "balanceDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3584,
														"src": "5566:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5532:50:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3597,
												"nodeType": "ExpressionStatement",
												"src": "5532:50:15"
											},
											{
												"assignments": [
													3599
												],
												"declarations": [
													{
														"constant": false,
														"id": 3599,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "5597:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3625,
														"src": "5592:9:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3598,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5592:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3606,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3600,
																	"name": "balanceDeposited",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3584,
																	"src": "5605:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3601,
																	"name": "depositFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "5622:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5605:27:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3603,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5604:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5634:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "5604:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5592:45:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3608,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3599,
																"src": "5655:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5662:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5655:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f206e6577206465706f736974206164646564",
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5664:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d76893c2f0238fd9c77950c3a3abca4482a5081e88db2e94ed7f1a183b26a26",
																"typeString": "literal_string \"no new deposit added\""
															},
															"value": "no new deposit added"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d76893c2f0238fd9c77950c3a3abca4482a5081e88db2e94ed7f1a183b26a26",
																"typeString": "literal_string \"no new deposit added\""
															}
														],
														"id": 3607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5647:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3613,
												"nodeType": "ExpressionStatement",
												"src": "5647:40:15"
											},
											{
												"expression": {
													"id": 3616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3614,
														"name": "TotalfeescollectedPaymentCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3318,
														"src": "5697:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3615,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3599,
														"src": "5730:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5697:37:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3617,
												"nodeType": "ExpressionStatement",
												"src": "5697:37:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3621,
															"name": "feeTakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3558,
															"src": "5772:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3622,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3599,
															"src": "5788:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3618,
															"name": "_IpaymentcoinT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3304,
															"src": "5744:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 3620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5759:12:15",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "5744:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$250_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5744:49:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3624,
												"nodeType": "ExpressionStatement",
												"src": "5744:49:15"
											}
										]
									},
									"documentation": {
										"id": 3556,
										"nodeType": "StructuredDocumentation",
										"src": "4938:226:15",
										"text": "@dev used withdraw fees when a new deposit is address into the contract the computation allows fees to be deducted when new deposit is added \n when no new deposit is added and this function is called it will revert"
									},
									"functionSelector": "9683cdc4",
									"id": 3626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3560,
												"name": "onlyOwner",
												"nameLocations": [
													"5224:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5224:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:9:15"
										}
									],
									"name": "withdrawfees",
									"nameLocation": "5179:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "feeTakerAddress",
												"nameLocation": "5200:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 3626,
												"src": "5192:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5191:25:15"
									},
									"returnParameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5233:0:15"
									},
									"scope": 3879,
									"src": "5170:631:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3724,
										"nodeType": "Block",
										"src": "6147:779:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3643,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3629,
																"src": "6166:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6182:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6174:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3644,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6174:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6166:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206172652073656e64696e6720746f207a65726f2061646472657373",
															"id": 3649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6185:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															},
															"value": "you are sending to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															}
														],
														"id": 3642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:61:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3651,
												"nodeType": "ExpressionStatement",
												"src": "6158:61:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3653,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3629,
															"src": "6238:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3654,
															"name": "pointToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "6243:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3655,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3633,
															"src": "6255:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3656,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "6264:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3657,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3637,
															"src": "6266:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3658,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3639,
															"src": "6268:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3652,
														"name": "_permit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3878,
														"src": "6230:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint8,bytes32,bytes32)"
														}
													},
													"id": 3659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6230:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3660,
												"nodeType": "ExpressionStatement",
												"src": "6230:40:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3662,
																"name": "freezePermit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3324,
																"src": "6289:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 3663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6303:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6289:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636f6e747261637420667265657a6564",
															"id": 3665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6309:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b0277e6454e2ac2e31447966d5418245e63192c6d388fa86142f5bb21c10bb6",
																"typeString": "literal_string \"contract freezed\""
															},
															"value": "contract freezed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b0277e6454e2ac2e31447966d5418245e63192c6d388fa86142f5bb21c10bb6",
																"typeString": "literal_string \"contract freezed\""
															}
														],
														"id": 3661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6281:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6281:47:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3667,
												"nodeType": "ExpressionStatement",
												"src": "6281:47:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3669,
																"name": "pointToSwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3631,
																"src": "6432:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3670,
																"name": "pointsMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3312,
																"src": "6447:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6432:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f696e747320746f2073776170206c657373207468616e206d696e706f696e7473",
															"id": 3672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6457:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c76f5dbf815a0d4a0a69b2459d6d3337e979ed437973377d86ebb8708773a32",
																"typeString": "literal_string \"points to swap less than minpoints\""
															},
															"value": "points to swap less than minpoints"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c76f5dbf815a0d4a0a69b2459d6d3337e979ed437973377d86ebb8708773a32",
																"typeString": "literal_string \"points to swap less than minpoints\""
															}
														],
														"id": 3668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6424:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6424:70:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3674,
												"nodeType": "ExpressionStatement",
												"src": "6424:70:15"
											},
											{
												"assignments": [
													3676
												],
												"declarations": [
													{
														"constant": false,
														"id": 3676,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6510:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "6505:11:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3675,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6505:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3680,
												"initialValue": {
													"arguments": [
														{
															"id": 3678,
															"name": "pointToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "6539:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3677,
														"name": "checkAmountToRecive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3443,
														"src": "6519:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6519:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6505:46:15"
											},
											{
												"expression": {
													"id": 3683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3681,
														"name": "claimedPaymentCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3316,
														"src": "6562:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3682,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3676,
														"src": "6584:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6562:28:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3684,
												"nodeType": "ExpressionStatement",
												"src": "6562:28:15"
											},
											{
												"assignments": [
													3686
												],
												"declarations": [
													{
														"constant": false,
														"id": 3686,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "6606:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "6601:9:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3685,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6601:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3693,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3687,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3676,
																	"src": "6614:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3688,
																	"name": "withdrawalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3310,
																	"src": "6621:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6614:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3690,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6613:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6613:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6601:38:15"
											},
											{
												"assignments": [
													3695
												],
												"declarations": [
													{
														"constant": false,
														"id": 3695,
														"mutability": "mutable",
														"name": "amoutAfterFee",
														"nameLocation": "6655:13:15",
														"nodeType": "VariableDeclaration",
														"scope": 3724,
														"src": "6650:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3694,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6650:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3699,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3696,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3676,
														"src": "6671:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3697,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3686,
														"src": "6679:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6671:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6650:33:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3703,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3629,
															"src": "6771:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3704,
															"name": "amoutAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3695,
															"src": "6776:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3700,
															"name": "_IpaymentcoinT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3304,
															"src": "6743:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 3702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6758:12:15",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "6743:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$250_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6743:47:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3706,
												"nodeType": "ExpressionStatement",
												"src": "6743:47:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3710,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6829:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6833:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6829:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3712,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3686,
															"src": "6840:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3707,
															"name": "_IpaymentcoinT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3304,
															"src": "6801:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$250",
																"typeString": "contract IERC20"
															}
														},
														"id": 3709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6816:12:15",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 336,
														"src": "6801:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$250_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$250_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3714,
												"nodeType": "ExpressionStatement",
												"src": "6801:44:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3716,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3629,
															"src": "6866:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3717,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6877:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6871:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3719,
															"name": "pointToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "6887:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3720,
															"name": "amoutAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3695,
															"src": "6899:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3721,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3686,
															"src": "6913:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3715,
														"name": "swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3336,
														"src": "6861:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 3722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6861:57:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3723,
												"nodeType": "EmitStatement",
												"src": "6856:62:15"
											}
										]
									},
									"documentation": {
										"id": 3627,
										"nodeType": "StructuredDocumentation",
										"src": "5814:167:15",
										"text": "@dev admin signs a user ,amount ,deadline  ofchain and pass the signature  to the user to swap points to worldcoin or payment coin ,but this is done automatically "
									},
									"functionSelector": "f9c3a1e8",
									"id": 3725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitSwapToPaymentCoin",
									"nameLocation": "6041:23:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3629,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6073:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6065:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "pointToSwap",
												"nameLocation": "6083:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6078:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6078:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3633,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6103:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6095:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6095:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3635,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6118:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6112:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3634,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6112:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3637,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6128:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6120:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3639,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6138:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3725,
												"src": "6130:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3638,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6064:76:15"
									},
									"returnParameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6147:0:15"
									},
									"scope": 3879,
									"src": "6032:894:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3772,
										"nodeType": "Block",
										"src": "7130:270:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3738,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3728,
																"src": "7149:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7174:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7166:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3739,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7166:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7166:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7149:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206172652073656e64696e6720746f207a65726f2061646472657373",
															"id": 3744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7177:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															},
															"value": "you are sending to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															}
														],
														"id": 3737,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7141:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7141:70:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3746,
												"nodeType": "ExpressionStatement",
												"src": "7141:70:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3748,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3730,
																"src": "7230:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7245:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7237:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3749,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7237:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7237:10:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7230:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206172652073656e64696e6720746f207a65726f2061646472657373",
															"id": 3754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7248:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															},
															"value": "you are sending to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfcbc55954ff3c3648bf836f0c0443d2846c45059c6a994cd6ea8e59a9d74641",
																"typeString": "literal_string \"you are sending to zero address\""
															}
														],
														"id": 3747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7222:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7222:60:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3756,
												"nodeType": "ExpressionStatement",
												"src": "7222:60:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3758,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3732,
																"src": "7301:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7311:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7301:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e742073656e64207a65726f20616d6f756e74",
															"id": 3761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7313:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b379c917a4dc8c3898738d13abfa21e18194ad28cbafadbd6c44246f20237637",
																"typeString": "literal_string \"cant send zero amount\""
															},
															"value": "cant send zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b379c917a4dc8c3898738d13abfa21e18194ad28cbafadbd6c44246f20237637",
																"typeString": "literal_string \"cant send zero amount\""
															}
														],
														"id": 3757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7293:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7293:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3763,
												"nodeType": "ExpressionStatement",
												"src": "7293:44:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3768,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3730,
															"src": "7380:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3769,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3732,
															"src": "7384:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3765,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3728,
																	"src": "7356:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3764,
																"name": "IERC20T",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3284,
																"src": "7348:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20T_$3284_$",
																	"typeString": "type(contract IERC20T)"
																}
															},
															"id": 3766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7348:22:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20T_$3284",
																"typeString": "contract IERC20T"
															}
														},
														"id": 3767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7371:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3276,
														"src": "7348:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7348:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3771,
												"nodeType": "ExpressionStatement",
												"src": "7348:44:15"
											}
										]
									},
									"documentation": {
										"id": 3726,
										"nodeType": "StructuredDocumentation",
										"src": "6939:94:15",
										"text": "@dev this is used to withdraw any asset stuck in the contract by mistake by only the admin"
									},
									"functionSelector": "e63ea408",
									"id": 3773,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3734,
												"name": "onlyOwner",
												"nameLocations": [
													"7121:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7121:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "7121:9:15"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7048:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3728,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "7074:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3773,
												"src": "7066:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3730,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7096:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3773,
												"src": "7088:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7088:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3732,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7105:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3773,
												"src": "7100:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3731,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7100:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7065:49:15"
									},
									"returnParameters": {
										"id": 3736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7130:0:15"
									},
									"scope": 3879,
									"src": "7039:361:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3877,
										"nodeType": "Block",
										"src": "7866:676:15",
										"statements": [
											{
												"documentation": "used to prevent signature replay to avoid signature been used more once",
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 3790,
																			"name": "sig_v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3358,
																			"src": "7969:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
																				"typeString": "mapping(uint8 => bool)"
																			}
																		},
																		"id": 3792,
																		"indexExpression": {
																			"id": 3791,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3782,
																			"src": "7975:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7969:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 3793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7979:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "7969:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 3795,
																			"name": "sig_r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "7988:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																				"typeString": "mapping(bytes32 => bool)"
																			}
																		},
																		"id": 3797,
																		"indexExpression": {
																			"id": 3796,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3784,
																			"src": "7994:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7988:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 3798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8000:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "7988:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7969:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3801,
																		"name": "sig_s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "8009:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																			"typeString": "mapping(bytes32 => bool)"
																		}
																	},
																	"id": 3803,
																	"indexExpression": {
																		"id": 3802,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3786,
																		"src": "8015:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8009:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 3804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8019:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8009:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7969:55:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7369672075736564",
															"id": 3807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8025:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_caec8756a40efc76a36098b7e1250a0625590caab7950a2b4ad5e46b24f6665d",
																"typeString": "literal_string \"sig used\""
															},
															"value": "sig used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_caec8756a40efc76a36098b7e1250a0625590caab7950a2b4ad5e46b24f6665d",
																"typeString": "literal_string \"sig used\""
															}
														],
														"id": 3789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7961:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7961:75:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3809,
												"nodeType": "ExpressionStatement",
												"src": "7961:75:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3810,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8051:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8057:9:15",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8051:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3812,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3780,
														"src": "8069:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8051:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3819,
												"nodeType": "IfStatement",
												"src": "8047:99:15",
												"trueBody": {
													"id": 3818,
													"nodeType": "Block",
													"src": "8079:67:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3815,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3780,
																		"src": "8125:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3814,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3348,
																	"src": "8101:23:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8101:33:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3817,
															"nodeType": "RevertStatement",
															"src": "8094:40:15"
														}
													]
												}
											},
											{
												"assignments": [
													3821
												],
												"declarations": [
													{
														"constant": false,
														"id": 3821,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "8164:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 3877,
														"src": "8156:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3820,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8156:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3832,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3825,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3298,
																	"src": "8198:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3826,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3322,
																	"src": "8215:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3827,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3776,
																	"src": "8222:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3778,
																	"src": "8228:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3829,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3780,
																	"src": "8235:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8187:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8191:6:15",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8187:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8187:57:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3822,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8177:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8177:68:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8156:89:15"
											},
											{
												"assignments": [
													3834
												],
												"declarations": [
													{
														"constant": false,
														"id": 3834,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "8265:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3877,
														"src": "8257:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3833,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8257:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3838,
												"initialValue": {
													"arguments": [
														{
															"id": 3836,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3821,
															"src": "8289:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3835,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "8272:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8272:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8257:43:15"
											},
											{
												"assignments": [
													3840
												],
												"declarations": [
													{
														"constant": false,
														"id": 3840,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "8321:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3877,
														"src": "8313:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3839,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8313:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3848,
												"initialValue": {
													"arguments": [
														{
															"id": 3843,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3834,
															"src": "8344:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3844,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3782,
															"src": "8350:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3845,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3784,
															"src": "8353:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3846,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3786,
															"src": "8356:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3841,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "8330:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1789_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8336:7:15",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1739,
														"src": "8330:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8330:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8313:45:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3849,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3840,
														"src": "8373:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3850,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "8383:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8373:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3858,
												"nodeType": "IfStatement",
												"src": "8369:90:15",
												"trueBody": {
													"id": 3857,
													"nodeType": "Block",
													"src": "8390:69:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3853,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3840,
																		"src": "8433:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3854,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3322,
																		"src": "8441:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3852,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3354,
																	"src": "8412:20:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8412:35:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3856,
															"nodeType": "RevertStatement",
															"src": "8405:42:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3859,
															"name": "sig_v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3358,
															"src": "8469:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
																"typeString": "mapping(uint8 => bool)"
															}
														},
														"id": 3861,
														"indexExpression": {
															"id": 3860,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3782,
															"src": "8475:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8469:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8478:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8469:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3864,
												"nodeType": "ExpressionStatement",
												"src": "8469:13:15"
											},
											{
												"expression": {
													"id": 3869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3865,
															"name": "sig_r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3362,
															"src": "8493:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 3867,
														"indexExpression": {
															"id": 3866,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3784,
															"src": "8499:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8493:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8502:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8493:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3870,
												"nodeType": "ExpressionStatement",
												"src": "8493:13:15"
											},
											{
												"expression": {
													"id": 3875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3871,
															"name": "sig_s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "8517:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 3873,
														"indexExpression": {
															"id": 3872,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3786,
															"src": "8523:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8517:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8526:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8517:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3876,
												"nodeType": "ExpressionStatement",
												"src": "8517:13:15"
											}
										]
									},
									"documentation": {
										"id": 3774,
										"nodeType": "StructuredDocumentation",
										"src": "7622:73:15",
										"text": "@dev _permit is used for offchain signature verification of the admin"
									},
									"id": 3878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_permit",
									"nameLocation": "7710:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3776,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7736:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "7728:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7728:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7759:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "7751:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3780,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7783:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "7775:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7775:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3782,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "7808:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "7802:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3781,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7802:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3784,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "7828:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "7820:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3786,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7848:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3878,
												"src": "7840:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:139:15"
									},
									"returnParameters": {
										"id": 3788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7866:0:15"
									},
									"scope": 3879,
									"src": "7701:841:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3880,
							"src": "650:7898:15",
							"usedErrors": [
								13,
								18,
								303,
								584,
								589,
								592,
								873,
								875,
								1452,
								1457,
								1462,
								3348,
								3354
							],
							"usedEvents": [
								24,
								152,
								3336,
								3344
							]
						}
					],
					"src": "46:8502:15"
				},
				"id": 15
			}
		}
	}
}